{"version":3,"sources":["containers/Navbar.jsx","components/GraphView.jsx","components/Message.jsx","components/GenerationForm.jsx","pages/GraphEditorPage.jsx","components/ListItem.jsx","components/GraphList.jsx","pages/GraphListPage.jsx","pages/HomePage.jsx","models/Paths.js","models/Queue.js","components/QueueResultTable.jsx","components/QueueView.jsx","pages/QueuePage.jsx","components/ModellingForm.jsx","models/Error.js","models/Model.js","components/ModellingView.jsx","pages/ModellingPage.jsx","containers/Routes.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","NavLink","to","class","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","exact","TYPE_CS","TYPE_TASK","GraphView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","locales","uk","edit","del","back","addNode","addEdge","editNode","editEdge","addDescription","edgeDescription","editEdgeDescription","createEdgeError","deleteClusterError","editClusterError","params","data","callback","mode","isEdit","isEdge","lastId","state","nodes","map","node","sort","b","number","isNaN","weight","getWeight","label","concat","e","console","log","onDoubleClick","edges","_this$state","_this$state$data","nodesS","edgesS","length","get","update","objectSpread","edge","name","network","appRef","createRef","options","locale","physics","enabled","manipulation","undefined","manipulationActive","initiallyActive","arrows","prompt","parseInt","alert","prevProps","prevState","_this2","Network","current","on","setState","body","snapshot","_this3","_this$props","height","width","style","ref","Component","Message","_ref","message","GenerationForm","vertexNumb","maxWeight","minWeight","correlation","handleChange","defineProperty","target","value","autoComplete","onChange","min","step","max","onClick","onGenerate","ID","Math","random","toString","substr","GraphEditorPage","graphName","DataSet","handleSubmit","history","preventDefault","graphToMatrix","isCyclic","error","isConnected","_data","values","graphs","localStorage","getItem","JSON","parse","oldTask","filter","item","task","created","Date","updated","toConsumableArray","push","setItem","stringify","urlParams","URLSearchParams","window","location","search","next","has","handleGenerate","formData","generate","_this$state$data2","newNodes","i","_getRandomInt","x","y","weights","reduce","sum","lengths","round","matrix","arr","slice","cur_l_w","number1","number2","tmp","newEdges","forEach","j","from","clear","add","cycle","remove","ids","getIds","randomEdgeId","randowEdge","generated","nodesWeightSum","edgesWeightSum","ceil","floor","errorRef","React","graphRef","_this$props2","graph","_graph$data","scrollTo","offsetTop","_this$state$data3","connectedNodes","aid","found","paths","isConnectedUtil","keys","s","solutions","dist","parent","nearest","Infinity","n","ndist","adj","d","_this$state$data4","graphNodes","visited","recStack","cycleCheck","cyclicUtil","index","nodeNeighbors","currentNode","_this$props3","Fragment","required","placeholder","components_Message","components_GraphView","components_GenerationForm","withRouter","ListItem","onDelete","onClone","scope","Link","toLocaleString","year","month","day","hour","minute","second","role","title","react_fontawesome_index_es","icon","faThList","faPen","faClone","faTrash","GraphList","list","items","components_ListItem","key","HomePage","handleDelete","confirm","_getGraphs","handleClone","date","handleDeleteAll","handleNew","view","showModal","faPlus","faTrashAlt","components_GraphList","_hasEdgeBeenFollowedInPath","_ref2","path","val","indices","_allIndices","some","_ref$graph","arguments","linkedNodes","fn","cache","Map","cached","apply","set","_memoize","p","c","bind","explore","currNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","linkedNode","result","err","return","pop","Queue","method","_method","_run1","_run11","Error","reverse","_this$_data","_this$_data2","_toEdgesArray","allNodes","matrixNodes","_toMatrix","endNodes","includes","maxPaths","maxPath","_getPaths","_this$_BFS","_BFS","graphWeight","lengthes","graphLength","names","adjMatrix","_toUndirectedMatrix","QueueResultTable","queue","data-item","toFixed","QueueView","handleOptionChange","algo","results","run","resultsRef","description","1","11","htmlFor","disabled","components_QueueResultTable","QueuePage","pathname","components_QueueView","ModellingForm","csGraphRef","tasksGraphRef","getGraphs","onSubmit","assignmentAlgo","tasks","handleChangeGraph","renderGraphList","tasksData","cs","csData","ExecutionError","text","READY_STATUS","RUNNING_STATUS","FINISHED_STATUS","TRANSMISSION_STATUS","Model","_getColorArray","colors","randomMC","getColor","_formDependecies","dependencies","parents","status","_prepareProcessors","processors","preparedProcessors","processor","standBy","_checkParent","taskId","processorId","tact","tacts","assignmentLog","ended","parentId","tasksOnProcessors","parentAssignedInfo","parentProcessor","lastTransmittion","intermediartry","transmissionTacts","transmissionEndArray","stop","targetId","source","transmissionStart","readOnlyError","transmissionEnd","transmittingTask","endTransmissionOn","parseFloat","color","isFinite","_executeTask","_getFreeProcessors","tackt","freeProcessorsIds","processorsQueue","_getReadyTasks","readyTasks","preparedParents","every","_checkFinish","_processorsStandBy","_checkTransmittionFinish","_canExecuteOnProcessor","_this$assignmentLog$p","parentProcessorId","model","freeProcessors","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","TypeError","ModellingView","renderLines","lines","lineId","line","es","strokeWidth","animation","strokeDasharray","renderLabels","start","end","fontSize","labelAnchorY","labelAnchor–•","getMax","o","join","xType","yType","xDomain","yDomain","position","tickValues","tickFormat","numb","ModellingPage","getById","_this$setState2","components_ModellingForm","components_ModellingView","Routes","Switch","Route","render","document","pages_HomePage","GraphListPage","pages_GraphEditorPage","match","pages_QueuePage","pages_ModellingPage","_tasks$filter$0$data","_cs$filter$0$data","library","faIgloo","App","BrowserRouter","basename","process","containers_Navbar","containers_Routes","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b2639c4a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"jquery/dist/jquery\";\r\nimport \"popper.js/dist/popper\";\r\nimport \"bootstrap/dist/js/bootstrap\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <NavLink className=\"navbar-brand\" to=\"/\">\r\n        –ü–ó–ö–°-2\r\n      </NavLink>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/tasks\">\r\n              –ì—Ä–∞—Ñ –∑–∞–¥–∞—á <span className=\"sr-only\">(current)</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/cs\">\r\n              –ì—Ä–∞—Ñ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              exact\r\n              className=\"nav-link\"\r\n              activeClassName=\"active\"\r\n              to=\"/model\"\r\n            >\r\n              –ú–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              exact\r\n              className=\"nav-link disabled\"\r\n              activeClassName=\"active\"\r\n              to=\"/stats\"\r\n            >\r\n              –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Network } from \"vis\";\r\nimport React, { Component, createRef } from \"react\";\r\nimport \"vis/dist/vis.css\";\r\n\r\nconst TYPE_CS = 1;\r\nconst TYPE_TASK = 2;\r\n\r\nclass GraphView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.type = props.name === \"tasks\" ? TYPE_TASK : TYPE_CS;\r\n    this.network = {};\r\n    this.appRef = createRef();\r\n    this.options = {\r\n      locales: this.locales,\r\n      locale: \"uk\",\r\n      physics: {\r\n        enabled: false\r\n      },\r\n      manipulation: {\r\n        enabled:\r\n          this.props.manipulationActive !== undefined\r\n            ? this.props.manipulationActive\r\n            : true,\r\n        initiallyActive: true,\r\n        addNode: (data, callback) => {\r\n          this.params(data, callback, \"add\", \"–≤–µ—Ä—à–∏–Ω–∏\");\r\n        },\r\n        // editNode: (data, callback) => {\r\n        //   this.params(data, callback, \"edit\", \"–≤–µ—Ä—à–∏–Ω–∏\");\r\n        // },\r\n        addEdge: (data, callback) => {\r\n          this.params(data, callback, \"add\", \"–∑–≤'—è–∑–∫—É\");\r\n        }\r\n        // editEdge: (data, callback) => {\r\n        //   this.params(data, callback, \"edit\", \"–∑–≤'—è–∑–∫—É\");\r\n        // }\r\n      },\r\n      edges: {\r\n        arrows: {\r\n          to: {\r\n            enabled: this.type === TYPE_TASK\r\n          }\r\n        }\r\n      }\r\n    };\r\n    this.state = {\r\n      data: props.data,\r\n      type: this.type,\r\n      manipulationActive:\r\n        this.props.manipulationActive !== undefined\r\n          ? this.props.manipulationActive\r\n          : true\r\n    };\r\n  }\r\n\r\n  locales = {\r\n    uk: {\r\n      edit: \"–†–µ–¥–∞–≥—É–≤–∞—Ç–∏\",\r\n      del: \"–í–∏–¥–∞–ª–∏—Ç–∏ –æ–±—Ä–∞–Ω–µ\",\r\n      back: \"–ù–∞–∑–∞–¥\",\r\n      addNode: \"–î–æ–¥–∞—Ç–∏ –≤–µ—Ä—à–∏–Ω—É\",\r\n      addEdge: \"–î–æ–¥–∞—Ç–∏ –∑–≤'—è–∑–æ–∫\",\r\n      editNode: \"–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≤–µ—Ä—à–∏–Ω—É\",\r\n      editEdge: \"–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∑–≤'—è–∑–æ–∫\",\r\n      addDescription: \"–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –ø—É—Å—Ç–æ–º—É –º—ñ—Å—Ü—ñ –∞–±–∏ –¥–æ–¥–∞—Ç–∏ –≤–µ—Ä—à–∏–Ω—É.\",\r\n      edgeDescription:\r\n        \"–ê–±–∏ –∑'—î–¥–Ω–∞—Ç–∏ –≤–µ—Ä—à–∏–Ω–∏ –∫–ª—ñ–∫–Ω—ñ—Ç—å –ø–æ –ø–æ—á–∞—Ç–∫–æ–≤—ñ–π –≤–µ—Ä—à–∏–Ω—ñ —Ç–∞ –ø–æ –∫—ñ–Ω—Ü–µ–≤—ñ–π.\",\r\n      editEdgeDescription:\r\n        \"Click on the control points and drag them to a node to connect to it.\",\r\n      createEdgeError: \"Cannot link edges to a cluster.\",\r\n      deleteClusterError: \"Clusters cannot be deleted.\",\r\n      editClusterError: \"Clusters cannot be edited.\"\r\n    }\r\n  };\r\n\r\n  params = (data, callback, mode, type) => {\r\n    const isEdit = mode === \"edit\";\r\n    const isEdge = type === \"–∑–≤'—è–∑–∫—É\";\r\n    const { nodes } = this.state.data;\r\n    const lastId = nodes.map(node => node.id).sort((a, b) => b - a)[0];\r\n    const number = isEdit ? data.number : !isNaN(lastId) ? lastId + 1 : 0;\r\n    const weight = this.getWeight(type, isEdit, data);\r\n    if (!weight) return;\r\n    const label = `${\r\n      !isEdge\r\n        ? this.state.type === TYPE_CS\r\n          ? `${number}`\r\n          : `${number}\\n ‚Äî \\n${weight}`\r\n        : this.state.type === TYPE_CS\r\n        ? ``\r\n        : `${weight}`\r\n    }`;\r\n    data.number = number;\r\n    data.weight = weight;\r\n    data.label = label;\r\n    if (!isEdit && !isEdge) {\r\n      data.id = number;\r\n    }\r\n    try {\r\n      return callback(data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  getWeight(type, isEdit, data) {\r\n    if (this.state.type === TYPE_CS) return ` `;\r\n    let weight = prompt(`–í–∞–≥–∞ ${type}`, isEdit ? data.weight : ``);\r\n    if (!weight) return alert(`\"–í–∞–≥—É ${type} –Ω–µ –∑–∞–¥–∞–Ω–æ!\"`);\r\n    weight = parseInt(weight);\r\n    if (isNaN(weight)) return alert(`–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –≤–∞–≥–∏ ${type}!`);\r\n    if (weight <= 0)\r\n      return alert(`–í–∞–≥–∞ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ—é —á–∏ –¥–æ—Ä—ñ–≤–Ω—é–≤–∞—Ç–∏ 0`);\r\n    return weight;\r\n  }\r\n\r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    // console.log(`PrevProps: ${JSON.stringify(prevProps)}`);\r\n    // console.log(`NewProps: ${JSON.stringify(this.props)}`);\r\n    return prevProps.data !== this.props.data;\r\n    const { edges, nodes } = this.props.data;\r\n    const { edges: edgesP, nodes: nodesP } = prevProps.data;\r\n    if (!edgesP || !nodesP) return false;\r\n    return edges.length !== edgesP.length || nodes.length !== nodesP.length;\r\n  }\r\n\r\n  onDoubleClick = params => {\r\n    const { nodes, edges } = params;\r\n    const {\r\n      data: { nodes: nodesS, edges: edgesS },\r\n      type\r\n    } = this.state;\r\n    if (type === TYPE_CS) return;\r\n    if (nodes.length > 0) {\r\n      const node = nodesS.get(nodes[0]);\r\n      const weight = this.getWeight(\"–≤–µ—Ä—à–∏–Ω–∏\", true, { weight: node.weight });\r\n      if (!weight) return;\r\n      const label = `${node.id}\\n‚Äî\\n${weight}`;\r\n      nodesS.update({ ...node, weight, label });\r\n    } else {\r\n      const edge = edgesS.get(edges[0]);\r\n      const weight = this.getWeight(\"–∑–≤'—è–∑–∫—É\", true, { weight: edge.weight });\r\n      if (!weight) return;\r\n      const label = `${weight}`;\r\n      edgesS.update({ ...edge, weight, label });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.network = new Network(\r\n      this.appRef.current,\r\n      this.props.data,\r\n      this.options\r\n    );\r\n    if (this.state.type === TYPE_TASK && this.state.manipulationActive)\r\n      this.network.on(\"doubleClick\", params => this.onDoubleClick(params));\r\n    this.setState({\r\n      data: {\r\n        nodes: this.network.body.data.nodes,\r\n        edges: this.network.body.data.edges\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (!snapshot) return;\r\n    this.network = new Network(\r\n      this.appRef.current,\r\n      this.props.data,\r\n      this.options\r\n    );\r\n    if (this.state.type === TYPE_TASK && this.state.manipulationActive)\r\n      this.network.on(\"doubleClick\", params => this.onDoubleClick(params));\r\n    this.setState({\r\n      data: {\r\n        nodes: this.network.body.data.nodes,\r\n        edges: this.network.body.data.edges\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { height, width } = this.props;\r\n    return (\r\n      <div\r\n        className=\"my-3\"\r\n        style={{\r\n          height: height ? height : \"600px\",\r\n          width: width ? width : \"100%\"\r\n        }}\r\n        ref={this.appRef}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GraphView;\r\n","import React from \"react\";\r\n\r\nconst Message = ({ type, message }) => {\r\n  return (\r\n    <div\r\n      className={`alert ${type === \"error\" ? \"alert-danger\" : \"alert-info\"}`}\r\n    >\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\n\r\nclass GenerationForm extends Component {\r\n  state = {\r\n    vertexNumb: 5,\r\n    maxWeight: 10,\r\n    minWeight: 1,\r\n    correlation: 0.5\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { vertexNumb, maxWeight, minWeight, correlation } = this.state;\r\n    return (\r\n      <div className=\"my-4\">\r\n        <h4>–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≥—Ä–∞—Ñ—É –∑–∞–¥–∞—á</h4>\r\n        <form className=\"py-4\">\r\n          <div className=\"input-group mb-2\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text\">–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–µ—Ä—à–∏–Ω (–∑–∞–¥–∞—á): </div>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              autoComplete=\"off\"\r\n              name=\"vertexNumb\"\r\n              value={vertexNumb}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-2\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text\">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –≤–∞–≥–∞ –≤–µ—Ä—à–∏–Ω–∏: </div>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"maxWeight\"\r\n              min=\"1\"\r\n              autoComplete=\"off\"\r\n              value={maxWeight}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-2\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text\">–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –≤–∞–≥–∞ –≤–µ—Ä—à–∏–Ω–∏: </div>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min=\"1\"\r\n              autoComplete=\"off\"\r\n              name=\"minWeight\"\r\n              value={minWeight}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-2\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text\">–ó–≤'—è–∑–Ω—ñ—Å—Ç—å: </div>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              autoComplete=\"off\"\r\n              step=\"0.01\"\r\n              min=\"0\"\r\n              max=\"1\"\r\n              name=\"correlation\"\r\n              value={correlation}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary float-right\"\r\n            onClick={e => this.props.onGenerate(e, this.state)}\r\n          >\r\n            –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerationForm;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { DataSet } from \"vis\";\r\nimport GraphView from \"../components/GraphView\";\r\nimport Message from \"../components/Message\";\r\nimport GenerationForm from \"../components/GenerationForm\";\r\n\r\nconst ID = () =>\r\n  \"_\" +\r\n  Math.random()\r\n    .toString(36)\r\n    .substr(2, 9);\r\n\r\nclass GraphEditorPage extends Component {\r\n  state = {\r\n    graphName: \"\",\r\n    data: {\r\n      edges: new DataSet(),\r\n      nodes: new DataSet()\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.errorRef = React.createRef();\r\n    this.graphRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id, name } = this.props;\r\n    if (!id) return;\r\n    let graphs = localStorage.getItem(`${name}`);\r\n    if (!graphs) return;\r\n    graphs = JSON.parse(graphs);\r\n    const graph = graphs.filter(item => item.id === id)[0];\r\n    const { edges, nodes } = graph.data;\r\n    const data = { edges: new DataSet(edges), nodes: new DataSet(nodes) };\r\n    this.setState({ graphName: graph.name, data });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.error) {\r\n      window.scrollTo(0, this.errorRef.current.offsetTop);\r\n    }\r\n    if (this.state.generated) {\r\n      window.scrollTo(0, this.graphRef.current.offsetTop);\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { history, id, name } = this.props;\r\n    e.preventDefault();\r\n    this.graphToMatrix();\r\n    if (name !== \"cs\" && this.isCyclic()) {\r\n      this.setState({ error: \"–¶–∏–∫–ª—ñ—á–Ω–∏–π –≥—Ä–∞—Ñ!\" });\r\n      return;\r\n    }\r\n    if (name !== \"tasks\" && this.isConnected()) {\r\n      this.setState({ error: \"–ì—Ä–∞—Ñ –Ω–µ–∑–≤'—è–∑–Ω–∏–π!\" });\r\n      return;\r\n    }\r\n    let { nodes, edges } = this.state.data;\r\n    nodes = nodes._data ? Object.values(nodes._data) : [];\r\n    edges = edges._data ? Object.values(edges._data) : [];\r\n    const data = { nodes, edges };\r\n    const { graphName } = this.state;\r\n    let graphs = localStorage.getItem(`${name}`);\r\n    graphs = !graphs ? [] : JSON.parse(graphs);\r\n    let oldTask = {};\r\n    if (id) oldTask = graphs.filter(item => item.id === id)[0];\r\n    const task = {\r\n      name: graphName ? graphName : `–ë–µ–∑ —ñ–º–µ–Ω—ñ ${graphs.length}`,\r\n      data: data,\r\n      id: id ? oldTask.id : ID(),\r\n      created: id ? oldTask.created : new Date(),\r\n      updated: new Date()\r\n    };\r\n    if (id) graphs = [...graphs.filter(item => item.id !== id), task];\r\n    else graphs.push(task);\r\n    localStorage.setItem(`${name}`, JSON.stringify(graphs));\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const next = urlParams.has(\"next\") ? urlParams.get(\"next\") : null;\r\n    console.log(next);\r\n    history.push(`${next ? next : `/${name}`}`);\r\n  };\r\n\r\n  isConnected() {\r\n    const { nodes, edges } = this.state.data;\r\n    const connectedNodes = {};\r\n    const graph = {};\r\n    nodes.forEach(node => {\r\n      connectedNodes[node.id] = [];\r\n    });\r\n    edges.forEach(edge => {\r\n      connectedNodes[edge.from].push(edge.to);\r\n      connectedNodes[edge.to].push(edge.from);\r\n    });\r\n    for (var id in connectedNodes) {\r\n      if (!graph[id]) graph[id] = {};\r\n      // eslint-disable-next-line\r\n      connectedNodes[id].forEach(function(aid) {\r\n        graph[id][aid] = 1;\r\n        if (!graph[aid]) graph[aid] = {};\r\n        graph[aid][id] = 1;\r\n      });\r\n    }\r\n    let found = false;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const node = nodes.get(i);\r\n      if (!node) continue;\r\n      const paths = this.isConnectedUtil(node.id, graph);\r\n      if (Object.keys(paths).length !== Object.keys(graph).length) {\r\n        found = true;\r\n        break;\r\n      }\r\n    }\r\n    return found;\r\n  }\r\n\r\n  isConnectedUtil(s, graph) {\r\n    const solutions = {};\r\n    solutions[s] = [];\r\n    solutions[s].dist = 0;\r\n\r\n    while (true) {\r\n      let parent = null;\r\n      let nearest = null;\r\n      let dist = Infinity;\r\n      for (let n in solutions) {\r\n        if (!solutions[n]) continue;\r\n        const ndist = solutions[n].dist;\r\n        const adj = graph[n];\r\n        for (let a in adj) {\r\n          if (solutions[a]) continue;\r\n          const d = adj[a] + ndist;\r\n          if (d < dist) {\r\n            parent = solutions[n];\r\n            nearest = a;\r\n            dist = d;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (dist === Infinity) {\r\n        break;\r\n      }\r\n\r\n      solutions[nearest] = parent.concat(nearest);\r\n      solutions[nearest].dist = dist;\r\n    }\r\n\r\n    return solutions;\r\n  }\r\n\r\n  graphToMatrix() {\r\n    let { nodes, edges } = this.state.data;\r\n    this.matrix = {};\r\n    nodes.forEach(node => {\r\n      this.matrix[node.id] = [];\r\n    });\r\n    edges.forEach(edge => {\r\n      this.matrix[edge.from].push(edge.to);\r\n    });\r\n  }\r\n\r\n  isCyclic() {\r\n    debugger;\r\n    const graphNodes = Object.keys(this.matrix);\r\n    const visited = {};\r\n    const recStack = {};\r\n\r\n    for (let i = 0; i < graphNodes.length; i++) {\r\n      const node = graphNodes[i];\r\n      const cycleCheck = this.cyclicUtil(node, visited, recStack);\r\n      if (cycleCheck !== -1) return { from: parseInt(node), to: cycleCheck };\r\n    }\r\n    return false;\r\n  }\r\n\r\n  cyclicUtil(index, visited, recStack) {\r\n    if (!visited[index]) {\r\n      visited[index] = true;\r\n      recStack[index] = true;\r\n      const nodeNeighbors = this.matrix[index];\r\n      for (let i = 0; i < nodeNeighbors.length; i++) {\r\n        const currentNode = nodeNeighbors[i];\r\n        if (\r\n          !visited[currentNode] &&\r\n          this.cyclicUtil(currentNode, visited, recStack) !== -1\r\n        )\r\n          return currentNode;\r\n        else if (recStack[currentNode]) return currentNode;\r\n      }\r\n    }\r\n    recStack[index] = false;\r\n    return -1;\r\n  }\r\n\r\n  handleGenerate = (e, formData) => {\r\n    e.preventDefault();\r\n    const { vertexNumb, maxWeight, minWeight, correlation } = formData;\r\n    this.generate(vertexNumb, maxWeight, minWeight, correlation);\r\n  };\r\n\r\n  generate = (vertexNumb, maxWeight, minWeight, correlation) => {\r\n    const { edges, nodes } = this.state.data;\r\n    const newNodes = [];\r\n    for (let i = 0; i < vertexNumb; i++) {\r\n      const weight = this._getRandomInt(minWeight, maxWeight);\r\n      newNodes.push({\r\n        id: i,\r\n        number: i,\r\n        weight,\r\n        label: `${i}\\n‚Äî\\n${weight}`,\r\n        x: this._getRandomInt(-500, 500),\r\n        y: this._getRandomInt(-500, 500)\r\n      });\r\n    }\r\n    const weights = newNodes.reduce((sum, node) => (sum += node.weight), 0);\r\n    const lengths = Math.round((weights * (1 - correlation)) / correlation);\r\n    const matrix = [];\r\n    const arr = [];\r\n    for (let i = 0; i < vertexNumb; i++) arr.push(0);\r\n    for (let i = 0; i < vertexNumb; i++) matrix.push(arr.slice());\r\n    let cur_l_w = 0;\r\n    while (cur_l_w < lengths) {\r\n      let number1 = this._getRandomInt(0, vertexNumb - 1);\r\n      let number2 = this._getRandomInt(0, vertexNumb - 1);\r\n      if (number1 === number2) number2 = number1 + 1;\r\n      if (matrix[number2][number1] > 0) {\r\n        const tmp = number1;\r\n        number1 = number2;\r\n        number2 = tmp;\r\n      }\r\n      matrix[number1][number2] += 1;\r\n      cur_l_w += 1;\r\n    }\r\n    const newEdges = [];\r\n    matrix.forEach((arr, i) => {\r\n      arr.forEach((value, j) => {\r\n        if (value > 0)\r\n          newEdges.push({ from: i, to: j, weight: value, label: `${value}` });\r\n      });\r\n    });\r\n    nodes.clear();\r\n    edges.clear();\r\n    nodes.add(newNodes);\r\n    edges.add(newEdges);\r\n    this.graphToMatrix();\r\n    let cycle = this.isCyclic();\r\n    while (cycle) {\r\n      // eslint-disable-next-line\r\n      edges.forEach(edge => {\r\n        console.log(\r\n          `${JSON.stringify(edge)}, cycle: ${JSON.stringify(\r\n            cycle\r\n          )} ${edge.from === cycle.from && edge.to === cycle.to}`\r\n        );\r\n        if (edge.from === cycle.from && edge.to === cycle.to) {\r\n          const weight = edge.weight;\r\n          edges.remove(edge.id);\r\n          const ids = edges.getIds();\r\n          const randomEdgeId = ids[this._getRandomInt(0, ids.length)];\r\n          console.log(edges.get(randomEdgeId));\r\n          const randowEdge = edges.get(randomEdgeId);\r\n          edges.update({\r\n            id: randomEdgeId,\r\n            weight: randowEdge.weight + weight,\r\n            label: `${randowEdge.weight + weight}`\r\n          });\r\n          console.log(edges.get(randomEdgeId));\r\n          this.graphToMatrix();\r\n          cycle = this.isCyclic();\r\n          return;\r\n        }\r\n      });\r\n    }\r\n    this.setState({\r\n      generated: true,\r\n      nodesWeightSum: weights,\r\n      edgesWeightSum: cur_l_w\r\n    });\r\n  };\r\n\r\n  _getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      graphName,\r\n      data,\r\n      error,\r\n      edgesWeightSum,\r\n      nodesWeightSum,\r\n      generated\r\n    } = this.state;\r\n    const { name, id } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"my-4\">\r\n          <h4 className=\"my-4\">–†–µ–¥–∞–∫—Ç–æ—Ä –≥—Ä–∞—Ñ—É</h4>\r\n          <form>\r\n            <div className=\"form-group\" ref={this.errorRef}>\r\n              <input\r\n                name=\"graphName\"\r\n                autoComplete=\"off\"\r\n                required\r\n                value={graphName}\r\n                onChange={this.handleChange}\r\n                className=\"form-control\"\r\n                placeholder=\"–ù–∞–∑–≤–∞ –≥—Ä–∞—Ñ—É\"\r\n              />\r\n            </div>\r\n            {error && <Message type=\"error\" message={error} />}\r\n            <GraphView data={data} name={this.props.name} ref={this.graphRef} />\r\n            {generated && (\r\n              <div>{`–°—É–º–∞—Ä–Ω–∞ –≤–∞–≥–∞ –≤–µ—Ä—à–∏–Ω –≥—Ä–∞—Ñ—É: ${nodesWeightSum}, c—É–º–∞—Ä–Ω–∞ –≤–∞–≥–∞ –¥—É–≥ –≥—Ä–∞—Ñ—É: ${edgesWeightSum}`}</div>\r\n            )}\r\n            <input\r\n              type=\"submit\"\r\n              onClick={this.handleSubmit}\r\n              className=\"btn btn-primary float-right\"\r\n              value=\"–ó–±–µ—Ä–µ–≥—Ç–∏\"\r\n            />\r\n          </form>\r\n        </div>\r\n\r\n        {name === \"tasks\" && !id && (\r\n          <GenerationForm\r\n            onGenerate={(e, formData) => this.handleGenerate(e, formData)}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(GraphEditorPage);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faThList,\r\n  faPen,\r\n  faClone\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ListItem = ({ item, index, onDelete, onClone, name }) => {\r\n  return (\r\n    <tr>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>\r\n        <Link to={`/${name}/${item.id}`}>\r\n          {item.name ? item.name : \"–ë–µ–∑ —ñ–º–µ–Ω—ñ\"}\r\n        </Link>\r\n      </td>\r\n      <td>\r\n        {new Date(item.created).toLocaleString(\"uk-UA\", {\r\n          year: \"numeric\",\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n          hour: \"numeric\",\r\n          minute: \"numeric\",\r\n          second: \"numeric\"\r\n        })}\r\n      </td>\r\n      <td>\r\n        {new Date(item.updated).toLocaleString(\"uk-UA\", {\r\n          year: \"numeric\",\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n          hour: \"numeric\",\r\n          minute: \"numeric\",\r\n          second: \"numeric\"\r\n        })}\r\n      </td>\r\n      <td>\r\n        <div className=\"btn-group\" role=\"group\">\r\n          {name === \"tasks\" && (\r\n            <Link\r\n              to={`/tasks/${item.id}/queue`}\r\n              className=\"btn btn-primary btn-sm\"\r\n              title=\"–°—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ —á–µ—Ä–≥—É\"\r\n            >\r\n              <FontAwesomeIcon icon={faThList} />\r\n            </Link>\r\n          )}\r\n          <Link\r\n            to={`/${name}/${item.id}`}\r\n            className=\"btn btn-primary btn-sm\"\r\n            title=\"–†–µ–¥–∞–≥—É–≤–∞—Ç–∏\"\r\n          >\r\n            <FontAwesomeIcon icon={faPen} />\r\n          </Link>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info btn-sm\"\r\n            onClick={() => onClone(item.id)}\r\n            title=\"–ö–ª–æ–Ω—É–≤–∞—Ç–∏\"\r\n          >\r\n            <FontAwesomeIcon icon={faClone} />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger btn-sm\"\r\n            onClick={() => onDelete(item.id)}\r\n            title=\"–í–∏–¥–∞–ª–∏—Ç–∏\"\r\n          >\r\n            <FontAwesomeIcon icon={faTrash} />\r\n          </button>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nconst GraphList = ({ list, onDelete, onClone, name }) => {\r\n  if (!list || list.length < 1)\r\n    return <h6 className=\"text-center my-2 text-secondary\">–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç–∏–π</h6>;\r\n  const items = list\r\n    .sort((a, b) => new Date(b.created) - new Date(a.created))\r\n    .map((item, index) => (\r\n      <ListItem\r\n        key={item.id}\r\n        item={item}\r\n        index={index}\r\n        onDelete={onDelete}\r\n        onClone={onClone}\r\n        name={name}\r\n      />\r\n    ));\r\n  return (\r\n    <React.Fragment>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ width: \"10%\" }}>#</th>\r\n            <th style={{ width: \"30%\" }}>–Ü–º'—è</th>\r\n            <th style={{ width: \"25%\" }}>–°—Ç–≤–æ—Ä–µ–Ω–æ</th>\r\n            <th style={{ width: \"25%\" }}>–û–Ω–æ–≤–ª–µ–Ω–æ</th>\r\n            <th style={{ width: \"10%\" }}>–û–ø–µ—Ä–∞—Ü—ñ—ó</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{items}</tbody>\r\n      </table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GraphList;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport GraphList from \"../components/GraphList\";\r\n\r\nconst ID = () =>\r\n  \"_\" +\r\n  Math.random()\r\n    .toString(36)\r\n    .substr(2, 9);\r\n\r\nclass HomePage extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    if (!this.props.name) return;\r\n    const graphs = localStorage.getItem(this.props.name);\r\n    if (!graphs) return this.setState({ graphs: [] });\r\n    this.setState({ graphs: JSON.parse(graphs) });\r\n  }\r\n\r\n  handleDelete = id => {\r\n    const deleteConfirmation = window.confirm(\"–î—ñ–π—Å–Ω–æ –±–∞–∂–∞—î—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –≥—Ä–∞—Ñ?\");\r\n    if (!deleteConfirmation) return;\r\n    let graphs = this._getGraphs();\r\n    graphs = graphs.filter(item => item.id !== id);\r\n    localStorage.setItem(this.props.name, JSON.stringify(graphs));\r\n    this.setState({ graphs });\r\n  };\r\n\r\n  handleClone = id => {\r\n    let graphs = this._getGraphs();\r\n    const graph = { ...graphs.filter(graph => graph.id === id)[0] };\r\n    graph.name = `${graph.name} - –∫–æ–ø—ñ—è`;\r\n    graph.id = ID();\r\n    const date = new Date();\r\n    graph.created = date;\r\n    graph.updated = date;\r\n    graphs = [...graphs, graph];\r\n    localStorage.setItem(this.props.name, JSON.stringify(graphs));\r\n    this.setState({ graphs });\r\n  };\r\n\r\n  handleDeleteAll = () => {\r\n    const deleteConf = window.confirm(\"–í–∏ —Å–ø—Ä–∞–≤–¥—ñ –±–∞–∂–∞—î—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ –≥—Ä–∞—Ñ–∏?\");\r\n    if (deleteConf) {\r\n      localStorage.setItem(this.props.name, []);\r\n      this.setState({ graphs: localStorage.getItem(this.props.name) });\r\n    }\r\n  };\r\n\r\n  handleNew = () => {\r\n    this.setState({ view: { showModal: true } });\r\n  };\r\n\r\n  _getGraphs = () => {\r\n    let graphs = localStorage.getItem(this.props.name);\r\n    if (!graphs) return;\r\n    graphs = JSON.parse(graphs);\r\n    return graphs;\r\n  };\r\n\r\n  render() {\r\n    const { graphs } = this.state;\r\n    const { name } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <h4 className=\"my-4\">\r\n          {this.props.title}\r\n          <div className=\"float-right btn-group\">\r\n            <Link to={`/${name}/new`} className=\"btn btn-primary\">\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </Link>\r\n            <button className=\"btn btn-danger\" onClick={this.handleDeleteAll}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </button>\r\n          </div>\r\n        </h4>\r\n        <GraphList\r\n          name={name}\r\n          list={graphs}\r\n          onDelete={this.handleDelete}\r\n          onClone={this.handleClone}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h4 className=\"h4\">–ü—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–∏—Ö —Å–∏—Å—Ç–µ–º-2</h4>\r\n      <hr />\r\n      <p className=\"lead\">\r\n        <b>–í–∏–∫–æ–Ω–∞–≤:</b>\r\n        <br /> —Å—Ç—É–¥–µ–Ω—Ç –≥—Ä—É–ø–∏ –Ü–û-82–º–ø <br /> –ë–∞—Ä–∞–±–∞—à –¢.–ê.\r\n      </p>\r\n      <Link to=\"/tasks\" className=\"btn btn-primary float-right\">\r\n        –ü–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","function paths({ graph = [], from, to }, path = []) {\r\n  const linkedNodes = _memoize(_nodes.bind(null, graph));\r\n  return explore(from, to);\r\n\r\n  function explore(currNode, to, paths = []) {\r\n    path.push(currNode);\r\n    for (let linkedNode of linkedNodes(currNode)) {\r\n      if (linkedNode === to) {\r\n        let result = path.slice();\r\n        result.push(to);\r\n        paths.push(result);\r\n        continue;\r\n      }\r\n      if (\r\n        !_hasEdgeBeenFollowedInPath({\r\n          edge: {\r\n            from: currNode,\r\n            to: linkedNode\r\n          },\r\n          path\r\n        })\r\n      ) {\r\n        explore(linkedNode, to, paths);\r\n      }\r\n    }\r\n    path.pop();\r\n    return paths;\r\n  }\r\n}\r\n\r\nfunction _nodes(graph, node) {\r\n  return graph.reduce((p, c) => {\r\n    c[0] === node && p.push(c[1]);\r\n    return p;\r\n  }, []);\r\n}\r\n\r\nfunction _hasEdgeBeenFollowedInPath({ edge, path }) {\r\n  var indices = _allIndices(path, edge.from);\r\n  return indices.some(i => path[i + 1] === edge.to);\r\n}\r\n\r\nfunction _allIndices(arr, val) {\r\n  var indices = [],\r\n    i;\r\n  for (i = 0; i < arr.length; i++) {\r\n    if (arr[i] === val) {\r\n      indices.push(i);\r\n    }\r\n  }\r\n  return indices;\r\n}\r\n\r\nfunction _memoize(fn) {\r\n  const cache = new Map();\r\n  return function() {\r\n    var key = JSON.stringify(arguments);\r\n    var cached = cache.get(key);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    cached = fn.apply(this, arguments);\r\n    cache.set(key, cached);\r\n    return cached;\r\n  };\r\n}\r\n\r\nexport default paths;\r\n","import paths from \"./Paths\";\r\n\r\nclass Queue {\r\n  constructor(method, data) {\r\n    this._method = method;\r\n    this._data = data;\r\n  }\r\n\r\n  run() {\r\n    let result;\r\n    switch (this._method) {\r\n      case 1:\r\n        result = this._run1();\r\n        break;\r\n      case 11:\r\n        result = this._run11();\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported algo`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _toMatrix(reverse) {\r\n    const { nodes, edges } = this._data;\r\n    const matrix = [];\r\n    edges.forEach(edge => {\r\n      if (!reverse)\r\n        matrix[edge.from] = {\r\n          ...matrix[edge.from],\r\n          [edge.to]: nodes.get(edge.to).weight\r\n        };\r\n      else\r\n        matrix[edge.to] = {\r\n          ...matrix[edge.to],\r\n          [edge.from]: nodes.get(edge.from).weight\r\n        };\r\n    });\r\n    return matrix;\r\n  }\r\n\r\n  _toEdgesArray(reverse) {\r\n    const { edges } = this._data;\r\n    const graph = [];\r\n    edges.forEach(edge => {\r\n      graph.push(!reverse ? [edge.from, edge.to] : [edge.to, edge.from]);\r\n    });\r\n    return graph;\r\n  }\r\n\r\n  _toUndirectedMatrix() {\r\n    const { nodes, edges } = this._data;\r\n    const matrix = [];\r\n    edges.forEach(edge => {\r\n      matrix[edge.to] = {\r\n        ...matrix[edge.to],\r\n        [edge.from]: nodes.get(edge.from).weight\r\n      };\r\n      matrix[edge.from] = {\r\n        ...matrix[edge.from],\r\n        [edge.to]: nodes.get(edge.to).weight\r\n      };\r\n    });\r\n    return matrix;\r\n  }\r\n\r\n  _getPaths(from, to, reverse) {\r\n    return paths({ graph: this._toEdgesArray(reverse), from, to });\r\n  }\r\n\r\n  _BFS(reverse = false) {\r\n    const { nodes } = this._data;\r\n    const allNodes = Object.keys(nodes._data);\r\n    const matrixNodes = Object.keys(this._toMatrix(reverse));\r\n    const endNodes = allNodes.filter(item => !matrixNodes.includes(item));\r\n    const weights = {};\r\n    const maxPaths = {};\r\n    matrixNodes.forEach(i => {\r\n      i = parseInt(i);\r\n      let maxWeight = 0;\r\n      let maxPath = [];\r\n      endNodes.forEach(j => {\r\n        j = parseInt(j);\r\n        const paths = this._getPaths(i, j, reverse);\r\n        paths.forEach(path => {\r\n          const weight = path.reduce(\r\n            (sum, node) => sum + nodes.get(node).weight,\r\n            reverse ? -nodes.get(i).weight : 0\r\n          );\r\n          if (maxWeight < weight) {\r\n            maxWeight = weight;\r\n            maxPath = path;\r\n          }\r\n        });\r\n        weights[j] = !reverse ? nodes.get(j).weight : 0;\r\n        maxPaths[j] = [j];\r\n      });\r\n      weights[i] = maxWeight;\r\n      maxPaths[i] = maxPath;\r\n    });\r\n    return { weights, maxPaths };\r\n  }\r\n\r\n  _run1() {\r\n    const { nodes } = this._data;\r\n    const { weights, maxPaths } = this._BFS();\r\n    const graphWeight = Math.max(...Object.values(weights));\r\n    const lengthes = Object.values(maxPaths).map(i => i.length);\r\n    const graphLength = Math.max(...lengthes);\r\n    let result = [];\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const value = weights[i] / graphWeight + lengthes[i] / graphLength;\r\n      result.push({ number: i, value, names: [`Pr`] });\r\n    }\r\n    const sortedResult = result.sort((a, b) => b.value - a.value);\r\n    return sortedResult;\r\n  }\r\n\r\n  _run11() {\r\n    const adjMatrix = this._toUndirectedMatrix();\r\n    const { nodes } = this._data;\r\n    const allNodes = Object.keys(nodes._data);\r\n    const { weights } = this._BFS(true);\r\n    const result = allNodes.map(node => {\r\n      return {\r\n        number: node,\r\n        value: adjMatrix[node] ? Object.keys(adjMatrix[node]).length : 0,\r\n        weights: weights[node],\r\n        names: [`Sv`, `T–∫—Ä.–ø–æ—á.`]\r\n      };\r\n    });\r\n    const sortedResult = result.sort((a, b) => {\r\n      if (a.value === b.value) {\r\n        return a.weights - b.weights;\r\n      }\r\n      return b.value - a.value;\r\n    });\r\n    return sortedResult;\r\n  }\r\n}\r\n\r\nexport default Queue;\r\n","import React from \"react\";\r\n\r\nconst QueueResultTable = function({ data }) {\r\n  return (\r\n    <table className=\"table my-4\">\r\n      <thead>\r\n        <tr>\r\n          <th>–ù–æ–º–µ—Ä —É —á–µ—Ä–∑—ñ</th>\r\n          <th>–ù–æ–º–µ—Ä –≤–µ—Ä—à–∏–Ω–∏</th>\r\n          <th>–ü–æ–∫–∞–∑–Ω–∏–∫</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map(function(queue, index) {\r\n          console.log(queue);\r\n          return (\r\n            <tr key={index} data-item={queue}>\r\n              <td>{index + 1}</td>\r\n              <td>{queue.number}</td>\r\n              <td>\r\n                {queue.names.length === 1\r\n                  ? `${queue.names} = ${queue.value.toFixed(2)}`\r\n                  : `${queue.names[0]} = ${queue.value}, ${queue.names[1]} = ${\r\n                      queue.weights\r\n                    }`}\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default QueueResultTable;\r\n","import React, { Component, createRef } from \"react\";\r\nimport Queue from \"../models/Queue\";\r\nimport QueueResultTable from \"./QueueResultTable\";\r\n\r\nclass QueueView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.resultsRef = createRef();\r\n    this.state = {\r\n      data: props.data,\r\n      results: [],\r\n      algo: -1,\r\n      description: {\r\n        1: `–£ –ø–æ—Ä—è–¥–∫—É —Å–ø–∞–¥–∞–Ω–Ω—è –ø—Ä–æ–Ω–æ—Ä–º–æ–≤–∞–Ω–æ—ó —Å—É–º–∏ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ —á–∞—Å—É —ñ –ø–æ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤–µ—Ä—à–∏–Ω —à–ª—è—Ö—ñ–≤ –¥–æ –∫—ñ–Ω—Ü—è –≥—Ä–∞—Ñ–∞ –∑–∞–¥–∞—á—ñ.`,\r\n        11: `–£ –ø–æ—Ä—è–¥–∫—É —Å–ø–∞–¥–∞–Ω–Ω—è –∑–≤‚Äô—è–∑–Ω–æ—Å—Ç—ñ –≤–µ—Ä—à–∏–Ω, –∞ –ø—Ä–∏ —Ä—ñ–≤–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–Ω—è—Ö ‚Äì –≤ –ø–æ—Ä—è–¥–∫—É –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–æ–≥–æ –ø–æ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤–µ—Ä—à–∏–Ω —à–ª—è—Ö—ñ–≤ –≤—ñ–¥ –ø–æ—á–∞—Ç–∫—É –≥—Ä–∞—Ñ–∞ –∑–∞–¥–∞—á—ñ. `\r\n      }\r\n    };\r\n  }\r\n\r\n  handleOptionChange = e => {\r\n    const algo = parseInt(e.target.value);\r\n    this.setState({ algo });\r\n    const queue = new Queue(algo, this.props.data);\r\n    const results = queue.run();\r\n    window.scrollTo(0, this.resultsRef.current.offsetTop);\r\n    this.setState({ results });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.results.length > 0) {\r\n      window.scrollTo(0, this.resultsRef.current.offsetTop);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { results, algo, description } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"algo\">\r\n            <h5>–ê–ª–≥–æ—Ä–∏—Ç–º: </h5>\r\n          </label>\r\n          <select\r\n            className=\"custom-select\"\r\n            name=\"algo\"\r\n            value={algo}\r\n            onChange={this.handleOptionChange}\r\n          >\r\n            <option value=\"-1\" disabled>\r\n              –û–±—Ä–∞—Ç–∏\r\n            </option>\r\n            <option value=\"1\">1</option>\r\n            <option value=\"11\">11</option>\r\n          </select>\r\n        </div>\r\n        <div ref={this.resultsRef}>\r\n          {algo > 0 && (\r\n            <div>\r\n              <h5>–û–ø–∏—Å –∞–ª–≥–æ—Ä–∏—Ç–º—É: </h5>\r\n              {description[algo]}\r\n              <h5 className=\"my-2\">–†–µ–∑—É–ª—å—Ç–∞—Ç: </h5>\r\n              <QueueResultTable data={results} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueueView;\r\n","import React, { Component } from \"react\";\r\nimport { DataSet } from \"vis\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GraphView from \"../components/GraphView\";\r\nimport QueueView from \"../components/QueueView\";\r\n\r\nclass QueuePage extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const id = props.id;\r\n    let graphs = localStorage.getItem(\"tasks\");\r\n    if (!graphs) return;\r\n    graphs = JSON.parse(graphs);\r\n    const graph = graphs.filter(item => item.id === id)[0];\r\n    const { edges, nodes } = graph.data;\r\n    const data = { edges: new DataSet(edges), nodes: new DataSet(nodes) };\r\n    this.state.data = data;\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    const { id } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <h4>\r\n          –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —á–µ—Ä–≥–∏ –∑–∞–¥–∞—á\r\n          <div className=\"float-right btn-group\">\r\n            <Link\r\n              to={`/tasks/${id}?next=${window.location.pathname}`}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≥—Ä–∞—Ñ\r\n            </Link>\r\n          </div>\r\n        </h4>\r\n        <GraphView name=\"tasks\" data={data} manipulationActive={false} />\r\n        <QueueView data={data} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueuePage;\r\n","import React, { Component } from \"react\";\r\nimport GraphView from \"../components/GraphView\";\r\n\r\nclass ModellingForm extends Component {\r\n  state = {};\r\n\r\n  constructor() {\r\n    super();\r\n    this.csGraphRef = React.createRef();\r\n    this.tasksGraphRef = React.createRef();\r\n  }\r\n\r\n  renderGraphList(type) {\r\n    const graphs = this.props.getGraphs(type);\r\n    if (!graphs) return <option disabled>–í—ñ–¥—Å—É—Ç–Ω—ñ –≥—Ä–∞—Ñ–∏</option>;\r\n    return graphs.map(graph => (\r\n      <option key={graph.id} value={graph.id}>\r\n        {graph.name}\r\n      </option>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"p-2\">\r\n        <div className=\"form-group\">\r\n          <label className=\"h6\" htmlFor=\"queue\">\r\n            –ê–ª–≥–æ—Ä–∏—Ç–º —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è —á–µ—Ä–≥–∏ –∑–∞–¥–∞—á:\r\n          </label>\r\n          <select\r\n            name=\"queue\"\r\n            id=\"queue\"\r\n            value={this.props.queue}\r\n            className=\"form-control\"\r\n            onChange={this.props.handleChange}\r\n          >\r\n            <option value=\"-1\" disabled>\r\n              –û–±–µ—Ä—ñ—Ç—å —á–µ—Ä–≥—É\r\n            </option>\r\n            <option value=\"1\">\r\n              1 - –£ –ø–æ—Ä—è–¥–∫—É —Å–ø–∞–¥–∞–Ω–Ω—è –ø—Ä–æ–Ω–æ—Ä–º–æ–≤–∞–Ω–æ—ó —Å—É–º–∏ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ —á–∞—Å—É —ñ –ø–æ\r\n              –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤–µ—Ä—à–∏–Ω —à–ª—è—Ö—ñ–≤ –¥–æ –∫—ñ–Ω—Ü—è –≥—Ä–∞—Ñ–∞ –∑–∞–¥–∞—á—ñ.\r\n            </option>\r\n            <option value=\"11\">\r\n              11 - –£ –ø–æ—Ä—è–¥–∫—É —Å–ø–∞–¥–∞–Ω–Ω—è –∑–≤‚Äô—è–∑–Ω–æ—Å—Ç—ñ –≤–µ—Ä—à–∏–Ω, –∞ –ø—Ä–∏ —Ä—ñ–≤–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–Ω—è—Ö\r\n              ‚Äì –≤ –ø–æ—Ä—è–¥–∫—É –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–æ–≥–æ –ø–æ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤–µ—Ä—à–∏–Ω —à–ª—è—Ö—ñ–≤ –≤—ñ–¥\r\n              –ø–æ—á–∞—Ç–∫—É –≥—Ä–∞—Ñ–∞ –∑–∞–¥–∞—á—ñ.\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"h6\" htmlFor=\"assignmentAlgo\">\r\n            –ê–ª–≥–æ—Ä–∏—Ç–º –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è:\r\n          </label>\r\n          <select\r\n            name=\"assignmentAlgo\"\r\n            id=\"assignmentAlgo\"\r\n            value={this.props.assignmentAlgo}\r\n            className=\"form-control\"\r\n            onChange={this.props.handleChange}\r\n          >\r\n            <option value=\"-1\" disabled>\r\n              –û–±–µ—Ä—ñ—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º\r\n            </option>\r\n            <option value=\"2\">\r\n              2 - –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞ –ø–µ—Ä—à–∏–π –ø—Ä–æ—Ü–µ—Å–æ—Ä,—â–æ –∑–≤—ñ–ª—å–Ω–∏–≤—Å—è. –£ —Ü—å–æ–º—É –≤–∏–ø–∞–¥–∫—É,\r\n              –ø—Ä–∏ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—ñ, –∑ –≤—ñ–ª—å–Ω–∏—Ö –ø—Ä–æ—Ü–µ—Å–æ—Ä—ñ–≤ –≤–∏–±–∏—Ä–∞—î—Ç—å—Å—è —Ç–æ–π, —è–∫–∏–π\r\n              –∑–≤—ñ–ª—å–Ω–∏–≤—Å—è —ñ –ø—Ä–æ—Å—Ç–æ—é—î –¥–æ–≤—à–µ –∑–∞ —ñ–Ω—à–∏—Ö.\r\n            </option>\r\n            <option value=\"6\" disabled>\r\n              6 - –ê–ª–≥–æ—Ä–∏—Ç–º ¬´—Å—É—Å—ñ–¥–Ω—å–æ–≥–æ¬ª –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è\r\n              –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —á–∞—Å—É –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–±—á–∏—Å–ª—é–≤–∞–ª—å–Ω–∏—Ö —Ä–æ–±—ñ—Ç.\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"col\">\r\n            <label className=\"h6\" htmlFor=\"tasks\">\r\n              –ì—Ä–∞—Ñ –∑–∞–¥–∞—á:\r\n            </label>\r\n            <select\r\n              name=\"tasks\"\r\n              id=\"tasks\"\r\n              value={this.props.tasks}\r\n              className=\"form-control\"\r\n              onChange={this.props.handleChangeGraph}\r\n            >\r\n              <option value=\"-1\" disabled>\r\n                –û–±–µ—Ä—ñ—Ç—å –≥—Ä–∞—Ñ –∑–∞–¥–∞—á\r\n              </option>\r\n              {this.renderGraphList(\"tasks\")}\r\n            </select>\r\n            {this.props.tasks !== -1 && (\r\n              <GraphView\r\n                manipulationActive={false}\r\n                height=\"300px\"\r\n                name=\"tasks\"\r\n                data={this.props.tasksData}\r\n                ref={this.tasksGraphRef}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"col\">\r\n            <label className=\"h6\" htmlFor=\"cs\">\r\n              –ì—Ä–∞—Ñ –∑–∞–¥–∞—á:\r\n            </label>\r\n            <select\r\n              value={this.props.cs}\r\n              name=\"cs\"\r\n              id=\"cs\"\r\n              className=\"form-control\"\r\n              onChange={this.props.handleChangeGraph}\r\n            >\r\n              <option value=\"-1\" disabled>\r\n                –û–±–µ—Ä—ñ—Ç—å –≥—Ä–∞—Ñ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏\r\n              </option>\r\n              {this.renderGraphList(\"cs\")}\r\n            </select>\r\n            {this.props.cs !== -1 && (\r\n              <GraphView\r\n                height=\"300px\"\r\n                manipulationActive={false}\r\n                name=\"cs\"\r\n                data={this.props.csData}\r\n                ref={this.csGraphRef}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModellingForm;\r\n","class ExecutionError extends Error {\r\n  constructor(text) {\r\n    super(text);\r\n  }\r\n}\r\n\r\nexport default ExecutionError;\r\n","import paths from \"./Paths\";\r\nimport ExecutionError from \"./Error\";\r\nimport randomMC from \"random-material-color\";\r\n\r\nconst READY_STATUS = 1;\r\nconst RUNNING_STATUS = 2;\r\nconst FINISHED_STATUS = 3;\r\nconst TRANSMISSION_STATUS = 4;\r\n\r\nclass Model {\r\n  constructor(tasks, cs, queue) {\r\n    this.tasksData = tasks;\r\n    this.csData = cs;\r\n    this.queue = queue;\r\n    this.tasks = this._formDependecies();\r\n    this.processors = this._prepareProcessors();\r\n    this.result = {};\r\n    this.assignmentLog = {};\r\n    this.tasksOnProcessors = {};\r\n    this.colors = this._getColorArray();\r\n    Object.keys(this.processors).forEach(\r\n      processorId => (this.tasksOnProcessors[processorId] = [])\r\n    );\r\n  }\r\n\r\n  _getColorArray = () => {\r\n    const colors = {};\r\n    const { nodes } = this.tasksData;\r\n    nodes.forEach(node => (colors[node.id] = randomMC.getColor()));\r\n    return colors;\r\n  };\r\n\r\n  _formDependecies = () => {\r\n    const { nodes } = this.tasksData;\r\n    const { edges } = this.tasksData;\r\n    const dependencies = {};\r\n    nodes.forEach(node => {\r\n      dependencies[node.id] = { parents: {}, weight: node.weight };\r\n    });\r\n    edges.forEach(edge => {\r\n      dependencies[edge.to].parents = {\r\n        ...dependencies[edge.to].parents,\r\n        [edge.from]: edge.weight\r\n      };\r\n    });\r\n    Object.keys(dependencies).forEach(id => {\r\n      if (Object.keys(dependencies[id].parents).length === 0)\r\n        dependencies[id].status = READY_STATUS;\r\n    });\r\n    return dependencies;\r\n  };\r\n\r\n  _toEdgesArray() {\r\n    const { edges } = this.csData;\r\n    const graph = [];\r\n    edges.forEach(edge => {\r\n      graph.push([edge.from, edge.to]);\r\n      graph.push([edge.to, edge.from]);\r\n    });\r\n    return graph;\r\n  }\r\n\r\n  _getPaths(from, to) {\r\n    return paths({ graph: this._toEdgesArray(), from, to });\r\n  }\r\n\r\n  _prepareProcessors = () => {\r\n    const { nodes: processors } = this.csData;\r\n    const preparedProcessors = {};\r\n    processors.forEach(processor => {\r\n      preparedProcessors[processor.id] = {\r\n        ...preparedProcessors[processor.id],\r\n        status: READY_STATUS,\r\n        standBy: 0\r\n      };\r\n    });\r\n    return preparedProcessors;\r\n  };\r\n\r\n  _checkParent = (taskId, processorId, tact) => {\r\n    const parents = Object.keys(this.tasks[taskId].parents).sort(\r\n      (a, b) => this.assignmentLog[a].ended - this.assignmentLog[b].ended\r\n    );\r\n    const tacts = parents.map(parentId => {\r\n      console.log(\r\n        `Tasks on processors: ${JSON.stringify(this.tasksOnProcessors)}`\r\n      );\r\n      const parentAssignedInfo = this.assignmentLog[parentId];\r\n      if (tact < parentAssignedInfo.ended) return tact;\r\n      if (parentAssignedInfo.processorId !== processorId) {\r\n        const parentProcessor = this.processors[parentAssignedInfo.processorId];\r\n        if (parentProcessor.status === TRANSMISSION_STATUS)\r\n          tact += parentProcessor.lastTransmittion;\r\n        const intermediartry = this._getPaths(\r\n          parseInt(parentAssignedInfo.processorId),\r\n          parseInt(processorId)\r\n        ).reduce((a, b) => (a.length < b.length ? a : b));\r\n        console.log(\r\n          `stops from ${\r\n            parentAssignedInfo.processorId\r\n          } to ${processorId}: ${intermediartry}`\r\n        );\r\n        const transmissionTacts = this.tasks[taskId].parents[parentId];\r\n        const transmissionEndArray = [];\r\n        intermediartry.forEach((stop, index) => {\r\n          if (index === intermediartry.length - 1) return;\r\n          const targetId = intermediartry[index + 1];\r\n          const target = this.processors[targetId];\r\n          const source = this.processors[stop];\r\n          // console.log(`Processors: ${JSON.stringify(this.processors)}`);\r\n          // if (this.tasksOnProcessors[stop].indexOf(parentId) !== -1)\r\n          //   return tact;\r\n          const transmissionStart =\r\n            source.lastTransmittion &&\r\n            source.lastTransmittion >= parentAssignedInfo.ended\r\n              ? source.lastTransmittion\r\n              : parentAssignedInfo.ended;\r\n          if (transmissionStart < source.lastTransmittion)\r\n            transmissionStart += source.lastTransmittion;\r\n          const transmissionEnd = transmissionStart + transmissionTacts;\r\n          source.status =\r\n            tact >= transmissionEnd ? source.status : TRANSMISSION_STATUS;\r\n          source.transmittingTask = parentId;\r\n          this.tasks[parentId].status =\r\n            tact >= transmissionEnd ? FINISHED_STATUS : TRANSMISSION_STATUS;\r\n          source.endTransmissionOn = transmissionEnd;\r\n          source.lastTransmittion = transmissionEnd;\r\n          target.lastTransmittion = transmissionEnd;\r\n          this.tasksOnProcessors[stop].push(parentId);\r\n          this.tasksOnProcessors[targetId].push(parentId);\r\n          console.log(\r\n            `Sending ${parentId}, which is an ancester of ${taskId}, from ${stop} to ${targetId}. Starting tact: ${transmissionStart}, end tact: ${transmissionEnd}, ${JSON.stringify(\r\n              parentAssignedInfo\r\n            )}`\r\n          );\r\n          this.result = {\r\n            ...this.result,\r\n            [`${stop}->${targetId} (${parentId}->${taskId})`]: {\r\n              values: [\r\n                {\r\n                  x: transmissionStart,\r\n                  y: parseFloat(stop) + 0.25\r\n                },\r\n                {\r\n                  x: transmissionEnd,\r\n                  y: parseFloat(stop) + 0.25\r\n                }\r\n              ],\r\n              color: this.colors[parentId]\r\n            }\r\n          };\r\n          transmissionEndArray.push(transmissionEnd);\r\n        });\r\n        const max = Math.max(...transmissionEndArray);\r\n        console.log(`Returning ${max}`);\r\n        return max;\r\n      }\r\n      return tact;\r\n    });\r\n    console.log(`Tacts: ${JSON.stringify(tacts)}, max: ${Math.max(...tacts)}`);\r\n    return !isFinite(Math.max(...tacts)) ? tact : Math.max(...tacts);\r\n  };\r\n\r\n  _executeTask = (taskId, processorId, tact) => {\r\n    console.log(`Processors: ${JSON.stringify(this.processors)}`);\r\n    tact = this._checkParent(taskId, processorId, tact);\r\n    console.log(`---> Executting task ${taskId} on processor ${processorId}`);\r\n    this.assignmentLog[taskId] = {\r\n      processorId,\r\n      ended: tact + this.tasks[taskId].weight\r\n    };\r\n    this.processors[processorId].status =\r\n      this.processors[processorId].status === TRANSMISSION_STATUS\r\n        ? TRANSMISSION_STATUS\r\n        : RUNNING_STATUS;\r\n    this.processors[processorId].from = tact;\r\n    this.processors[processorId].to = tact + this.tasks[taskId].weight;\r\n    this.processors[processorId].task = taskId;\r\n    this.tasks[taskId].status = RUNNING_STATUS;\r\n    this.queue = this.queue.filter(({ number: id }) => id !== taskId);\r\n    this.result[taskId] = this.result[taskId]\r\n      ? [...this.result[taskId]]\r\n      : {\r\n          values: [\r\n            { x: tact, y: parseInt(processorId) },\r\n            {\r\n              x: tact + this.tasks[taskId].weight,\r\n              y: parseInt(processorId)\r\n            }\r\n          ],\r\n          color: this.colors[taskId]\r\n        };\r\n  };\r\n\r\n  _getFreeProcessors = tackt => {\r\n    const freeProcessorsIds = Object.keys(this.processors).filter(\r\n      processorId => {\r\n        const processor = this.processors[processorId];\r\n        return (\r\n          processor.status === READY_STATUS ||\r\n          (processor.status === TRANSMISSION_STATUS && processor.to <= tackt)\r\n        );\r\n      }\r\n    );\r\n    if (freeProcessorsIds.length === 0) return -1;\r\n    // console.log(`Free processors: ${JSON.stringify(freeProcessorsIds)}`);\r\n    const processorsQueue = freeProcessorsIds\r\n      .map(id => ({\r\n        standBy: this.processors[id].standBy,\r\n        id\r\n      }))\r\n      .sort((a, b) => b.standBy - a.standBy)\r\n      .map(item => item.id);\r\n    // let maxStandBy = -1,\r\n    //   selectedId = 0;\r\n    // Object.values(freeProcessorsIds).forEach(processorId => {\r\n    //   const processor = this.processors[processorId];\r\n    //   if (processor.standBy > maxStandBy) {\r\n    //     maxStandBy = processor.standBy;\r\n    //     selectedId = processorId;\r\n    //   }\r\n    // });\r\n    // console.log(`Selected processorId: ${selectedId}`);\r\n    // return selectedId;\r\n    console.log(`Prioritised queue of processors: ${processorsQueue}`);\r\n    return processorsQueue;\r\n  };\r\n\r\n  _getReadyTasks = () => {\r\n    let readyTasks = this.queue.filter(({ number: taskId }) => {\r\n      const task = this.tasks[taskId];\r\n      if (Object.keys(task.parents).length === 0)\r\n        return task.status === READY_STATUS;\r\n      else {\r\n        const preparedParents = [];\r\n        Object.keys(task.parents).forEach(parentId => {\r\n          preparedParents.push(\r\n            this.tasks[parentId].status === FINISHED_STATUS ||\r\n              this.tasks[parentId].status === TRANSMISSION_STATUS\r\n          );\r\n        });\r\n        const isTaskReady = preparedParents.every(parent => parent);\r\n        return isTaskReady;\r\n      }\r\n    });\r\n    readyTasks = readyTasks.map(task => task.number);\r\n    return readyTasks;\r\n  };\r\n\r\n  _checkFinish = tact => {\r\n    Object.keys(this.processors).forEach(processorId => {\r\n      const processor = this.processors[processorId];\r\n      if (\r\n        processor.status === RUNNING_STATUS ||\r\n        processor.status === TRANSMISSION_STATUS\r\n      ) {\r\n        if (processor.to === tact) {\r\n          console.log(`Task ${processor.task} finished on ${processorId}`);\r\n          processor.status =\r\n            processor.status === TRANSMISSION_STATUS\r\n              ? TRANSMISSION_STATUS\r\n              : READY_STATUS;\r\n          processor.standBy = 0;\r\n          this.tasks[processor.task].status = FINISHED_STATUS;\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  _processorsStandBy = () => {\r\n    Object.keys(this.processors).forEach(processorId => {\r\n      const processor = this.processors[processorId];\r\n      if (\r\n        processor.status === READY_STATUS ||\r\n        processor.status === TRANSMISSION_STATUS\r\n      )\r\n        this.processors[processorId].standBy++;\r\n    });\r\n  };\r\n\r\n  _checkTransmittionFinish = tact => {\r\n    Object.keys(this.processors).forEach(processorId => {\r\n      const processor = this.processors[processorId];\r\n      if (processor.status === TRANSMISSION_STATUS) {\r\n        if (processor.endTransmissionOn <= tact) {\r\n          processor.status =\r\n            processor.to >= tact ? RUNNING_STATUS : READY_STATUS;\r\n          processor.lastTransmittion = tact;\r\n          this.tasks[processor.transmittingTask].status = FINISHED_STATUS;\r\n          processor.transmittingTask = \"-1\";\r\n          console.log(`Ending transmittion on processor ${processorId}...`);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  _canExecuteOnProcessor = (task, processorId, tact) => {\r\n    // if (task === 5 && tact === 5) debugger;\r\n    if (Object.keys(this.tasks[task].parents).length > 0) {\r\n      const result = Object.keys(this.tasks[task].parents).map(parent => {\r\n        const { processorId: parentProcessorId, ended } = this.assignmentLog[\r\n          parent\r\n        ];\r\n        if (parentProcessorId !== processorId) {\r\n          return this.tasks[parent].status !== TRANSMISSION_STATUS;\r\n        }\r\n        if (parentProcessorId === processorId) {\r\n          return this.processors[parentProcessorId].transmittingTask !== parent;\r\n        }\r\n\r\n        return true;\r\n      });\r\n      return result.every(result => result);\r\n    }\r\n    return true;\r\n  };\r\n\r\n  model = () => {\r\n    let tact = 0;\r\n    // while (this.queue.length !== 0) {\r\n    while (tact < 50) {\r\n      tact++;\r\n      console.log(`Tact: ${tact}`);\r\n      console.log(`Processors: ${JSON.stringify(this.processors)}`);\r\n      console.log(`Tasks: ${JSON.stringify(this.tasks)}`);\r\n      console.log(`Queue: ${JSON.stringify(this.queue)}`);\r\n      this._checkFinish(tact);\r\n      this._checkTransmittionFinish(tact);\r\n      const tasks = this._getReadyTasks();\r\n      console.log(`Ready tasks: ${JSON.stringify(tasks)}`);\r\n      try {\r\n        if (tasks.length === 0) throw new ExecutionError(`No tasks available!`);\r\n        for (let task of tasks) {\r\n          const freeProcessors = this._getFreeProcessors(tact);\r\n          if (freeProcessors.length <= 0)\r\n            throw new ExecutionError(`No free processors`);\r\n          for (let processor of freeProcessors) {\r\n            console.log(\r\n              `Trying task #${task} on ${processor}, canExecuteOnProcessor returned: ${this._canExecuteOnProcessor(\r\n                task,\r\n                processor\r\n              )}`\r\n            );\r\n            if (this._canExecuteOnProcessor(task, processor, tact)) {\r\n              this._executeTask(task, processor, tact);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      } catch (e) {\r\n        if (e instanceof ExecutionError || e instanceof TypeError)\r\n          console.log(e.message);\r\n        else throw e;\r\n      } finally {\r\n        this._processorsStandBy();\r\n      }\r\n    }\r\n    return { result: this.result, tacts: tact };\r\n  };\r\n}\r\n\r\nexport default Model;\r\n","import React, { Component } from \"react\";\r\nimport Queue from \"../models/Queue\";\r\nimport Model from \"../models/Model\";\r\nimport {\r\n  FlexibleWidthXYPlot,\r\n  LabelSeries,\r\n  HorizontalGridLines,\r\n  VerticalGridLines,\r\n  XAxis,\r\n  YAxis,\r\n  LineMarkSeries\r\n} from \"react-vis\";\r\nimport \"react-vis/dist/style.css\";\r\n\r\nclass ModellingView extends Component {\r\n  state = {};\r\n\r\n  renderLines = lines => {\r\n    return Object.keys(lines).map(lineId => {\r\n      const line = lines[lineId];\r\n      return (\r\n        <LineMarkSeries\r\n          data={line.values}\r\n          key={lineId}\r\n          color={line.color}\r\n          strokeWidth={3.5}\r\n          animation={\"nowobble\"}\r\n          strokeDasharray={lineId.length > 3 ? [7, 3] : []}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  renderLabels = lines => {\r\n    return Object.keys(lines).map(lineId => {\r\n      const line = lines[lineId];\r\n      const start = line.values[0];\r\n      const end = line.values[1];\r\n      const x = lineId.length > 3 ? start.x : start.x + (end.x - start.x) / 2;\r\n      const y =\r\n        lineId.length > 3\r\n          ? start.y + Math.random() * 0.1 + 0.05\r\n          : start.y + 0.1;\r\n      return (\r\n        <LabelSeries\r\n          data={[{ x, y, label: lineId }]}\r\n          style={{ fontSize: \"8pt\" }}\r\n          key={lineId}\r\n          labelAnchorY=\"auto\"\r\n          labelAnchor–•=\"auto\"\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  getMax = result =>\r\n    Math.max(...[].concat(...Object.values(result)).map(o => o.values[1].x)) +\r\n    0.5;\r\n\r\n  render() {\r\n    let { tasks, cs, queue: method } = this.props;\r\n    if (typeof tasks === \"function\") {\r\n      tasks = tasks();\r\n      cs = cs();\r\n    }\r\n    const queue = new Queue(parseInt(method), tasks).run();\r\n    const { result } = new Model(tasks, cs, queue).model();\r\n    if (!result) return <div />;\r\n    console.log(JSON.stringify(result));\r\n    return (\r\n      <React.Fragment>\r\n        <h5 className=\"h5\">–ß–µ—Ä–≥–∞ –∑–∞–¥–∞—á:</h5>\r\n        <div>\r\n          {Object.values(queue)\r\n            .map(val => val.number)\r\n            .join(\", \")}\r\n        </div>\r\n        <FlexibleWidthXYPlot\r\n          className=\"my-4\"\r\n          height={600}\r\n          xType=\"linear\"\r\n          yType=\"linear\"\r\n          xDomain={[0.5, this.getMax(result)]}\r\n          yDomain={[-0.5, Math.max(...cs.nodes.map(node => node.id)) + 0.5]}\r\n        >\r\n          <HorizontalGridLines />\r\n          <VerticalGridLines />\r\n          <XAxis title=\"–¢–∞–∫—Ç\" position=\"end\" />\r\n          <YAxis\r\n            title=\"–ü–ï\"\r\n            position=\"end\"\r\n            tickValues={[0, ...cs.nodes.map(node => node.id)]}\r\n            tickFormat={numb => parseFloat(numb).toFixed(0)}\r\n          />\r\n          {this.renderLines(result)}\r\n          {this.renderLabels(result)}\r\n        </FlexibleWidthXYPlot>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModellingView;\r\n","import React, { Component } from \"react\";\r\nimport ModellingForm from \"../components/ModellingForm\";\r\nimport ModellingView from \"../components/ModellingView\";\r\nimport { DataSet } from \"vis\";\r\n\r\nclass ModellingPage extends Component {\r\n  state = {\r\n    tasks: -1,\r\n    cs: -1,\r\n    queue: -1,\r\n    assignmentAlgo: -1\r\n  };\r\n\r\n  getGraphs = type => {\r\n    let graphs = localStorage.getItem(type);\r\n    if (!graphs) return;\r\n    graphs = JSON.parse(graphs);\r\n    return graphs;\r\n  };\r\n\r\n  getById = (graphs, id) => {\r\n    const found = graphs.filter(graph => graph.id === id);\r\n    return found[0];\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleChangeGraph = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      [`${e.target.name}Data`]: this.getById(\r\n        this.getGraphs(e.target.name),\r\n        e.target.value\r\n      ).data\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { tasks, queue, cs, assignmentAlgo, tasksData, csData } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <ModellingForm\r\n          handleChange={this.handleChange}\r\n          handleChangeGraph={this.handleChangeGraph}\r\n          tasks={tasks}\r\n          cs={cs}\r\n          queue={queue}\r\n          assignmentAlgo={assignmentAlgo}\r\n          getGraphs={this.getGraphs}\r\n          tasksData={tasksData}\r\n          csData={csData}\r\n        />\r\n        {!(\r\n          tasks === -1 ||\r\n          cs === -1 ||\r\n          queue === -1 ||\r\n          assignmentAlgo === -1\r\n        ) && (\r\n          <ModellingView\r\n            tasks={{\r\n              nodes: new DataSet(tasksData.nodes),\r\n              edges: new DataSet(tasksData.edges)\r\n            }}\r\n            cs={{\r\n              nodes: new DataSet(csData.nodes),\r\n              edges: new DataSet(csData.edges)\r\n            }}\r\n            queue={queue}\r\n            assignmentAlgo={assignmentAlgo}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModellingPage;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport {\r\n  GraphEditorPage,\r\n  GraphListPage,\r\n  QueuePage,\r\n  HomePage,\r\n  ModellingPage\r\n} from \"../pages\";\r\nimport ModellingView from \"../components/ModellingView\";\r\nimport { DataSet } from \"vis\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <div className=\"container my-4\">\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          key=\"home-page\"\r\n          path=\"/\"\r\n          render={() => {\r\n            document.title = `–ü–ó–ö–° - 2`;\r\n            return <HomePage />;\r\n          }}\r\n        />\r\n        <Route\r\n          key=\"tasks-graphs\"\r\n          exact\r\n          path=\"/tasks\"\r\n          render={() => {\r\n            document.title = `–ì—Ä–∞—Ñ–∏ –∑–∞–¥–∞—á | –ü–ó–ö–° - 2`;\r\n            return <GraphListPage name=\"tasks\" title=\"–ì—Ä–∞—Ñ–∏ –∑–∞–¥–∞—á\" />;\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/tasks/new\"\r\n          render={() => {\r\n            document.title = `–ù–æ–≤–∏–π –≥—Ä–∞—Ñ –∑–∞–¥–∞—á | –ü–ó–ö–° - 2`;\r\n            return <GraphEditorPage name=\"tasks\" />;\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/tasks/:id\"\r\n          exact\r\n          type=\"task\"\r\n          render={props => {\r\n            document.title = `–†–µ–¥–∞–∫—Ç–æ—Ä –≥—Ä–∞—Ñ—É –∑–∞–¥–∞—á | –ü–ó–ö–° - 2`;\r\n            return <GraphEditorPage name=\"tasks\" id={props.match.params.id} />;\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/tasks/:id*/queue\"\r\n          exact\r\n          type=\"task\"\r\n          render={props => {\r\n            document.title = `–§–æ—Ä–º—É–≤–∞–Ω–Ω—è —á–µ—Ä–≥–∏ –∑–∞–¥–∞—á | –ü–ó–ö–° - 2`;\r\n            return <QueuePage id={props.match.params.id} />;\r\n          }}\r\n        />\r\n        <Route\r\n          key=\"cs-graphs\"\r\n          exact\r\n          path=\"/cs\"\r\n          render={() => {\r\n            document.title = `–ì—Ä–∞—Ñ–∏ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–∏—Ö —Å–∏—Å—Ç–µ–º | –ü–ó–ö–° - 2`;\r\n            return (\r\n              <GraphListPage name=\"cs\" title=\"–ì—Ä–∞—Ñ–∏ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏\" />\r\n            );\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/cs/new\"\r\n          render={() => {\r\n            document.title = `–ù–æ–≤–∏–π –≥—Ä–∞—Ñ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ | –ü–ó–ö–° - 2`;\r\n            return <GraphEditorPage name=\"cs\" />;\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/cs/:id\"\r\n          type=\"task\"\r\n          render={props => {\r\n            document.title = `–†–µ–¥–∞–∫—Ç–æ—Ä –≥—Ä–∞—Ñ—É –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ | –ü–ó–ö–° - 2`;\r\n            return <GraphEditorPage name=\"cs\" id={props.match.params.id} />;\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/model\"\r\n          exact\r\n          render={() => {\r\n            document.title = `–ú–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è | –ü–ó–ö–° - 2`;\r\n            return <ModellingPage />;\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/model/test\"\r\n          exact\r\n          render={() => {\r\n            document.title = `–ú–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è (—Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è) | –ü–ó–ö–° - 2`;\r\n            return (\r\n              <ModellingView\r\n                queue=\"1\"\r\n                assignmentAlgo=\"2\"\r\n                tasks={() => {\r\n                  const tasks = JSON.parse(\r\n                    window.localStorage.getItem(\"tasks\")\r\n                  );\r\n                  let {\r\n                    data: { nodes, edges }\r\n                  } = tasks.filter(task => task.id === \"_ewp4g4mn5\")[0];\r\n                  nodes = new DataSet(nodes);\r\n                  edges = new DataSet(edges);\r\n                  return { nodes, edges };\r\n                }}\r\n                cs={() => {\r\n                  const cs = JSON.parse(window.localStorage.getItem(\"cs\"));\r\n                  let {\r\n                    data: { nodes, edges }\r\n                  } = cs.filter(cs => cs.id === \"_mlog5xo8s\")[0];\r\n                  nodes = new DataSet(nodes);\r\n                  edges = new DataSet(edges);\r\n                  return { nodes, edges };\r\n                }}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faIgloo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Navbar from \"./containers/Navbar\";\r\nimport Routes from \"./containers/Routes\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nlibrary.add(faIgloo);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <Routes />\r\n        </React.Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}