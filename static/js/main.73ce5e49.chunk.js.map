{"version":3,"sources":["containers/Navbar.jsx","components/GraphView.jsx","components/Message.jsx","components/GenerationForm.jsx","pages/GraphEditorPage.jsx","components/ListItem.jsx","components/GraphList.jsx","pages/GraphListPage.jsx","pages/HomePage.jsx","models/Paths.js","models/Queue.js","components/QueueResultTable.jsx","components/QueueView.jsx","pages/QueuePage.jsx","components/ModellingForm.jsx","models/Error.js","models/Model.js","components/ModellingView.jsx","pages/ModellingPage.jsx","containers/Routes.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","NavLink","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","exact","TYPE_CS","TYPE_TASK","GraphView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","locales","uk","edit","del","back","addNode","addEdge","editNode","editEdge","addDescription","edgeDescription","editEdgeDescription","createEdgeError","deleteClusterError","editClusterError","params","data","callback","mode","isEdit","isEdge","lastId","state","nodes","map","node","sort","b","number","isNaN","weight","getWeight","label","concat","e","console","log","onDoubleClick","edges","_this$state","_this$state$data","nodesS","edgesS","length","get","update","objectSpread","edge","name","network","appRef","createRef","options","locale","physics","enabled","manipulation","undefined","manipulationActive","initiallyActive","arrows","prompt","parseInt","alert","prevProps","prevState","_this2","Network","current","on","setState","body","snapshot","_this3","_this$props","height","width","style","ref","Component","Message","_ref","message","GenerationForm","vertexNumb","maxWeight","minWeight","correlation","handleChange","defineProperty","target","value","autoComplete","onChange","min","step","max","onClick","onGenerate","ID","Math","random","toString","substr","GraphEditorPage","graphName","DataSet","showJson","handleSubmit","history","preventDefault","graphToMatrix","isCyclic","error","isConnected","_data","values","graphs","localStorage","getItem","JSON","parse","oldTask","filter","item","task","created","Date","updated","toConsumableArray","push","setItem","stringify","urlParams","URLSearchParams","window","location","search","next","has","handleGenerate","formData","generate","_this$state$data2","newNodes","i","_getRandomInt","x","y","weights","reduce","sum","lengths","round","matrix","arr","slice","cur_l_w","number1","number2","tmp","newEdges","forEach","j","from","clear","add","cycle","remove","ids","getIds","randomEdgeId","randowEdge","generated","nodesWeightSum","edgesWeightSum","ceil","floor","errorRef","React","graphRef","_this$props2","graph","_graph$data","scrollTo","offsetTop","_this$state$data3","connectedNodes","aid","found","paths","isConnectedUtil","keys","s","solutions","dist","parent","nearest","Infinity","n","ndist","adj","d","_this$state$data4","graphNodes","visited","recStack","cycleCheck","cyclicUtil","index","nodeNeighbors","currentNode","_this$props3","Fragment","required","placeholder","components_Message","components_GraphView","htmlFor","components_GenerationForm","withRouter","ListItem","onDelete","onClone","scope","Link","toLocaleString","year","month","day","hour","minute","second","role","title","react_fontawesome_index_es","icon","faThList","faPen","faClone","faTrash","GraphList","list","items","components_ListItem","key","HomePage","handleDelete","confirm","_getGraphs","handleClone","date","handleDeleteAll","handleNew","view","showModal","faPlus","faTrashAlt","components_GraphList","_hasEdgeBeenFollowedInPath","_ref2","path","val","indices","_allIndices","some","_ref$graph","arguments","linkedNodes","fn","cache","Map","cached","apply","set","_memoize","p","c","bind","explore","currNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","linkedNode","result","err","return","pop","Queue","method","_method","_run1","_run2","_run11","Error","reverse","_this$_data","_this$_data2","_toEdgesArray","allNodes","matrixNodes","_toMatrix","endNodes","includes","maxPaths","maxPath","_getPaths","_BFS","names","_this$_BFS2","graphWeight","lengthes","graphLength","adjMatrix","_toUndirectedMatrix","QueueResultTable","queue","data-item","toFixed","QueueView","handleOptionChange","algo","results","run","resultsRef","description","1","2","11","disabled","components_QueueResultTable","QueuePage","pathname","components_QueueView","ModellingForm","csGraphRef","tasksGraphRef","getGraphs","onSubmit","assignmentAlgo","tasks","alt","handleChangeGraph","renderGraphList","tasksData","cs","csData","ExecutionError","READY_STATUS","RUNNING_STATUS","FINISHED_STATUS","TRANSMISSION_STATUS","Model","_getColorArray","colors","randomMC","getColor","_formDependecies","dependencies","parents","status","_prepareProcessors","processors","preparedProcessors","processor","standBy","_getTransmissionTact","sourceId","targetId","taskEnded","transmissionTacts","parentTaskId","taskId","tact","parentTransmission","transmissions","lastEnded","transmissionInfo","end","freeIntervals","transferGaps","interval","start","freeInterval","source","busy","assignmentLog","started","ended","sorted","merged","cur","last","findGaps","array","_makeTransmissions","processorId","orTact","tacts","_this$assignmentLog$p","parentEnded","parentProcessor","_getShortestPath","transmissionStart","transmissionEnd","parseFloat","color","_executeTask","curTact","_getFreeProcessors","_getFreeProcessors2","_getFreeProcessors6","freeProcessorsIds","executedOn","pathLength","maxStandBy","selectedId","_getReadyTasks","readyTasks","_ref3","preparedParents","parentId","every","_checkFinish","_processorsStandBy","model","warn","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","freeProcessor","tasksOnProcessors","pathsR","ModellingView","renderLines","lines","lineId","line","es","strokeWidth","animation","strokeDasharray","renderLabels","fontSize","labelAnchorY","labelAnchor–•","renderProcessorsLines","getMax","o","join","overflow","whiteSpace","xType","yType","xDomain","yDomain","position","tickValues","tickFormat","numb","ModellingPage","getById","_this$setState2","components_ModellingForm","components_ModellingView","Routes","Switch","Route","render","document","pages_HomePage","GraphListPage","pages_GraphEditorPage","match","pages_QueuePage","pages_ModellingPage","library","faIgloo","App","BrowserRouter","basename","process","containers_Navbar","containers_Routes","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.73ce5e49.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"jquery/dist/jquery\";\r\nimport \"popper.js/dist/popper\";\r\nimport \"bootstrap/dist/js/bootstrap\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <NavLink className=\"navbar-brand\" to=\"/\">\r\n        –ü–ó–ö–°-2\r\n      </NavLink>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/tasks\">\r\n              –ì—Ä–∞—Ñ –∑–∞–¥–∞—á <span className=\"sr-only\">(current)</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/cs\">\r\n              –ì—Ä–∞—Ñ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              exact\r\n              className=\"nav-link \"\r\n              activeClassName=\"active\"\r\n              to=\"/model\"\r\n            >\r\n              –ú–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              exact\r\n              className=\"nav-link disabled\"\r\n              activeClassName=\"active\"\r\n              to=\"/stats\"\r\n            >\r\n              –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Network } from \"vis\";\r\nimport React, { Component, createRef } from \"react\";\r\nimport \"vis/dist/vis.css\";\r\n\r\nconst TYPE_CS = 1;\r\nconst TYPE_TASK = 2;\r\n\r\nclass GraphView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.type = props.name === \"tasks\" ? TYPE_TASK : TYPE_CS;\r\n    this.network = {};\r\n    this.appRef = createRef();\r\n    this.options = {\r\n      locales: this.locales,\r\n      locale: \"uk\",\r\n      physics: {\r\n        enabled: false\r\n      },\r\n      manipulation: {\r\n        enabled:\r\n          this.props.manipulationActive !== undefined\r\n            ? this.props.manipulationActive\r\n            : true,\r\n        initiallyActive: true,\r\n        addNode: (data, callback) => {\r\n          this.params(data, callback, \"add\", \"–≤–µ—Ä—à–∏–Ω–∏\");\r\n        },\r\n        // editNode: (data, callback) => {\r\n        //   this.params(data, callback, \"edit\", \"–≤–µ—Ä—à–∏–Ω–∏\");\r\n        // },\r\n        addEdge: (data, callback) => {\r\n          this.params(data, callback, \"add\", \"–∑–≤'—è–∑–∫—É\");\r\n        }\r\n        // editEdge: (data, callback) => {\r\n        //   this.params(data, callback, \"edit\", \"–∑–≤'—è–∑–∫—É\");\r\n        // }\r\n      },\r\n      edges: {\r\n        arrows: {\r\n          to: {\r\n            enabled: this.type === TYPE_TASK\r\n          }\r\n        }\r\n      }\r\n    };\r\n    this.state = {\r\n      data: props.data,\r\n      type: this.type,\r\n      manipulationActive:\r\n        this.props.manipulationActive !== undefined\r\n          ? this.props.manipulationActive\r\n          : true\r\n    };\r\n  }\r\n\r\n  locales = {\r\n    uk: {\r\n      edit: \"–†–µ–¥–∞–≥—É–≤–∞—Ç–∏\",\r\n      del: \"–í–∏–¥–∞–ª–∏—Ç–∏ –æ–±—Ä–∞–Ω–µ\",\r\n      back: \"–ù–∞–∑–∞–¥\",\r\n      addNode: \"–î–æ–¥–∞—Ç–∏ –≤–µ—Ä—à–∏–Ω—É\",\r\n      addEdge: \"–î–æ–¥–∞—Ç–∏ –∑–≤'—è–∑–æ–∫\",\r\n      editNode: \"–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≤–µ—Ä—à–∏–Ω—É\",\r\n      editEdge: \"–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∑–≤'—è–∑–æ–∫\",\r\n      addDescription: \"–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –ø—É—Å—Ç–æ–º—É –º—ñ—Å—Ü—ñ –∞–±–∏ –¥–æ–¥–∞—Ç–∏ –≤–µ—Ä—à–∏–Ω—É.\",\r\n      edgeDescription:\r\n        \"–ê–±–∏ –∑'—î–¥–Ω–∞—Ç–∏ –≤–µ—Ä—à–∏–Ω–∏ –∫–ª—ñ–∫–Ω—ñ—Ç—å –ø–æ –ø–æ—á–∞—Ç–∫–æ–≤—ñ–π –≤–µ—Ä—à–∏–Ω—ñ —Ç–∞ –ø–æ –∫—ñ–Ω—Ü–µ–≤—ñ–π.\",\r\n      editEdgeDescription:\r\n        \"Click on the control points and drag them to a node to connect to it.\",\r\n      createEdgeError: \"Cannot link edges to a cluster.\",\r\n      deleteClusterError: \"Clusters cannot be deleted.\",\r\n      editClusterError: \"Clusters cannot be edited.\"\r\n    }\r\n  };\r\n\r\n  params = (data, callback, mode, type) => {\r\n    const isEdit = mode === \"edit\";\r\n    const isEdge = type === \"–∑–≤'—è–∑–∫—É\";\r\n    const { nodes } = this.state.data;\r\n    const lastId = nodes.map(node => node.id).sort((a, b) => b - a)[0];\r\n    const number = isEdit ? data.number : !isNaN(lastId) ? lastId + 1 : 0;\r\n    const weight = this.getWeight(type, isEdit, data);\r\n    if (!weight) return;\r\n    const label = `${\r\n      !isEdge\r\n        ? this.state.type === TYPE_CS\r\n          ? `${number}`\r\n          : `${number}\\n ‚Äî \\n${weight}`\r\n        : this.state.type === TYPE_CS\r\n        ? ``\r\n        : `${weight}`\r\n    }`;\r\n    data.number = number;\r\n    data.weight = weight;\r\n    data.label = label;\r\n    if (!isEdit && !isEdge) {\r\n      data.id = number;\r\n    }\r\n    try {\r\n      return callback(data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  getWeight(type, isEdit, data) {\r\n    if (this.state.type === TYPE_CS) return ` `;\r\n    let weight = prompt(`–í–∞–≥–∞ ${type}`, isEdit ? data.weight : ``);\r\n    if (!weight) return alert(`\"–í–∞–≥—É ${type} –Ω–µ –∑–∞–¥–∞–Ω–æ!\"`);\r\n    weight = parseInt(weight);\r\n    if (isNaN(weight)) return alert(`–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –≤–∞–≥–∏ ${type}!`);\r\n    if (weight <= 0)\r\n      return alert(`–í–∞–≥–∞ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ—é —á–∏ –¥–æ—Ä—ñ–≤–Ω—é–≤–∞—Ç–∏ 0`);\r\n    return weight;\r\n  }\r\n\r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    // console.log(`PrevProps: ${JSON.stringify(prevProps)}`);\r\n    // console.log(`NewProps: ${JSON.stringify(this.props)}`);\r\n    return prevProps.data !== this.props.data;\r\n    // const { edges, nodes } = this.props.data;\r\n    // const { edges: edgesP, nodes: nodesP } = prevProps.data;\r\n    // if (!edgesP || !nodesP) return false;\r\n    // return edges.length !== edgesP.length || nodes.length !== nodesP.length;\r\n  }\r\n\r\n  onDoubleClick = params => {\r\n    const { nodes, edges } = params;\r\n    const {\r\n      data: { nodes: nodesS, edges: edgesS },\r\n      type\r\n    } = this.state;\r\n    if (type === TYPE_CS) return;\r\n    if (nodes.length > 0) {\r\n      const node = nodesS.get(nodes[0]);\r\n      const weight = this.getWeight(\"–≤–µ—Ä—à–∏–Ω–∏\", true, { weight: node.weight });\r\n      if (!weight) return;\r\n      const label = `${node.id}\\n‚Äî\\n${weight}`;\r\n      nodesS.update({ ...node, weight, label });\r\n    } else {\r\n      const edge = edgesS.get(edges[0]);\r\n      const weight = this.getWeight(\"–∑–≤'—è–∑–∫—É\", true, { weight: edge.weight });\r\n      if (!weight) return;\r\n      const label = `${weight}`;\r\n      edgesS.update({ ...edge, weight, label });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.network = new Network(\r\n      this.appRef.current,\r\n      this.props.data,\r\n      this.options\r\n    );\r\n    if (this.state.type === TYPE_TASK && this.state.manipulationActive)\r\n      this.network.on(\"doubleClick\", params => this.onDoubleClick(params));\r\n    this.setState({\r\n      data: {\r\n        nodes: this.network.body.data.nodes,\r\n        edges: this.network.body.data.edges\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (!snapshot) return;\r\n    this.network = new Network(\r\n      this.appRef.current,\r\n      this.props.data,\r\n      this.options\r\n    );\r\n    if (this.state.type === TYPE_TASK && this.state.manipulationActive)\r\n      this.network.on(\"doubleClick\", params => this.onDoubleClick(params));\r\n    this.setState({\r\n      data: {\r\n        nodes: this.network.body.data.nodes,\r\n        edges: this.network.body.data.edges\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { height, width } = this.props;\r\n    return (\r\n      <div\r\n        className=\"my-3\"\r\n        style={{\r\n          height: height ? height : \"600px\",\r\n          width: width ? width : \"100%\"\r\n        }}\r\n        ref={this.appRef}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GraphView;\r\n","import React from \"react\";\r\n\r\nconst Message = ({ type, message }) => {\r\n  return (\r\n    <div\r\n      className={`alert ${type === \"error\" ? \"alert-danger\" : \"alert-info\"}`}\r\n    >\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\n\r\nclass GenerationForm extends Component {\r\n  state = {\r\n    vertexNumb: 5,\r\n    maxWeight: 10,\r\n    minWeight: 1,\r\n    correlation: 0.5\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { vertexNumb, maxWeight, minWeight, correlation } = this.state;\r\n    return (\r\n      <div className=\"my-4\">\r\n        <h4>–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≥—Ä–∞—Ñ—É –∑–∞–¥–∞—á</h4>\r\n        <form className=\"py-4\">\r\n          <div className=\"input-group mb-2\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text\">–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤–µ—Ä—à–∏–Ω (–∑–∞–¥–∞—á): </div>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              autoComplete=\"off\"\r\n              name=\"vertexNumb\"\r\n              value={vertexNumb}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-2\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text\">–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –≤–∞–≥–∞ –≤–µ—Ä—à–∏–Ω–∏: </div>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"maxWeight\"\r\n              min=\"1\"\r\n              autoComplete=\"off\"\r\n              value={maxWeight}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-2\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text\">–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –≤–∞–≥–∞ –≤–µ—Ä—à–∏–Ω–∏: </div>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min=\"1\"\r\n              autoComplete=\"off\"\r\n              name=\"minWeight\"\r\n              value={minWeight}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-2\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text\">–ó–≤'—è–∑–Ω—ñ—Å—Ç—å: </div>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              autoComplete=\"off\"\r\n              step=\"0.01\"\r\n              min=\"0\"\r\n              max=\"1\"\r\n              name=\"correlation\"\r\n              value={correlation}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary float-right\"\r\n            onClick={e => this.props.onGenerate(e, this.state)}\r\n          >\r\n            –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerationForm;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { DataSet } from \"vis\";\r\nimport GraphView from \"../components/GraphView\";\r\nimport Message from \"../components/Message\";\r\nimport GenerationForm from \"../components/GenerationForm\";\r\n\r\nconst ID = () =>\r\n  \"_\" +\r\n  Math.random()\r\n    .toString(36)\r\n    .substr(2, 9);\r\n\r\nclass GraphEditorPage extends Component {\r\n  state = {\r\n    graphName: \"\",\r\n    data: {\r\n      edges: new DataSet(),\r\n      nodes: new DataSet()\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.errorRef = React.createRef();\r\n    this.graphRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id, name } = this.props;\r\n    if (!id) return;\r\n    let graphs = localStorage.getItem(`${name}`);\r\n    if (!graphs) return;\r\n    graphs = JSON.parse(graphs);\r\n    const graph = graphs.filter(item => item.id === id)[0];\r\n    const { edges, nodes } = graph.data;\r\n    const data = { edges: new DataSet(edges), nodes: new DataSet(nodes) };\r\n    this.setState({ graphName: graph.name, data });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.error) {\r\n      window.scrollTo(0, this.errorRef.current.offsetTop);\r\n    }\r\n    if (this.state.generated) {\r\n      window.scrollTo(0, this.graphRef.current.offsetTop);\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    if (e.target.name === \"showJson\") {\r\n      this.setState({\r\n        [e.target.name]: this.state.showJson ? !this.state.showJson : true\r\n      });\r\n      return;\r\n    }\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { history, id, name } = this.props;\r\n    e.preventDefault();\r\n    this.graphToMatrix();\r\n    if (name !== \"cs\" && this.isCyclic()) {\r\n      this.setState({ error: \"–¶–∏–∫–ª—ñ—á–Ω–∏–π –≥—Ä–∞—Ñ!\" });\r\n      return;\r\n    }\r\n    if (name !== \"tasks\" && this.isConnected()) {\r\n      this.setState({ error: \"–ì—Ä–∞—Ñ –Ω–µ–∑–≤'—è–∑–Ω–∏–π!\" });\r\n      return;\r\n    }\r\n    let { nodes, edges } = this.state.data;\r\n    nodes = nodes._data ? Object.values(nodes._data) : [];\r\n    edges = edges._data ? Object.values(edges._data) : [];\r\n    const data = { nodes, edges };\r\n    const { graphName } = this.state;\r\n    let graphs = localStorage.getItem(`${name}`);\r\n    graphs = !graphs ? [] : JSON.parse(graphs);\r\n    let oldTask = {};\r\n    if (id) oldTask = graphs.filter(item => item.id === id)[0];\r\n    const task = {\r\n      name: graphName ? graphName : `–ë–µ–∑ —ñ–º–µ–Ω—ñ ${graphs.length}`,\r\n      data: data,\r\n      id: id ? oldTask.id : ID(),\r\n      created: id ? oldTask.created : new Date(),\r\n      updated: new Date()\r\n    };\r\n    if (id) graphs = [...graphs.filter(item => item.id !== id), task];\r\n    else graphs.push(task);\r\n    localStorage.setItem(`${name}`, JSON.stringify(graphs));\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const next = urlParams.has(\"next\") ? urlParams.get(\"next\") : null;\r\n    console.log(next);\r\n    history.push(`${next ? next : `/${name}`}`);\r\n  };\r\n\r\n  isConnected() {\r\n    const { nodes, edges } = this.state.data;\r\n    const connectedNodes = {};\r\n    const graph = {};\r\n    nodes.forEach(node => {\r\n      connectedNodes[node.id] = [];\r\n    });\r\n    edges.forEach(edge => {\r\n      connectedNodes[edge.from].push(edge.to);\r\n      connectedNodes[edge.to].push(edge.from);\r\n    });\r\n    for (var id in connectedNodes) {\r\n      if (!graph[id]) graph[id] = {};\r\n      // eslint-disable-next-line\r\n      connectedNodes[id].forEach(function(aid) {\r\n        graph[id][aid] = 1;\r\n        if (!graph[aid]) graph[aid] = {};\r\n        graph[aid][id] = 1;\r\n      });\r\n    }\r\n    let found = false;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const node = nodes.get(i);\r\n      if (!node) continue;\r\n      const paths = this.isConnectedUtil(node.id, graph);\r\n      if (Object.keys(paths).length !== Object.keys(graph).length) {\r\n        found = true;\r\n        break;\r\n      }\r\n    }\r\n    return found;\r\n  }\r\n\r\n  isConnectedUtil(s, graph) {\r\n    const solutions = {};\r\n    solutions[s] = [];\r\n    solutions[s].dist = 0;\r\n\r\n    while (true) {\r\n      let parent = null;\r\n      let nearest = null;\r\n      let dist = Infinity;\r\n      for (let n in solutions) {\r\n        if (!solutions[n]) continue;\r\n        const ndist = solutions[n].dist;\r\n        const adj = graph[n];\r\n        for (let a in adj) {\r\n          if (solutions[a]) continue;\r\n          const d = adj[a] + ndist;\r\n          if (d < dist) {\r\n            parent = solutions[n];\r\n            nearest = a;\r\n            dist = d;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (dist === Infinity) {\r\n        break;\r\n      }\r\n\r\n      solutions[nearest] = parent.concat(nearest);\r\n      solutions[nearest].dist = dist;\r\n    }\r\n\r\n    return solutions;\r\n  }\r\n\r\n  graphToMatrix() {\r\n    let { nodes, edges } = this.state.data;\r\n    this.matrix = {};\r\n    nodes.forEach(node => {\r\n      this.matrix[node.id] = [];\r\n    });\r\n    edges.forEach(edge => {\r\n      this.matrix[edge.from].push(edge.to);\r\n    });\r\n  }\r\n\r\n  isCyclic() {\r\n    debugger;\r\n    const graphNodes = Object.keys(this.matrix);\r\n    const visited = {};\r\n    const recStack = {};\r\n\r\n    for (let i = 0; i < graphNodes.length; i++) {\r\n      const node = graphNodes[i];\r\n      const cycleCheck = this.cyclicUtil(node, visited, recStack);\r\n      if (cycleCheck !== -1) return { from: parseInt(node), to: cycleCheck };\r\n    }\r\n    return false;\r\n  }\r\n\r\n  cyclicUtil(index, visited, recStack) {\r\n    if (!visited[index]) {\r\n      visited[index] = true;\r\n      recStack[index] = true;\r\n      const nodeNeighbors = this.matrix[index];\r\n      for (let i = 0; i < nodeNeighbors.length; i++) {\r\n        const currentNode = nodeNeighbors[i];\r\n        if (\r\n          !visited[currentNode] &&\r\n          this.cyclicUtil(currentNode, visited, recStack) !== -1\r\n        )\r\n          return currentNode;\r\n        else if (recStack[currentNode]) return currentNode;\r\n      }\r\n    }\r\n    recStack[index] = false;\r\n    return -1;\r\n  }\r\n\r\n  handleGenerate = (e, formData) => {\r\n    e.preventDefault();\r\n    const { vertexNumb, maxWeight, minWeight, correlation } = formData;\r\n    this.generate(vertexNumb, maxWeight, minWeight, correlation);\r\n  };\r\n\r\n  generate = (vertexNumb, maxWeight, minWeight, correlation) => {\r\n    const { edges, nodes } = this.state.data;\r\n    const newNodes = [];\r\n    for (let i = 0; i < vertexNumb; i++) {\r\n      const weight = this._getRandomInt(minWeight, maxWeight);\r\n      newNodes.push({\r\n        id: i,\r\n        number: i,\r\n        weight,\r\n        label: `${i}\\n‚Äî\\n${weight}`,\r\n        x: this._getRandomInt(-500, 500),\r\n        y: this._getRandomInt(-500, 500)\r\n      });\r\n    }\r\n    const weights = newNodes.reduce((sum, node) => (sum += node.weight), 0);\r\n    const lengths = Math.round((weights * (1 - correlation)) / correlation);\r\n    const matrix = [];\r\n    const arr = [];\r\n    for (let i = 0; i < vertexNumb; i++) arr.push(0);\r\n    for (let i = 0; i < vertexNumb; i++) matrix.push(arr.slice());\r\n    let cur_l_w = 0;\r\n    while (cur_l_w < lengths) {\r\n      let number1 = this._getRandomInt(0, vertexNumb - 1);\r\n      let number2 = this._getRandomInt(0, vertexNumb - 1);\r\n      if (number1 === number2) number2 = number1 + 1;\r\n      if (matrix[number2][number1] > 0) {\r\n        const tmp = number1;\r\n        number1 = number2;\r\n        number2 = tmp;\r\n      }\r\n      matrix[number1][number2] += 1;\r\n      cur_l_w += 1;\r\n    }\r\n    const newEdges = [];\r\n    matrix.forEach((arr, i) => {\r\n      arr.forEach((value, j) => {\r\n        if (value > 0)\r\n          newEdges.push({ from: i, to: j, weight: value, label: `${value}` });\r\n      });\r\n    });\r\n    nodes.clear();\r\n    edges.clear();\r\n    nodes.add(newNodes);\r\n    edges.add(newEdges);\r\n    this.graphToMatrix();\r\n    let cycle = this.isCyclic();\r\n    while (cycle) {\r\n      // eslint-disable-next-line\r\n      edges.forEach(edge => {\r\n        console.log(\r\n          `${JSON.stringify(edge)}, cycle: ${JSON.stringify(\r\n            cycle\r\n          )} ${edge.from === cycle.from && edge.to === cycle.to}`\r\n        );\r\n        if (edge.from === cycle.from && edge.to === cycle.to) {\r\n          const weight = edge.weight;\r\n          edges.remove(edge.id);\r\n          const ids = edges.getIds();\r\n          const randomEdgeId = ids[this._getRandomInt(0, ids.length)];\r\n          console.log(edges.get(randomEdgeId));\r\n          const randowEdge = edges.get(randomEdgeId);\r\n          edges.update({\r\n            id: randomEdgeId,\r\n            weight: randowEdge.weight + weight,\r\n            label: `${randowEdge.weight + weight}`\r\n          });\r\n          console.log(edges.get(randomEdgeId));\r\n          this.graphToMatrix();\r\n          cycle = this.isCyclic();\r\n          return;\r\n        }\r\n      });\r\n    }\r\n    this.setState({\r\n      generated: true,\r\n      nodesWeightSum: weights,\r\n      edgesWeightSum: cur_l_w\r\n    });\r\n  };\r\n\r\n  _getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      graphName,\r\n      data,\r\n      error,\r\n      edgesWeightSum,\r\n      nodesWeightSum,\r\n      generated,\r\n      showJson\r\n    } = this.state;\r\n    const { name, id } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"my-4\">\r\n          <h4 className=\"my-4\">–†–µ–¥–∞–∫—Ç–æ—Ä –≥—Ä–∞—Ñ—É</h4>\r\n          <form>\r\n            <div className=\"form-group\" ref={this.errorRef}>\r\n              <input\r\n                name=\"graphName\"\r\n                autoComplete=\"off\"\r\n                required\r\n                value={graphName}\r\n                onChange={this.handleChange}\r\n                className=\"form-control\"\r\n                placeholder=\"–ù–∞–∑–≤–∞ –≥—Ä–∞—Ñ—É\"\r\n              />\r\n            </div>\r\n            {error && <Message type=\"error\" message={error} />}\r\n            <GraphView data={data} name={this.props.name} ref={this.graphRef} />\r\n            {generated && (\r\n              <div>{`–°—É–º–∞—Ä–Ω–∞ –≤–∞–≥–∞ –≤–µ—Ä—à–∏–Ω –≥—Ä–∞—Ñ—É: ${nodesWeightSum}, c—É–º–∞—Ä–Ω–∞ –≤–∞–≥–∞ –¥—É–≥ –≥—Ä–∞—Ñ—É: ${edgesWeightSum}`}</div>\r\n            )}\r\n            <div className=\"form-group\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                onChange={this.handleChange}\r\n                id=\"json\"\r\n                name=\"showJson\"\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"json\">\r\n                –ü–æ–∫–∞–∑–∞—Ç–∏ JSON\r\n              </label>\r\n            </div>\r\n            {showJson && (\r\n              <textarea className=\"form-control\">\r\n                {JSON.stringify(\r\n                  JSON.parse(localStorage.getItem(name)).filter(\r\n                    i => i.id === id\r\n                  )[0]\r\n                )}\r\n              </textarea>\r\n            )}\r\n            <input\r\n              type=\"submit\"\r\n              onClick={this.handleSubmit}\r\n              className=\"btn btn-primary float-right\"\r\n              value=\"–ó–±–µ—Ä–µ–≥—Ç–∏\"\r\n            />\r\n          </form>\r\n        </div>\r\n\r\n        {name === \"tasks\" && !id && (\r\n          <GenerationForm\r\n            onGenerate={(e, formData) => this.handleGenerate(e, formData)}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(GraphEditorPage);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faThList,\r\n  faPen,\r\n  faClone\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ListItem = ({ item, index, onDelete, onClone, name }) => {\r\n  return (\r\n    <tr>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>\r\n        <Link to={`/${name}/${item.id}`}>\r\n          {item.name ? item.name : \"–ë–µ–∑ —ñ–º–µ–Ω—ñ\"}\r\n        </Link>\r\n      </td>\r\n      <td>\r\n        {new Date(item.created).toLocaleString(\"uk-UA\", {\r\n          year: \"numeric\",\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n          hour: \"numeric\",\r\n          minute: \"numeric\",\r\n          second: \"numeric\"\r\n        })}\r\n      </td>\r\n      <td>\r\n        {new Date(item.updated).toLocaleString(\"uk-UA\", {\r\n          year: \"numeric\",\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n          hour: \"numeric\",\r\n          minute: \"numeric\",\r\n          second: \"numeric\"\r\n        })}\r\n      </td>\r\n      <td>\r\n        <div className=\"btn-group\" role=\"group\">\r\n          {name === \"tasks\" && (\r\n            <Link\r\n              to={`/tasks/${item.id}/queue`}\r\n              className=\"btn btn-primary btn-sm\"\r\n              title=\"–°—Ñ–æ—Ä–º—É–≤–∞—Ç–∏ —á–µ—Ä–≥—É\"\r\n            >\r\n              <FontAwesomeIcon icon={faThList} />\r\n            </Link>\r\n          )}\r\n          <Link\r\n            to={`/${name}/${item.id}`}\r\n            className=\"btn btn-primary btn-sm\"\r\n            title=\"–†–µ–¥–∞–≥—É–≤–∞—Ç–∏\"\r\n          >\r\n            <FontAwesomeIcon icon={faPen} />\r\n          </Link>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info btn-sm\"\r\n            onClick={() => onClone(item.id)}\r\n            title=\"–ö–ª–æ–Ω—É–≤–∞—Ç–∏\"\r\n          >\r\n            <FontAwesomeIcon icon={faClone} />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger btn-sm\"\r\n            onClick={() => onDelete(item.id)}\r\n            title=\"–í–∏–¥–∞–ª–∏—Ç–∏\"\r\n          >\r\n            <FontAwesomeIcon icon={faTrash} />\r\n          </button>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nconst GraphList = ({ list, onDelete, onClone, name }) => {\r\n  if (!list || list.length < 1)\r\n    return <h6 className=\"text-center my-2 text-secondary\">–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç–∏–π</h6>;\r\n  const items = list\r\n    .sort((a, b) => new Date(b.created) - new Date(a.created))\r\n    .map((item, index) => (\r\n      <ListItem\r\n        key={item.id}\r\n        item={item}\r\n        index={index}\r\n        onDelete={onDelete}\r\n        onClone={onClone}\r\n        name={name}\r\n      />\r\n    ));\r\n  return (\r\n    <React.Fragment>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ width: \"10%\" }}>#</th>\r\n            <th style={{ width: \"30%\" }}>–Ü–º'—è</th>\r\n            <th style={{ width: \"25%\" }}>–°—Ç–≤–æ—Ä–µ–Ω–æ</th>\r\n            <th style={{ width: \"25%\" }}>–û–Ω–æ–≤–ª–µ–Ω–æ</th>\r\n            <th style={{ width: \"10%\" }}>–û–ø–µ—Ä–∞—Ü—ñ—ó</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{items}</tbody>\r\n      </table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GraphList;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport GraphList from \"../components/GraphList\";\r\n\r\nconst ID = () =>\r\n  \"_\" +\r\n  Math.random()\r\n    .toString(36)\r\n    .substr(2, 9);\r\n\r\nclass HomePage extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    if (!this.props.name) return;\r\n    const graphs = localStorage.getItem(this.props.name);\r\n    if (!graphs) return this.setState({ graphs: [] });\r\n    this.setState({ graphs: JSON.parse(graphs) });\r\n  }\r\n\r\n  handleDelete = id => {\r\n    const deleteConfirmation = window.confirm(\"–î—ñ–π—Å–Ω–æ –±–∞–∂–∞—î—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –≥—Ä–∞—Ñ?\");\r\n    if (!deleteConfirmation) return;\r\n    let graphs = this._getGraphs();\r\n    graphs = graphs.filter(item => item.id !== id);\r\n    localStorage.setItem(this.props.name, JSON.stringify(graphs));\r\n    this.setState({ graphs });\r\n  };\r\n\r\n  handleClone = id => {\r\n    let graphs = this._getGraphs();\r\n    const graph = { ...graphs.filter(graph => graph.id === id)[0] };\r\n    graph.name = `${graph.name} - –∫–æ–ø—ñ—è`;\r\n    graph.id = ID();\r\n    const date = new Date();\r\n    graph.created = date;\r\n    graph.updated = date;\r\n    graphs = [...graphs, graph];\r\n    localStorage.setItem(this.props.name, JSON.stringify(graphs));\r\n    this.setState({ graphs });\r\n  };\r\n\r\n  handleDeleteAll = () => {\r\n    const deleteConf = window.confirm(\"–í–∏ —Å–ø—Ä–∞–≤–¥—ñ –±–∞–∂–∞—î—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ –≥—Ä–∞—Ñ–∏?\");\r\n    if (deleteConf) {\r\n      localStorage.setItem(this.props.name, []);\r\n      this.setState({ graphs: localStorage.getItem(this.props.name) });\r\n    }\r\n  };\r\n\r\n  handleNew = () => {\r\n    this.setState({ view: { showModal: true } });\r\n  };\r\n\r\n  _getGraphs = () => {\r\n    let graphs = localStorage.getItem(this.props.name);\r\n    if (!graphs) return;\r\n    graphs = JSON.parse(graphs);\r\n    return graphs;\r\n  };\r\n\r\n  render() {\r\n    const { graphs } = this.state;\r\n    const { name } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <h4 className=\"my-4\">\r\n          {this.props.title}\r\n          <div className=\"float-right btn-group\">\r\n            <Link to={`/${name}/new`} className=\"btn btn-primary\">\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </Link>\r\n            <button className=\"btn btn-danger\" onClick={this.handleDeleteAll}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </button>\r\n          </div>\r\n        </h4>\r\n        <GraphList\r\n          name={name}\r\n          list={graphs}\r\n          onDelete={this.handleDelete}\r\n          onClone={this.handleClone}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h4 className=\"h4\">–ü—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–∏—Ö —Å–∏—Å—Ç–µ–º-2</h4>\r\n      <hr />\r\n      <p className=\"lead\">\r\n        <b>–í–∏–∫–æ–Ω–∞–≤:</b>\r\n        <br /> —Å—Ç—É–¥–µ–Ω—Ç –≥—Ä—É–ø–∏ –Ü–û-82–º–ø <br /> –ë–∞—Ä–∞–±–∞—à –¢.–ê.\r\n      </p>\r\n      <Link to=\"/tasks\" className=\"btn btn-primary float-right\">\r\n        –ü–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","function paths({ graph = [], from, to }, path = []) {\r\n  const linkedNodes = _memoize(_nodes.bind(null, graph));\r\n  return explore(from, to);\r\n\r\n  function explore(currNode, to, paths = []) {\r\n    path.push(currNode);\r\n    for (let linkedNode of linkedNodes(currNode)) {\r\n      if (linkedNode === to) {\r\n        let result = path.slice();\r\n        result.push(to);\r\n        paths.push(result);\r\n        continue;\r\n      }\r\n      if (\r\n        !_hasEdgeBeenFollowedInPath({\r\n          edge: {\r\n            from: currNode,\r\n            to: linkedNode\r\n          },\r\n          path\r\n        })\r\n      ) {\r\n        explore(linkedNode, to, paths);\r\n      }\r\n    }\r\n    path.pop();\r\n    return paths;\r\n  }\r\n}\r\n\r\nfunction _nodes(graph, node) {\r\n  return graph.reduce((p, c) => {\r\n    c[0] === node && p.push(c[1]);\r\n    return p;\r\n  }, []);\r\n}\r\n\r\nfunction _hasEdgeBeenFollowedInPath({ edge, path }) {\r\n  var indices = _allIndices(path, edge.from);\r\n  return indices.some(i => path[i + 1] === edge.to);\r\n}\r\n\r\nfunction _allIndices(arr, val) {\r\n  var indices = [],\r\n    i;\r\n  for (i = 0; i < arr.length; i++) {\r\n    if (arr[i] === val) {\r\n      indices.push(i);\r\n    }\r\n  }\r\n  return indices;\r\n}\r\n\r\nfunction _memoize(fn) {\r\n  const cache = new Map();\r\n  return function() {\r\n    var key = JSON.stringify(arguments);\r\n    var cached = cache.get(key);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    cached = fn.apply(this, arguments);\r\n    cache.set(key, cached);\r\n    return cached;\r\n  };\r\n}\r\n\r\nexport default paths;\r\n","import paths from \"./Paths\";\r\n\r\nclass Queue {\r\n  constructor(method, data) {\r\n    this._method = method;\r\n    this._data = data;\r\n  }\r\n\r\n  run() {\r\n    let result;\r\n    switch (this._method) {\r\n      case 1:\r\n        result = this._run1();\r\n        break;\r\n      case 2:\r\n        result = this._run2();\r\n        break;\r\n      case 11:\r\n        result = this._run11();\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported algo`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _toMatrix(reverse) {\r\n    const { nodes, edges } = this._data;\r\n    const matrix = [];\r\n    edges.forEach(edge => {\r\n      if (!reverse)\r\n        matrix[edge.from] = {\r\n          ...matrix[edge.from],\r\n          [edge.to]: nodes.get(edge.to).weight\r\n        };\r\n      else\r\n        matrix[edge.to] = {\r\n          ...matrix[edge.to],\r\n          [edge.from]: nodes.get(edge.from).weight\r\n        };\r\n    });\r\n    return matrix;\r\n  }\r\n\r\n  _toEdgesArray(reverse) {\r\n    const { edges } = this._data;\r\n    const graph = [];\r\n    edges.forEach(edge => {\r\n      graph.push(!reverse ? [edge.from, edge.to] : [edge.to, edge.from]);\r\n    });\r\n    return graph;\r\n  }\r\n\r\n  _toUndirectedMatrix() {\r\n    const { nodes, edges } = this._data;\r\n    const matrix = [];\r\n    edges.forEach(edge => {\r\n      matrix[edge.to] = {\r\n        ...matrix[edge.to],\r\n        [edge.from]: nodes.get(edge.from).weight\r\n      };\r\n      matrix[edge.from] = {\r\n        ...matrix[edge.from],\r\n        [edge.to]: nodes.get(edge.to).weight\r\n      };\r\n    });\r\n    return matrix;\r\n  }\r\n\r\n  _getPaths(from, to, reverse) {\r\n    return paths({ graph: this._toEdgesArray(reverse), from, to });\r\n  }\r\n\r\n  _BFS(reverse = false) {\r\n    const { nodes } = this._data;\r\n    const allNodes = Object.keys(nodes._data);\r\n    const matrixNodes = Object.keys(this._toMatrix(reverse));\r\n    const endNodes = allNodes.filter(item => !matrixNodes.includes(item));\r\n    const weights = {};\r\n    const maxPaths = {};\r\n    matrixNodes.forEach(i => {\r\n      i = parseInt(i);\r\n      let maxWeight = 0;\r\n      let maxPath = [];\r\n      endNodes.forEach(j => {\r\n        j = parseInt(j);\r\n        const paths = this._getPaths(i, j, reverse);\r\n        paths.forEach(path => {\r\n          const weight = path.reduce(\r\n            (sum, node) => sum + nodes.get(node).weight,\r\n            reverse ? -nodes.get(i).weight : 0\r\n          );\r\n          if (maxWeight < weight) {\r\n            maxWeight = weight;\r\n            maxPath = path;\r\n          }\r\n        });\r\n        weights[j] = !reverse ? nodes.get(j).weight : 0;\r\n        maxPaths[j] = [j];\r\n      });\r\n      weights[i] = maxWeight;\r\n      maxPaths[i] = maxPath;\r\n    });\r\n    return { weights, maxPaths };\r\n  }\r\n\r\n  _run2() {\r\n    const { nodes } = this._data;\r\n    const { weights } = this._BFS();\r\n    let result = [];\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const value = weights[i];\r\n      result.push({ number: i, value, names: [`T–∫—Ä.–∫.`] });\r\n    }\r\n    const sortedResult = result.sort((a, b) => b.value - a.value);\r\n    return sortedResult;\r\n  }\r\n\r\n  _run1() {\r\n    const { nodes } = this._data;\r\n    const { weights, maxPaths } = this._BFS();\r\n    const graphWeight = Math.max(...Object.values(weights));\r\n    const lengthes = Object.values(maxPaths).map(i => i.length);\r\n    const graphLength = Math.max(...lengthes);\r\n    let result = [];\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const value = weights[i] / graphWeight + lengthes[i] / graphLength;\r\n      result.push({ number: i, value, names: [`Pr`] });\r\n    }\r\n    const sortedResult = result.sort((a, b) => b.value - a.value);\r\n    return sortedResult;\r\n  }\r\n\r\n  _run11() {\r\n    const adjMatrix = this._toUndirectedMatrix();\r\n    const { nodes } = this._data;\r\n    const allNodes = Object.keys(nodes._data);\r\n    const { weights } = this._BFS(true);\r\n    const result = allNodes.map(node => {\r\n      return {\r\n        number: node,\r\n        value: adjMatrix[node] ? Object.keys(adjMatrix[node]).length : 0,\r\n        weights: weights[node],\r\n        names: [`Sv`, `T–∫—Ä.–ø–æ—á.`]\r\n      };\r\n    });\r\n    const sortedResult = result.sort((a, b) => {\r\n      if (a.value === b.value) {\r\n        return a.weights - b.weights;\r\n      }\r\n      return b.value - a.value;\r\n    });\r\n    return sortedResult;\r\n  }\r\n}\r\n\r\nexport default Queue;\r\n","import React from \"react\";\r\n\r\nconst QueueResultTable = function({ data }) {\r\n  return (\r\n    <table className=\"table my-4\">\r\n      <thead>\r\n        <tr>\r\n          <th>–ù–æ–º–µ—Ä —É —á–µ—Ä–∑—ñ</th>\r\n          <th>–ù–æ–º–µ—Ä –≤–µ—Ä—à–∏–Ω–∏</th>\r\n          <th>–ü–æ–∫–∞–∑–Ω–∏–∫</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map(function(queue, index) {\r\n          console.log(queue);\r\n          return (\r\n            <tr key={index} data-item={queue}>\r\n              <td>{index + 1}</td>\r\n              <td>{queue.number}</td>\r\n              <td>\r\n                {queue.names.length === 1\r\n                  ? `${queue.names} = ${queue.value.toFixed(2)}`\r\n                  : `${queue.names[0]} = ${queue.value}, ${queue.names[1]} = ${\r\n                      queue.weights\r\n                    }`}\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default QueueResultTable;\r\n","import React, { Component, createRef } from \"react\";\r\nimport Queue from \"../models/Queue\";\r\nimport QueueResultTable from \"./QueueResultTable\";\r\n\r\nclass QueueView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.resultsRef = createRef();\r\n    this.state = {\r\n      data: props.data,\r\n      results: [],\r\n      algo: -1,\r\n      description: {\r\n        1: `–£ –ø–æ—Ä—è–¥–∫—É —Å–ø–∞–¥–∞–Ω–Ω—è –ø—Ä–æ–Ω–æ—Ä–º–æ–≤–∞–Ω–æ—ó —Å—É–º–∏ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ —á–∞—Å—É —ñ –ø–æ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤–µ—Ä—à–∏–Ω —à–ª—è—Ö—ñ–≤ –¥–æ –∫—ñ–Ω—Ü—è –≥—Ä–∞—Ñ–∞ –∑–∞–¥–∞—á—ñ.`,\r\n        2: `–£ –ø–æ—Ä—è–¥–∫—É —Å–ø–∞–¥–∞–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–æ–≥–æ —á–∞—Å—É –¥–æ –∫—ñ–Ω—Ü—è –≥—Ä–∞—Ñ—É`,\r\n        11: `–£ –ø–æ—Ä—è–¥–∫—É —Å–ø–∞–¥–∞–Ω–Ω—è –∑–≤‚Äô—è–∑–Ω–æ—Å—Ç—ñ –≤–µ—Ä—à–∏–Ω, –∞ –ø—Ä–∏ —Ä—ñ–≤–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–Ω—è—Ö\r\n              ‚Äì –≤ –ø–æ—Ä—è–¥–∫—É –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–æ–≥–æ –ø–æ —á–∞—Å—É —à–ª—è—Ö—ñ–≤ –≤—ñ–¥ –ø–æ—á–∞—Ç–∫—É –≥—Ä–∞—Ñ–∞\r\n              –∑–∞–¥–∞—á—ñ. `\r\n      }\r\n    };\r\n  }\r\n\r\n  handleOptionChange = e => {\r\n    const algo = parseInt(e.target.value);\r\n    this.setState({ algo });\r\n    const queue = new Queue(algo, this.props.data);\r\n    const results = queue.run();\r\n    window.scrollTo(0, this.resultsRef.current.offsetTop);\r\n    this.setState({ results });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.results.length > 0) {\r\n      window.scrollTo(0, this.resultsRef.current.offsetTop);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { results, algo, description } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"algo\">\r\n            <h5>–ê–ª–≥–æ—Ä–∏—Ç–º: </h5>\r\n          </label>\r\n          <select\r\n            className=\"custom-select\"\r\n            name=\"algo\"\r\n            value={algo}\r\n            onChange={this.handleOptionChange}\r\n          >\r\n            <option value=\"-1\" disabled>\r\n              –û–±—Ä–∞—Ç–∏\r\n            </option>\r\n            {Object.keys(description).map(i => {\r\n              return (\r\n                <option value={i} key={i}>\r\n                  {i}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n        </div>\r\n        <div ref={this.resultsRef}>\r\n          {algo > 0 && (\r\n            <div>\r\n              <h5>–û–ø–∏—Å –∞–ª–≥–æ—Ä–∏—Ç–º—É: </h5>\r\n              {description[algo]}\r\n              <h5 className=\"my-2\">–†–µ–∑—É–ª—å—Ç–∞—Ç: </h5>\r\n              <QueueResultTable data={results} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueueView;\r\n","import React, { Component } from \"react\";\r\nimport { DataSet } from \"vis\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GraphView from \"../components/GraphView\";\r\nimport QueueView from \"../components/QueueView\";\r\n\r\nclass QueuePage extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const id = props.id;\r\n    let graphs = localStorage.getItem(\"tasks\");\r\n    if (!graphs) return;\r\n    graphs = JSON.parse(graphs);\r\n    const graph = graphs.filter(item => item.id === id)[0];\r\n    const { edges, nodes } = graph.data;\r\n    const data = { edges: new DataSet(edges), nodes: new DataSet(nodes) };\r\n    this.state.data = data;\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    const { id } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <h4>\r\n          –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —á–µ—Ä–≥–∏ –∑–∞–¥–∞—á\r\n          <div className=\"float-right btn-group\">\r\n            <Link\r\n              to={`/tasks/${id}?next=${window.location.pathname}`}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≥—Ä–∞—Ñ\r\n            </Link>\r\n          </div>\r\n        </h4>\r\n        <GraphView name=\"tasks\" data={data} manipulationActive={false} />\r\n        <QueueView data={data} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueuePage;\r\n","import React, { Component } from \"react\";\r\nimport GraphView from \"../components/GraphView\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faPen } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass ModellingForm extends Component {\r\n  state = {};\r\n\r\n  constructor() {\r\n    super();\r\n    this.csGraphRef = React.createRef();\r\n    this.tasksGraphRef = React.createRef();\r\n  }\r\n\r\n  renderGraphList(type) {\r\n    const graphs = this.props.getGraphs(type);\r\n    if (!graphs) return <option disabled>–í—ñ–¥—Å—É—Ç–Ω—ñ –≥—Ä–∞—Ñ–∏</option>;\r\n    return graphs.map(graph => (\r\n      <option key={graph.id} value={graph.id}>\r\n        {graph.name}\r\n      </option>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"p-2\">\r\n        <div className=\"form-group\">\r\n          <label className=\"h6\" htmlFor=\"queue\">\r\n            –ê–ª–≥–æ—Ä–∏—Ç–º —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è —á–µ—Ä–≥–∏ –∑–∞–¥–∞—á:\r\n          </label>\r\n          <select\r\n            name=\"queue\"\r\n            id=\"queue\"\r\n            value={this.props.queue}\r\n            className=\"form-control\"\r\n            onChange={this.props.handleChange}\r\n          >\r\n            <option value=\"-1\" disabled>\r\n              –û–±–µ—Ä—ñ—Ç—å —á–µ—Ä–≥—É\r\n            </option>\r\n            <option value=\"1\">\r\n              1 - –£ –ø–æ—Ä—è–¥–∫—É —Å–ø–∞–¥–∞–Ω–Ω—è –ø—Ä–æ–Ω–æ—Ä–º–æ–≤–∞–Ω–æ—ó —Å—É–º–∏ –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ —á–∞—Å—É —ñ –ø–æ\r\n              –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤–µ—Ä—à–∏–Ω —à–ª—è—Ö—ñ–≤ –¥–æ –∫—ñ–Ω—Ü—è –≥—Ä–∞—Ñ–∞ –∑–∞–¥–∞—á—ñ.\r\n            </option>\r\n            <option value=\"11\">\r\n              11 - –£ –ø–æ—Ä—è–¥–∫—É —Å–ø–∞–¥–∞–Ω–Ω—è –∑–≤‚Äô—è–∑–Ω–æ—Å—Ç—ñ –≤–µ—Ä—à–∏–Ω, –∞ –ø—Ä–∏ —Ä—ñ–≤–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–Ω—è—Ö\r\n              ‚Äì –≤ –ø–æ—Ä—è–¥–∫—É –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è –∫—Ä–∏—Ç–∏—á–Ω–æ–≥–æ –ø–æ —á–∞—Å—É —à–ª—è—Ö—ñ–≤ –≤—ñ–¥ –ø–æ—á–∞—Ç–∫—É –≥—Ä–∞—Ñ–∞\r\n              –∑–∞–¥–∞—á—ñ.\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"h6\" htmlFor=\"assignmentAlgo\">\r\n            –ê–ª–≥–æ—Ä–∏—Ç–º –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è:\r\n          </label>\r\n          <select\r\n            name=\"assignmentAlgo\"\r\n            id=\"assignmentAlgo\"\r\n            value={this.props.assignmentAlgo}\r\n            className=\"form-control\"\r\n            onChange={this.props.handleChange}\r\n          >\r\n            <option value=\"-1\" disabled>\r\n              –û–±–µ—Ä—ñ—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º\r\n            </option>\r\n            <option value=\"2\">\r\n              2 - –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –Ω–∞ –ø–µ—Ä—à–∏–π –ø—Ä–æ—Ü–µ—Å–æ—Ä,—â–æ –∑–≤—ñ–ª—å–Ω–∏–≤—Å—è. –£ —Ü—å–æ–º—É –≤–∏–ø–∞–¥–∫—É,\r\n              –ø—Ä–∏ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—ñ, –∑ –≤—ñ–ª—å–Ω–∏—Ö –ø—Ä–æ—Ü–µ—Å–æ—Ä—ñ–≤ –≤–∏–±–∏—Ä–∞—î—Ç—å—Å—è —Ç–æ–π, —è–∫–∏–π\r\n              –∑–≤—ñ–ª—å–Ω–∏–≤—Å—è —ñ –ø—Ä–æ—Å—Ç–æ—é—î –¥–æ–≤—à–µ –∑–∞ —ñ–Ω—à–∏—Ö.\r\n            </option>\r\n            <option value=\"6\" disabled>\r\n              6 - –ê–ª–≥–æ—Ä–∏—Ç–º ¬´—Å—É—Å—ñ–¥–Ω—å–æ–≥–æ¬ª –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –º–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è\r\n              –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–æ–≥–æ —á–∞—Å—É –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –æ–±—á–∏—Å–ª—é–≤–∞–ª—å–Ω–∏—Ö —Ä–æ–±—ñ—Ç.\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-row\">\r\n          <div className=\"col\">\r\n            <div>\r\n              <label className=\"h6\" htmlFor=\"tasks\">\r\n                –ì—Ä–∞—Ñ –∑–∞–¥–∞—á:\r\n              </label>\r\n              <div className=\"float-right\">\r\n                <Link className=\"badge badge-light\" to=\"/tasks/new?next=/model\">\r\n                  <FontAwesomeIcon icon={faPlus} />\r\n                </Link>\r\n                {this.props.tasks !== -1 && (\r\n                  <Link\r\n                    to={`/tasks/${this.props.tasks}?next=/model`}\r\n                    className=\"badge badge-light\"\r\n                    alt=\"–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –æ–±—Ä–∞–Ω–∏–π –≥—Ä–∞—Ñ\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faPen} />\r\n                  </Link>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <select\r\n              name=\"tasks\"\r\n              id=\"tasks\"\r\n              value={this.props.tasks}\r\n              className=\"form-control\"\r\n              onChange={this.props.handleChangeGraph}\r\n            >\r\n              <option value=\"-1\" disabled>\r\n                –û–±–µ—Ä—ñ—Ç—å –≥—Ä–∞—Ñ –∑–∞–¥–∞—á\r\n              </option>\r\n              {this.renderGraphList(\"tasks\")}\r\n            </select>\r\n            {this.props.tasks !== -1 && (\r\n              <GraphView\r\n                manipulationActive={false}\r\n                height=\"300px\"\r\n                name=\"tasks\"\r\n                data={this.props.tasksData}\r\n                ref={this.tasksGraphRef}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"col\">\r\n            <label className=\"h6\" htmlFor=\"cs\">\r\n              –ì—Ä–∞—Ñ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏:\r\n            </label>\r\n            <div className=\"float-right\">\r\n              <Link to=\"/cs/new?next=/model\" className=\"badge badge-light\">\r\n                <FontAwesomeIcon icon={faPlus} />\r\n              </Link>\r\n              {this.props.cs !== -1 && (\r\n                <Link\r\n                  to={`/cs/${this.props.cs}?next=/model`}\r\n                  className=\"badge badge-light\"\r\n                  alt=\"–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –æ–±—Ä–∞–Ω–∏–π –≥—Ä–∞—Ñ\"\r\n                >\r\n                  <FontAwesomeIcon icon={faPen} />\r\n                </Link>\r\n              )}\r\n            </div>\r\n            <select\r\n              value={this.props.cs}\r\n              name=\"cs\"\r\n              id=\"cs\"\r\n              className=\"form-control\"\r\n              onChange={this.props.handleChangeGraph}\r\n            >\r\n              <option value=\"-1\" disabled>\r\n                –û–±–µ—Ä—ñ—Ç—å –≥—Ä–∞—Ñ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏\r\n              </option>\r\n              {this.renderGraphList(\"cs\")}\r\n            </select>\r\n            {this.props.cs !== -1 && (\r\n              <GraphView\r\n                height=\"300px\"\r\n                manipulationActive={false}\r\n                name=\"cs\"\r\n                data={this.props.csData}\r\n                ref={this.csGraphRef}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModellingForm;\r\n","class ExecutionError extends Error {}\r\n\r\nexport default ExecutionError;\r\n","import paths from \"./Paths\";\r\nimport ExecutionError from \"./Error\";\r\nimport randomMC from \"random-material-color\";\r\n\r\nconst READY_STATUS = 1;\r\nconst RUNNING_STATUS = 2;\r\nconst FINISHED_STATUS = 3;\r\nconst TRANSMISSION_STATUS = 4;\r\n\r\nclass Model {\r\n  constructor(tasks, cs, queue, algo) {\r\n    this.tasksData = tasks;\r\n    this.csData = cs;\r\n    this.queue = queue;\r\n    this.algo = algo;\r\n    this.tasks = this._formDependecies();\r\n    this.processors = this._prepareProcessors();\r\n    this.result = {};\r\n    this.assignmentLog = {};\r\n    this.tasksOnProcessors = {};\r\n    this.colors = this._getColorArray();\r\n    this.transmissionInfo = {};\r\n    this.transmissions = {};\r\n    Object.keys(this.processors).forEach(processorId => {\r\n      this.tasksOnProcessors[processorId] = [];\r\n      this.transmissionInfo[processorId] = [];\r\n    });\r\n  }\r\n\r\n  _getColorArray = () => {\r\n    const colors = {};\r\n    const { nodes } = this.tasksData;\r\n    nodes.forEach(node => (colors[node.id] = randomMC.getColor()));\r\n    return colors;\r\n  };\r\n\r\n  _formDependecies = () => {\r\n    const { nodes } = this.tasksData;\r\n    const { edges } = this.tasksData;\r\n    const dependencies = {};\r\n    nodes.forEach(node => {\r\n      dependencies[node.id] = { parents: {}, weight: node.weight };\r\n    });\r\n    edges.forEach(edge => {\r\n      dependencies[edge.to].parents = {\r\n        ...dependencies[edge.to].parents,\r\n        [edge.from]: edge.weight\r\n      };\r\n    });\r\n    Object.keys(dependencies).forEach(id => {\r\n      if (Object.keys(dependencies[id].parents).length === 0)\r\n        dependencies[id].status = READY_STATUS;\r\n    });\r\n    return dependencies;\r\n  };\r\n\r\n  _toEdgesArray() {\r\n    const { edges } = this.csData;\r\n    const graph = [];\r\n    edges.forEach(edge => {\r\n      graph.push([edge.from, edge.to]);\r\n      graph.push([edge.to, edge.from]);\r\n    });\r\n    return graph;\r\n  }\r\n\r\n  _getShortestPath(from, to) {\r\n    const pathsR = paths({ graph: this._toEdgesArray(), from, to });\r\n    if (from === to) return [from];\r\n    if (pathsR.length === 0) return -1;\r\n    return pathsR.reduce((a, b) => (a.length < b.length ? a : b));\r\n  }\r\n\r\n  _prepareProcessors = () => {\r\n    const { nodes: processors } = this.csData;\r\n    const preparedProcessors = {};\r\n    processors.forEach(processor => {\r\n      preparedProcessors[processor.id] = {\r\n        ...preparedProcessors[processor.id],\r\n        status: READY_STATUS,\r\n        standBy: 0\r\n      };\r\n    });\r\n    return preparedProcessors;\r\n  };\r\n\r\n  _getTransmissionTact = (\r\n    sourceId,\r\n    targetId,\r\n    taskEnded,\r\n    transmissionTacts,\r\n    parentTaskId,\r\n    taskId,\r\n    tact\r\n  ) => {\r\n    console.log(\r\n      `_getTransmissionTact - source: ${sourceId}, target: ${targetId}, taskEnded: ${taskEnded}, TransmissionTacts: ${transmissionTacts}, parentTask: ${parentTaskId}, task: ${taskId}`\r\n    );\r\n    const parentTransmission = this.transmissions[\r\n      `${parentTaskId} -> ${taskId}`\r\n    ];\r\n    console.log(`Parent Transmission: ${JSON.stringify(parentTransmission)}`);\r\n    const lastEnded = Math.max(\r\n      ...this.transmissionInfo[sourceId].map(i => i.end),\r\n      ...this.transmissionInfo[targetId].map(i => i.end)\r\n    );\r\n    const freeIntervals = this.transferGaps(\r\n      sourceId,\r\n      targetId,\r\n      parentTaskId\r\n    ).filter(i => i.interval >= transmissionTacts && i.start >= taskEnded);\r\n    console.log(`Free intervals: ${JSON.stringify(freeIntervals)}`);\r\n    console.log(`Last ended: ${JSON.stringify(lastEnded)}`);\r\n    if (freeIntervals.length > 0) {\r\n      for (let freeInterval of freeIntervals) {\r\n        if (!parentTransmission) return freeInterval.start;\r\n        else if (parentTransmission.end <= freeInterval.start)\r\n          return freeInterval.start;\r\n      }\r\n      return lastEnded;\r\n    }\r\n    if (!parentTransmission)\r\n      return lastEnded >= taskEnded ? lastEnded : taskEnded;\r\n    return parentTransmission.end > lastEnded\r\n      ? parentTransmission.end\r\n      : lastEnded;\r\n  };\r\n\r\n  transferGaps = (source, target, parent) => {\r\n    const transmissionInfo = JSON.parse(JSON.stringify(this.transmissionInfo));\r\n    const busy = [\r\n      ...transmissionInfo[source],\r\n      ...transmissionInfo[target],\r\n      {\r\n        start: this.assignmentLog[parent].started,\r\n        end: this.assignmentLog[parent].ended\r\n      }\r\n    ];\r\n    console.log(`Assignment log: ${JSON.stringify(this.assignmentLog)}`);\r\n    console.log(`Busy: ${JSON.stringify(busy)}`);\r\n    const sorted = busy.slice().sort((a, b) => (a.start > b.start ? 1 : -1));\r\n    const merged = sorted.slice(0, 1);\r\n    for (let i = 1; i < sorted.length; i++) {\r\n      const cur = sorted[i];\r\n      const last = merged[merged.length - 1];\r\n      if (cur.start <= last.end) last.end = Math.max(last.end, cur.end);\r\n      else merged.push(cur);\r\n    }\r\n    console.log(this.assignmentLog[source] === merged);\r\n    console.log(`Merged: ${JSON.stringify(merged)}`);\r\n    return this.findGaps(merged.filter(i => i !== undefined), source, target);\r\n  };\r\n\r\n  findGaps = (array, source, target) => {\r\n    console.log(array);\r\n    console.log(source, target);\r\n    return array\r\n      .sort((a, b) => (a.start > b.start ? 1 : -1))\r\n      .map((cur, index, arr) => {\r\n        if (index === arr.length - 1) {\r\n          // console.log(`Index: ${index}`);\r\n          // const { start, end } = array[index];\r\n          // console.log(`Index: ${start}`);\r\n          // const min = Math.min(\r\n          //   ...this.transmissionInfo[target]\r\n          //     .filter(i => i.start >= end)\r\n          //     .map(i => i.start),\r\n          //   ...this.transmissionInfo[source]\r\n          //     .filter(i => i.start >= end)\r\n          //     .map(i => i.start)\r\n          // );\r\n          // console.log(`Min: ${min}`);\r\n          // return { interval: min - end, start: end, end: min };\r\n          return;\r\n        }\r\n        return {\r\n          interval: arr[index + 1].start - cur.end,\r\n          start: cur.end,\r\n          end: arr[index + 1].start\r\n        };\r\n      })\r\n      .filter(i => i !== undefined);\r\n  };\r\n\r\n  _makeTransmissions = (taskId, processorId, tact) => {\r\n    const orTact = tact;\r\n    const parents = this.tasks[taskId].parents;\r\n    if (Object.keys(parents).length === 0) return tact;\r\n    const tacts = Object.keys(parents).map(parent => {\r\n      const {\r\n        ended: parentEnded,\r\n        processorId: parentProcessor\r\n      } = this.assignmentLog[parent];\r\n      if (parentProcessor === processorId) return tact;\r\n      const path = this._getShortestPath(\r\n        parseInt(parentProcessor),\r\n        parseInt(processorId)\r\n      );\r\n      console.log(\r\n        `Path to transmit ${parent} to ${taskId} from processor ${parentProcessor} to ${processorId}: ${JSON.stringify(\r\n          path\r\n        )}`\r\n      );\r\n      if (path === -1) return tact;\r\n      const tacts = [];\r\n      path.forEach((node, index) => {\r\n        if (index === path.length - 1) return;\r\n        const sourceId = node;\r\n        const targetId = path[index + 1];\r\n        const transmissionTacts = this.tasks[taskId].parents[parent];\r\n        tact = this._getTransmissionTact(\r\n          sourceId,\r\n          targetId,\r\n          parentEnded,\r\n          transmissionTacts,\r\n          parent,\r\n          taskId,\r\n          orTact\r\n        );\r\n        const transmissionStart = parseInt(tact);\r\n        const transmissionEnd = parseInt(tact) + parseInt(transmissionTacts);\r\n        console.log(\r\n          `Transmission of task ${parent} from ${sourceId} to ${targetId} starts on ${transmissionStart} and ends on ${transmissionEnd}`\r\n        );\r\n        this.transmissions[`${parent} -> ${taskId}`] = {\r\n          start: transmissionStart,\r\n          end: transmissionEnd\r\n        };\r\n        this.transmissionInfo[sourceId].push({\r\n          start: transmissionStart,\r\n          end: transmissionEnd,\r\n          task: parent\r\n        });\r\n        this.transmissionInfo[targetId].push({\r\n          start: transmissionStart,\r\n          end: transmissionEnd,\r\n          task: parent\r\n        });\r\n        this.result = {\r\n          ...this.result,\r\n          [`${parent}->${taskId}(${targetId})`]: {\r\n            values: [\r\n              {\r\n                x: transmissionStart,\r\n                y: parseFloat(sourceId) + 0.25\r\n              },\r\n              {\r\n                x: transmissionEnd,\r\n                y: parseFloat(sourceId) + 0.25\r\n              }\r\n            ],\r\n            color: this.colors[parent]\r\n          }\r\n        };\r\n        tacts.push(transmissionEnd);\r\n      });\r\n      return Math.max(...tacts);\r\n    });\r\n    return Math.max(...tacts, 0);\r\n  };\r\n\r\n  _executeTask = (taskId, processorId, tact) => {\r\n    const curTact = tact;\r\n    tact = this._makeTransmissions(taskId, processorId, tact);\r\n    if (curTact > tact) tact = curTact;\r\n    console.log(\r\n      `---> Executting task ${taskId} on processor ${processorId} with a starting tact of ${tact}`\r\n    );\r\n    this.assignmentLog[taskId] = {\r\n      processorId,\r\n      started: tact,\r\n      ended: tact + this.tasks[taskId].weight\r\n    };\r\n    this.processors[processorId].status =\r\n      this.processors[processorId].status === TRANSMISSION_STATUS\r\n        ? TRANSMISSION_STATUS\r\n        : RUNNING_STATUS;\r\n    this.processors[processorId].from = tact;\r\n    this.processors[processorId].to = tact + this.tasks[taskId].weight;\r\n    this.processors[processorId].task = taskId;\r\n    this.tasks[taskId].status = RUNNING_STATUS;\r\n    this.queue = this.queue.filter(({ number: id }) => id !== taskId);\r\n    this.result[taskId] = this.result[taskId]\r\n      ? [...this.result[taskId]]\r\n      : {\r\n          values: [\r\n            { x: tact, y: parseInt(processorId) },\r\n            {\r\n              x: tact + this.tasks[taskId].weight,\r\n              y: parseInt(processorId)\r\n            }\r\n          ],\r\n          color: this.colors[taskId]\r\n        };\r\n  };\r\n\r\n  _getFreeProcessors = (tact, taskId) => {\r\n    switch (this.algo) {\r\n      case \"2\":\r\n        return this._getFreeProcessors2(tact);\r\n      case \"6\":\r\n        return this._getFreeProcessors6(tact, taskId);\r\n      default:\r\n        throw Error(`Algo is not implemented!`);\r\n    }\r\n  };\r\n\r\n  _getFreeProcessors6 = (tact, taskId) => {\r\n    const freeProcessorsIds = Object.keys(this.processors).filter(\r\n      processorId => {\r\n        const processor = this.processors[processorId];\r\n        return (\r\n          processor.status === READY_STATUS ||\r\n          (processor.status === TRANSMISSION_STATUS && processor.to <= tact)\r\n        );\r\n      }\r\n    );\r\n    const parents = this.tasks[taskId].parents;\r\n    if (Object.keys(parents).length <= 0) return this._getFreeProcessors2(tact);\r\n    const result = freeProcessorsIds.map(processor => {\r\n      let sum = 0;\r\n      Object.keys(parents).forEach(parent => {\r\n        const executedOn = this.assignmentLog[parent].processorId;\r\n        const pathLength = this._getShortestPath(\r\n          parseInt(executedOn),\r\n          parseInt(processor)\r\n        ).length;\r\n        sum += pathLength * parents[parent];\r\n      });\r\n      return { [processor]: sum };\r\n    });\r\n    console.log(result);\r\n    return this._getFreeProcessors2(tact);\r\n  };\r\n\r\n  _getFreeProcessors2 = tact => {\r\n    const freeProcessorsIds = Object.keys(this.processors).filter(\r\n      processorId => {\r\n        const processor = this.processors[processorId];\r\n        return (\r\n          processor.status === READY_STATUS ||\r\n          (processor.status === TRANSMISSION_STATUS &&\r\n            processor.to <= tact) /* ||*/\r\n          // (processor.status === RUNNING_STATUS && processor.from > tact)\r\n        );\r\n      }\r\n    );\r\n    if (freeProcessorsIds.length === 0) return -1;\r\n    console.log(`Free processors: ${JSON.stringify(freeProcessorsIds)}`);\r\n    // const processorsQueue = freeProcessorsIds\r\n    //   .map(id => ({\r\n    //     standBy: this.processors[id].standBy,\r\n    //     id\r\n    //   }))\r\n    //   .sort((a, b) => b.standBy - a.standBy)\r\n    //   .map(item => item.id);\r\n    let maxStandBy = -1,\r\n      selectedId = 0;\r\n    Object.values(freeProcessorsIds).forEach(processorId => {\r\n      const processor = this.processors[processorId];\r\n      if (processor.standBy > maxStandBy) {\r\n        maxStandBy = processor.standBy;\r\n        selectedId = processorId;\r\n      }\r\n    });\r\n    console.log(`Selected processorId: ${selectedId}`);\r\n    return selectedId;\r\n    // console.log(`Prioritised queue of processors: ${processorsQueue}`);\r\n    // return processorsQueue;\r\n  };\r\n\r\n  _getReadyTasks = () => {\r\n    let readyTasks = this.queue.filter(({ number: taskId }) => {\r\n      const task = this.tasks[taskId];\r\n      if (Object.keys(task.parents).length === 0)\r\n        return task.status === READY_STATUS;\r\n      else {\r\n        const preparedParents = [];\r\n        Object.keys(task.parents).forEach(parentId => {\r\n          preparedParents.push(\r\n            this.tasks[parentId].status === FINISHED_STATUS ||\r\n              this.tasks[parentId].status === TRANSMISSION_STATUS\r\n          );\r\n        });\r\n        const isTaskReady = preparedParents.every(parent => parent);\r\n        return isTaskReady;\r\n      }\r\n    });\r\n    readyTasks = readyTasks.map(task => task.number);\r\n    return readyTasks;\r\n  };\r\n\r\n  _checkFinish = tact => {\r\n    Object.keys(this.processors).forEach(processorId => {\r\n      const processor = this.processors[processorId];\r\n      if (\r\n        processor.status === RUNNING_STATUS ||\r\n        processor.status === TRANSMISSION_STATUS\r\n      ) {\r\n        if (processor.to === tact) {\r\n          console.log(`Task ${processor.task} finished on ${processorId}`);\r\n          processor.status =\r\n            processor.status === TRANSMISSION_STATUS\r\n              ? TRANSMISSION_STATUS\r\n              : READY_STATUS;\r\n          processor.standBy = 0;\r\n          this.tasks[processor.task].status = FINISHED_STATUS;\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  _processorsStandBy = () => {\r\n    Object.keys(this.processors).forEach(processorId => {\r\n      const processor = this.processors[processorId];\r\n      if (\r\n        processor.status === READY_STATUS ||\r\n        processor.status === TRANSMISSION_STATUS\r\n      )\r\n        this.processors[processorId].standBy++;\r\n    });\r\n  };\r\n\r\n  model = () => {\r\n    let tact = 0;\r\n    while (this.queue.length !== 0) {\r\n      // while (tact < 50) {\r\n      tact++;\r\n      console.warn(`Tact: ${tact}`);\r\n      console.log(`Processors: ${JSON.stringify(this.processors)}`);\r\n      console.log(`Tasks: ${JSON.stringify(this.tasks)}`);\r\n      console.log(`Queue: ${JSON.stringify(this.queue)}`);\r\n      console.log(`Transmission: ${JSON.stringify(this.transmissionInfo)}`);\r\n      this._checkFinish(tact);\r\n      const tasks = this._getReadyTasks();\r\n      console.log(`Ready tasks: ${JSON.stringify(tasks)}`);\r\n      try {\r\n        if (tasks.length === 0) throw new ExecutionError(`No tasks available!`);\r\n        for (let task of tasks) {\r\n          const freeProcessor = this._getFreeProcessors(tact, task);\r\n          if (freeProcessor === -1)\r\n            throw new ExecutionError(`No free processors`);\r\n          this._executeTask(task, freeProcessor, tact);\r\n        }\r\n      } catch (e) {\r\n        if (e instanceof ExecutionError) console.log(e.message);\r\n        else throw e;\r\n      } finally {\r\n        this._processorsStandBy();\r\n      }\r\n    }\r\n    return { result: this.result, tacts: tact };\r\n  };\r\n}\r\n\r\nexport default Model;\r\n","import React, { Component } from \"react\";\r\nimport Queue from \"../models/Queue\";\r\nimport Model from \"../models/Model\";\r\nimport {\r\n  XYPlot,\r\n  LabelSeries,\r\n  HorizontalGridLines,\r\n  VerticalGridLines,\r\n  XAxis,\r\n  YAxis,\r\n  LineMarkSeries,\r\n  LineSeries\r\n} from \"react-vis\";\r\nimport \"react-vis/dist/style.css\";\r\n\r\nclass ModellingView extends Component {\r\n  state = {};\r\n\r\n  renderLines = lines => {\r\n    return Object.keys(lines).map(lineId => {\r\n      const line = lines[lineId];\r\n      return (\r\n        <LineMarkSeries\r\n          data={line.values}\r\n          key={lineId}\r\n          color={line.color}\r\n          strokeWidth={3.5}\r\n          animation={\"nowobble\"}\r\n          strokeDasharray={lineId.length > 3 ? [7, 3] : []}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  renderLabels = lines => {\r\n    return Object.keys(lines).map(lineId => {\r\n      const line = lines[lineId];\r\n      const start = line.values[0];\r\n      const end = line.values[1];\r\n      const x = start.x + (end.x - start.x) / 2;\r\n      const y = start.y + 0.1;\r\n      return (\r\n        <LabelSeries\r\n          data={[{ x, y, label: lineId }]}\r\n          style={{ fontSize: \"8pt\" }}\r\n          key={lineId}\r\n          labelAnchorY=\"auto\"\r\n          labelAnchor–•=\"auto\"\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  renderProcessorsLines = result => {\r\n    return this.props.cs.nodes.map(cs => {\r\n      return (\r\n        <LineSeries\r\n          data={[{ x: 0.5, y: cs.id }, { x: this.getMax(result), y: cs.id }]}\r\n          key={cs.id}\r\n          color={\"#d1d1d1\"}\r\n          strokeWidth={4}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  getMax = result =>\r\n    Math.max(...[].concat(...Object.values(result)).map(o => o.values[1].x)) +\r\n    0.5;\r\n\r\n  render() {\r\n    let { tasks, cs, queue: method, assignmentAlgo } = this.props;\r\n    if (typeof tasks === \"function\") {\r\n      tasks = tasks();\r\n      cs = cs();\r\n    }\r\n    const queue = new Queue(parseInt(method), tasks).run();\r\n    console.clear();\r\n    const { result } = new Model(tasks, cs, queue, assignmentAlgo).model();\r\n    if (!result) return <div />;\r\n    console.log(JSON.stringify(result));\r\n    return (\r\n      <React.Fragment>\r\n        <h5 className=\"h5\">–ß–µ—Ä–≥–∞ –∑–∞–¥–∞—á:</h5>\r\n        <div>\r\n          {Object.values(queue)\r\n            .map(val => val.number)\r\n            .join(\", \")}\r\n        </div>\r\n        <div\r\n          style={{\r\n            overflow: \"auto\",\r\n            whiteSpace: \"nowrap\"\r\n          }}\r\n        >\r\n          <XYPlot\r\n            className=\"my-4\"\r\n            height={600}\r\n            width={75 * this.getMax(result)}\r\n            xType=\"linear\"\r\n            yType=\"linear\"\r\n            xDomain={[0.5, this.getMax(result)]}\r\n            yDomain={[-0.5, Math.max(...cs.nodes.map(node => node.id)) + 0.5]}\r\n          >\r\n            <HorizontalGridLines />\r\n            <VerticalGridLines />\r\n            <XAxis title=\"–¢–∞–∫—Ç\" position=\"end\" />\r\n            <YAxis\r\n              title=\"–ü–ï\"\r\n              position=\"end\"\r\n              tickValues={[0, ...cs.nodes.map(node => node.id)]}\r\n              tickFormat={numb => parseFloat(numb).toFixed(0)}\r\n            />\r\n            {this.renderProcessorsLines(result)}\r\n            {this.renderLines(result)}\r\n            {this.renderLabels(result)}\r\n          </XYPlot>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModellingView;\r\n","import React, { Component } from \"react\";\r\nimport { DataSet } from \"vis\";\r\nimport ModellingForm from \"../components/ModellingForm\";\r\nimport ModellingView from \"../components/ModellingView\";\r\n\r\nclass ModellingPage extends Component {\r\n  state = {\r\n    tasks: -1,\r\n    cs: -1,\r\n    queue: -1,\r\n    assignmentAlgo: -1\r\n  };\r\n\r\n  getGraphs = type => {\r\n    let graphs = localStorage.getItem(type);\r\n    if (!graphs) return;\r\n    graphs = JSON.parse(graphs);\r\n    return graphs;\r\n  };\r\n\r\n  getById = (graphs, id) => {\r\n    const found = graphs.filter(graph => graph.id === id);\r\n    return found[0];\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  handleChangeGraph = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      [`${e.target.name}Data`]: this.getById(\r\n        this.getGraphs(e.target.name),\r\n        e.target.value\r\n      ).data\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { tasks, queue, cs, assignmentAlgo, tasksData, csData } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <ModellingForm\r\n          handleChange={this.handleChange}\r\n          handleChangeGraph={this.handleChangeGraph}\r\n          tasks={tasks}\r\n          cs={cs}\r\n          queue={queue}\r\n          assignmentAlgo={assignmentAlgo}\r\n          getGraphs={this.getGraphs}\r\n          tasksData={tasksData}\r\n          csData={csData}\r\n        />\r\n        {!(\r\n          tasks === -1 ||\r\n          cs === -1 ||\r\n          queue === -1 ||\r\n          assignmentAlgo === -1\r\n        ) && (\r\n          <ModellingView\r\n            tasks={{\r\n              nodes: new DataSet(tasksData.nodes),\r\n              edges: new DataSet(tasksData.edges)\r\n            }}\r\n            cs={{\r\n              nodes: new DataSet(csData.nodes),\r\n              edges: new DataSet(csData.edges)\r\n            }}\r\n            queue={queue}\r\n            assignmentAlgo={assignmentAlgo}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModellingPage;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport {\r\n  GraphEditorPage,\r\n  GraphListPage,\r\n  QueuePage,\r\n  HomePage,\r\n  ModellingPage\r\n} from \"../pages\";\r\nimport ModellingView from \"../components/ModellingView\";\r\nimport { DataSet } from \"vis\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <div className=\"container my-4\">\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          key=\"home-page\"\r\n          path=\"/\"\r\n          render={() => {\r\n            document.title = `–ü–ó–ö–° - 2`;\r\n            return <HomePage />;\r\n          }}\r\n        />\r\n        <Route\r\n          key=\"tasks-graphs\"\r\n          exact\r\n          path=\"/tasks\"\r\n          render={() => {\r\n            document.title = `–ì—Ä–∞—Ñ–∏ –∑–∞–¥–∞—á | –ü–ó–ö–° - 2`;\r\n            return <GraphListPage name=\"tasks\" title=\"–ì—Ä–∞—Ñ–∏ –∑–∞–¥–∞—á\" />;\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/tasks/new\"\r\n          render={() => {\r\n            document.title = `–ù–æ–≤–∏–π –≥—Ä–∞—Ñ –∑–∞–¥–∞—á | –ü–ó–ö–° - 2`;\r\n            return <GraphEditorPage name=\"tasks\" />;\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/tasks/:id\"\r\n          exact\r\n          type=\"task\"\r\n          render={props => {\r\n            document.title = `–†–µ–¥–∞–∫—Ç–æ—Ä –≥—Ä–∞—Ñ—É –∑–∞–¥–∞—á | –ü–ó–ö–° - 2`;\r\n            return <GraphEditorPage name=\"tasks\" id={props.match.params.id} />;\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/tasks/:id*/queue\"\r\n          exact\r\n          type=\"task\"\r\n          render={props => {\r\n            document.title = `–§–æ—Ä–º—É–≤–∞–Ω–Ω—è —á–µ—Ä–≥–∏ –∑–∞–¥–∞—á | –ü–ó–ö–° - 2`;\r\n            return <QueuePage id={props.match.params.id} />;\r\n          }}\r\n        />\r\n        <Route\r\n          key=\"cs-graphs\"\r\n          exact\r\n          path=\"/cs\"\r\n          render={() => {\r\n            document.title = `–ì—Ä–∞—Ñ–∏ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–∏—Ö —Å–∏—Å—Ç–µ–º | –ü–ó–ö–° - 2`;\r\n            return (\r\n              <GraphListPage name=\"cs\" title=\"–ì—Ä–∞—Ñ–∏ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏\" />\r\n            );\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/cs/new\"\r\n          render={() => {\r\n            document.title = `–ù–æ–≤–∏–π –≥—Ä–∞—Ñ –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ | –ü–ó–ö–° - 2`;\r\n            return <GraphEditorPage name=\"cs\" />;\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/cs/:id\"\r\n          type=\"task\"\r\n          render={props => {\r\n            document.title = `–†–µ–¥–∞–∫—Ç–æ—Ä –≥—Ä–∞—Ñ—É –∫–æ–º–ø'—é—Ç–µ—Ä–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ | –ü–ó–ö–° - 2`;\r\n            return <GraphEditorPage name=\"cs\" id={props.match.params.id} />;\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/model\"\r\n          exact\r\n          render={() => {\r\n            document.title = `–ú–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è | –ü–ó–ö–° - 2`;\r\n            return <ModellingPage />;\r\n          }}\r\n        />\r\n        {/* <Route\r\n          path=\"/model/test\"\r\n          exact\r\n          render={() => {\r\n            document.title = `–ú–æ–¥–µ–ª—é–≤–∞–Ω–Ω—è (—Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è) | –ü–ó–ö–° - 2`;\r\n            return (\r\n              <ModellingView\r\n                queue=\"1\"\r\n                assignmentAlgo=\"6\"\r\n                tasks={() => {\r\n                  const tasks = JSON.parse(\r\n                    window.localStorage.getItem(\"tasks\")\r\n                  );\r\n                  let {\r\n                    data: { nodes, edges }\r\n                  } = tasks.filter(task => task.id === \"_f5qekgjyo\")[0];\r\n                  nodes = new DataSet(nodes);\r\n                  edges = new DataSet(edges);\r\n                  return { nodes, edges };\r\n                }}\r\n                cs={() => {\r\n                  const cs = JSON.parse(window.localStorage.getItem(\"cs\"));\r\n                  let {\r\n                    data: { nodes, edges }\r\n                  } = cs.filter(cs => cs.id === \"_sk0pgtmbd\")[0];\r\n                  nodes = new DataSet(nodes);\r\n                  edges = new DataSet(edges);\r\n                  return { nodes, edges };\r\n                }}\r\n              />\r\n            );\r\n          }}\r\n        /> */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faIgloo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Navbar from \"./containers/Navbar\";\r\nimport Routes from \"./containers/Routes\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nlibrary.add(faIgloo);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <React.Fragment>\r\n          <Navbar />\r\n          <Routes />\r\n        </React.Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}