{"version":3,"sources":["containers/Navbar.jsx","components/GraphView.jsx","components/Message.jsx","components/GenerationForm.jsx","pages/GraphEditorPage.jsx","components/ListItem.jsx","components/GraphList.jsx","pages/GraphListPage.jsx","pages/HomePage.jsx","models/Queue.js","components/QueueResultTable.jsx","components/QueueView.jsx","pages/QueuePage.jsx","containers/Routes.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","NavLink","to","id","activeClassName","exact","TYPE_CS","TYPE_TASK","GraphView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","locales","uk","edit","del","back","addNode","addEdge","editNode","editEdge","addDescription","edgeDescription","editEdgeDescription","createEdgeError","deleteClusterError","editClusterError","params","data","callback","mode","type","isEdit","isEdge","lastId","state","nodes","map","node","sort","b","number","isNaN","weight","getWeight","label","concat","e","console","log","onDoubleClick","edges","_this$state","_this$state$data","nodesS","edgesS","length","get","update","objectSpread","edge","name","network","appRef","createRef","options","locale","physics","enabled","manipulation","undefined","manipulationActive","initiallyActive","arrows","prompt","parseInt","alert","prevProps","prevState","_this$props$data","_prevProps$data","edgesP","nodesP","_this2","Network","current","on","setState","body","snapshot","_this3","style","height","width","ref","Component","Message","_ref","message","GenerationForm","vertexNumb","maxWeight","minWeight","correlation","handleChange","defineProperty","target","value","autoComplete","onChange","min","step","max","onClick","onGenerate","ID","Math","random","toString","substr","GraphEditorPage","graphName","DataSet","handleSubmit","_this$props","history","preventDefault","graphToMatrix","isCyclic","error","isConnected","_data","values","graphs","localStorage","getItem","JSON","parse","oldTask","filter","item","task","created","Date","updated","toConsumableArray","push","setItem","stringify","urlParams","URLSearchParams","window","location","search","next","has","handleGenerate","formData","generate","_this$state$data2","newNodes","i","_getRandomInt","x","y","weights","reduce","sum","lengths","round","matrix","arr","slice","cur_l_w","number1","number2","tmp","newEdges","forEach","j","from","clear","add","cycle","remove","ids","getIds","randomEdgeId","randowEdge","generated","nodesWeightSum","edgesWeightSum","ceil","floor","errorRef","React","graphRef","_this$props2","graph","_graph$data","scrollTo","offsetTop","_this$state$data3","connectedNodes","aid","found","paths","isConnectedUtil","keys","s","solutions","dist","parent","nearest","Infinity","n","ndist","adj","d","_this$state$data4","graphNodes","visited","recStack","cycleCheck","cyclicUtil","index","nodeNeighbors","currentNode","_this$props3","Fragment","required","placeholder","components_Message","components_GraphView","components_GenerationForm","withRouter","ListItem","onDelete","onClone","scope","Link","toLocaleString","year","month","day","hour","minute","second","role","title","react_fontawesome_index_es","icon","faThList","faPen","faClone","faTrash","GraphList","list","items","components_ListItem","key","HomePage","handleDelete","confirm","_getGraphs","handleClone","date","handleDeleteAll","handleNew","view","showModal","faPlus","faTrashAlt","components_GraphList","hasEdgeBeenFollowedInPath","_ref2","path","val","indices","allIndices","some","Queue","method","_method","result","_run1","_run11","Error","reverse","_this$_data","_this$_data2","_ref$graph","arguments","linkedNodes","fn","cache","Map","cached","apply","set","memoize","p","c","bind","explore","currNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","linkedNode","err","return","pop","_toEdgesArray","allNodes","matrixNodes","_toMatrix","endNodes","includes","maxPaths","maxPath","_getPaths","_this$_BFS","_BFS","graphWeight","lengthes","graphLength","names","adjMatrix","_toUndirectedMatrix","QueueResultTable","queue","data-item","toFixed","QueueView","handleOptionChange","algo","results","run","resultsRef","description","1","11","htmlFor","disabled","components_QueueResultTable","QueuePage","pathname","components_QueueView","Routes","Switch","Route","render","document","pages_HomePage","GraphListPage","pages_GraphEditorPage","match","pages_QueuePage","library","faIgloo","App","BrowserRouter","basename","process","containers_Navbar","containers_Routes","Boolean","hostname","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7c71afa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <NavLink className=\"navbar-brand\" to=\"/\">\r\n        ПЗКС-2\r\n      </NavLink>\r\n\r\n      <div className=\"navbar\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/tasks\">\r\n              Граф задач <span className=\"sr-only\">(current)</span>\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" activeClassName=\"active\" to=\"/cs\">\r\n              Граф комп'ютерної системи\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              exact\r\n              className=\"nav-link disabled\"\r\n              activeClassName=\"active\"\r\n              to=\"/model\"\r\n            >\r\n              Моделювання\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              exact\r\n              className=\"nav-link disabled\"\r\n              activeClassName=\"active\"\r\n              to=\"/stats\"\r\n            >\r\n              Статистика\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Network } from \"vis\";\r\nimport React, { Component, createRef } from \"react\";\r\nimport \"vis/dist/vis.css\";\r\n\r\nconst TYPE_CS = 1;\r\nconst TYPE_TASK = 2;\r\n\r\nclass GraphView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.type = props.name === \"tasks\" ? TYPE_TASK : TYPE_CS;\r\n    this.network = {};\r\n    this.appRef = createRef();\r\n    this.options = {\r\n      locales: this.locales,\r\n      locale: \"uk\",\r\n      physics: {\r\n        enabled: false\r\n      },\r\n      manipulation: {\r\n        enabled:\r\n          this.props.manipulationActive !== undefined\r\n            ? this.props.manipulationActive\r\n            : true,\r\n        initiallyActive: true,\r\n        addNode: (data, callback) => {\r\n          this.params(data, callback, \"add\", \"вершини\");\r\n        },\r\n        // editNode: (data, callback) => {\r\n        //   this.params(data, callback, \"edit\", \"вершини\");\r\n        // },\r\n        addEdge: (data, callback) => {\r\n          this.params(data, callback, \"add\", \"зв'язку\");\r\n        }\r\n        // editEdge: (data, callback) => {\r\n        //   this.params(data, callback, \"edit\", \"зв'язку\");\r\n        // }\r\n      },\r\n      edges: {\r\n        arrows: {\r\n          to: {\r\n            enabled: this.type === TYPE_TASK\r\n          }\r\n        }\r\n      }\r\n    };\r\n    this.state = {\r\n      data: props.data,\r\n      type: this.type,\r\n      manipulationActive:\r\n        this.props.manipulationActive !== undefined\r\n          ? this.props.manipulationActive\r\n          : true\r\n    };\r\n  }\r\n\r\n  locales = {\r\n    uk: {\r\n      edit: \"Редагувати\",\r\n      del: \"Видалити обране\",\r\n      back: \"Назад\",\r\n      addNode: \"Додати вершину\",\r\n      addEdge: \"Додати зв'язок\",\r\n      editNode: \"Редагувати вершину\",\r\n      editEdge: \"Редагувати зв'язок\",\r\n      addDescription: \"Натисніть на пустому місці аби додати вершину.\",\r\n      edgeDescription:\r\n        \"Аби з'єднати вершини клікніть по початковій вершині та по кінцевій.\",\r\n      editEdgeDescription:\r\n        \"Click on the control points and drag them to a node to connect to it.\",\r\n      createEdgeError: \"Cannot link edges to a cluster.\",\r\n      deleteClusterError: \"Clusters cannot be deleted.\",\r\n      editClusterError: \"Clusters cannot be edited.\"\r\n    }\r\n  };\r\n\r\n  params = (data, callback, mode, type) => {\r\n    const isEdit = mode === \"edit\";\r\n    const isEdge = type === \"зв'язку\";\r\n    const { nodes } = this.state.data;\r\n    const lastId = nodes.map(node => node.id).sort((a, b) => b - a)[0];\r\n    const number = isEdit ? data.number : !isNaN(lastId) ? lastId + 1 : 0;\r\n    const weight = this.getWeight(type, isEdit, data);\r\n    if (!weight) return;\r\n    const label = `${\r\n      !isEdge\r\n        ? this.state.type === TYPE_CS\r\n          ? `${number}`\r\n          : `${number}\\n — \\n${weight}`\r\n        : this.state.type === TYPE_CS\r\n        ? ``\r\n        : `${weight}`\r\n    }`;\r\n    data.number = number;\r\n    data.weight = weight;\r\n    data.label = label;\r\n    if (!isEdit && !isEdge) {\r\n      data.id = number;\r\n    }\r\n    try {\r\n      return callback(data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  getWeight(type, isEdit, data) {\r\n    if (this.state.type === TYPE_CS) return ` `;\r\n    let weight = prompt(`Вага ${type}`, isEdit ? data.weight : ``);\r\n    if (!weight) return alert(`\"Вагу ${type} не задано!\"`);\r\n    weight = parseInt(weight);\r\n    if (isNaN(weight)) return alert(`Невірний формат ваги ${type}!`);\r\n    if (weight <= 0)\r\n      return alert(`Вага не може бути негативною чи дорівнювати 0`);\r\n    return weight;\r\n  }\r\n\r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    const { edges, nodes } = this.props.data;\r\n    const { edges: edgesP, nodes: nodesP } = prevProps.data;\r\n    if (!edgesP || !nodesP) return true;\r\n    return edges.length !== edgesP.length || nodes.length !== nodesP.length;\r\n  }\r\n\r\n  onDoubleClick = params => {\r\n    const { nodes, edges } = params;\r\n    const {\r\n      data: { nodes: nodesS, edges: edgesS },\r\n      type\r\n    } = this.state;\r\n    if (type === TYPE_CS) return;\r\n    if (nodes.length > 0) {\r\n      const node = nodesS.get(nodes[0]);\r\n      const weight = this.getWeight(\"вершини\", true, { weight: node.weight });\r\n      if (!weight) return;\r\n      const label = `${node.id}\\n—\\n${weight}`;\r\n      nodesS.update({ ...node, weight, label });\r\n    } else {\r\n      const edge = edgesS.get(edges[0]);\r\n      const weight = this.getWeight(\"зв'язку\", true, { weight: edge.weight });\r\n      if (!weight) return;\r\n      const label = `${weight}`;\r\n      edgesS.update({ ...edge, weight, label });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.network = new Network(\r\n      this.appRef.current,\r\n      this.props.data,\r\n      this.options\r\n    );\r\n    if (this.state.type === TYPE_TASK && this.state.manipulationActive)\r\n      this.network.on(\"doubleClick\", params => this.onDoubleClick(params));\r\n    this.setState({\r\n      data: {\r\n        nodes: this.network.body.data.nodes,\r\n        edges: this.network.body.data.edges\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (!snapshot) return;\r\n    this.network = new Network(\r\n      this.appRef.current,\r\n      this.props.data,\r\n      this.options\r\n    );\r\n    if (this.state.type === TYPE_TASK && this.state.manipulationActive)\r\n      this.network.on(\"doubleClick\", params => this.onDoubleClick(params));\r\n    this.setState({\r\n      data: {\r\n        nodes: this.network.body.data.nodes,\r\n        edges: this.network.body.data.edges\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"my-3\"\r\n        style={{ height: \"600px\", width: \"100%\" }}\r\n        ref={this.appRef}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GraphView;\r\n","import React from \"react\";\r\n\r\nconst Message = ({ type, message }) => {\r\n  return (\r\n    <div\r\n      className={`alert ${type === \"error\" ? \"alert-danger\" : \"alert-info\"}`}\r\n    >\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { Component } from \"react\";\r\n\r\nclass GenerationForm extends Component {\r\n  state = {\r\n    vertexNumb: 5,\r\n    maxWeight: 10,\r\n    minWeight: 1,\r\n    correlation: 0.5\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { vertexNumb, maxWeight, minWeight, correlation } = this.state;\r\n    return (\r\n      <div className=\"my-4\">\r\n        <h4>Генератор графу задач</h4>\r\n        <form className=\"py-4\">\r\n          <div className=\"input-group mb-2\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text\">Кількість вершин (задач): </div>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              autoComplete=\"off\"\r\n              name=\"vertexNumb\"\r\n              value={vertexNumb}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-2\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text\">Максимальна вага вершини: </div>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"maxWeight\"\r\n              min=\"1\"\r\n              autoComplete=\"off\"\r\n              value={maxWeight}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-2\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text\">Мінімальна вага вершини: </div>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              min=\"1\"\r\n              autoComplete=\"off\"\r\n              name=\"minWeight\"\r\n              value={minWeight}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-2\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text\">Зв'язність: </div>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              autoComplete=\"off\"\r\n              step=\"0.01\"\r\n              min=\"0\"\r\n              max=\"1\"\r\n              name=\"correlation\"\r\n              value={correlation}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary float-right\"\r\n            onClick={e => this.props.onGenerate(e, this.state)}\r\n          >\r\n            Згенерувати\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerationForm;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { DataSet } from \"vis\";\r\nimport GraphView from \"../components/GraphView\";\r\nimport Message from \"../components/Message\";\r\nimport GenerationForm from \"../components/GenerationForm\";\r\n\r\nconst ID = () =>\r\n  \"_\" +\r\n  Math.random()\r\n    .toString(36)\r\n    .substr(2, 9);\r\n\r\nclass GraphEditorPage extends Component {\r\n  state = {\r\n    graphName: \"\",\r\n    data: {\r\n      edges: new DataSet(),\r\n      nodes: new DataSet()\r\n    }\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.errorRef = React.createRef();\r\n    this.graphRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id, name } = this.props;\r\n    if (!id) return;\r\n    let graphs = localStorage.getItem(`${name}`);\r\n    if (!graphs) return;\r\n    graphs = JSON.parse(graphs);\r\n    const graph = graphs.filter(item => item.id === id)[0];\r\n    const { edges, nodes } = graph.data;\r\n    const data = { edges: new DataSet(edges), nodes: new DataSet(nodes) };\r\n    this.setState({ graphName: graph.name, data });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.error) {\r\n      window.scrollTo(0, this.errorRef.current.offsetTop);\r\n    }\r\n    if (this.state.generated) {\r\n      window.scrollTo(0, this.graphRef.current.offsetTop);\r\n    }\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const { history, id, name } = this.props;\r\n    e.preventDefault();\r\n    this.graphToMatrix();\r\n    if (name !== \"cs\" && this.isCyclic()) {\r\n      this.setState({ error: \"Циклічний граф!\" });\r\n      return;\r\n    }\r\n    if (name !== \"tasks\" && this.isConnected()) {\r\n      this.setState({ error: \"Граф незв'язний!\" });\r\n      return;\r\n    }\r\n    let { nodes, edges } = this.state.data;\r\n    nodes = nodes._data ? Object.values(nodes._data) : [];\r\n    edges = edges._data ? Object.values(edges._data) : [];\r\n    const data = { nodes, edges };\r\n    const { graphName } = this.state;\r\n    let graphs = localStorage.getItem(`${name}`);\r\n    graphs = !graphs ? [] : JSON.parse(graphs);\r\n    let oldTask = {};\r\n    if (id) oldTask = graphs.filter(item => item.id === id)[0];\r\n    const task = {\r\n      name: graphName,\r\n      data: data,\r\n      id: id ? oldTask.id : ID(),\r\n      created: id ? oldTask.created : new Date(),\r\n      updated: new Date()\r\n    };\r\n    if (id) graphs = [...graphs.filter(item => item.id !== id), task];\r\n    else graphs.push(task);\r\n    localStorage.setItem(`${name}`, JSON.stringify(graphs));\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const next = urlParams.has(\"next\") ? urlParams.get(\"next\") : null;\r\n    console.log(next);\r\n    history.push(`${next ? next : `/${name}`}`);\r\n  };\r\n\r\n  isConnected() {\r\n    const { nodes, edges } = this.state.data;\r\n    const connectedNodes = {};\r\n    const graph = {};\r\n    nodes.forEach(node => {\r\n      connectedNodes[node.id] = [];\r\n    });\r\n    edges.forEach(edge => {\r\n      connectedNodes[edge.from].push(edge.to);\r\n      connectedNodes[edge.to].push(edge.from);\r\n    });\r\n    for (var id in connectedNodes) {\r\n      if (!graph[id]) graph[id] = {};\r\n      // eslint-disable-next-line\r\n      connectedNodes[id].forEach(function(aid) {\r\n        graph[id][aid] = 1;\r\n        if (!graph[aid]) graph[aid] = {};\r\n        graph[aid][id] = 1;\r\n      });\r\n    }\r\n    let found = false;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const node = nodes.get(i);\r\n      if (!node) continue;\r\n      const paths = this.isConnectedUtil(node.id, graph);\r\n      if (Object.keys(paths).length !== Object.keys(graph).length) {\r\n        found = true;\r\n        break;\r\n      }\r\n    }\r\n    return found;\r\n  }\r\n\r\n  isConnectedUtil(s, graph) {\r\n    const solutions = {};\r\n    solutions[s] = [];\r\n    solutions[s].dist = 0;\r\n\r\n    while (true) {\r\n      let parent = null;\r\n      let nearest = null;\r\n      let dist = Infinity;\r\n      for (let n in solutions) {\r\n        if (!solutions[n]) continue;\r\n        const ndist = solutions[n].dist;\r\n        const adj = graph[n];\r\n        for (let a in adj) {\r\n          if (solutions[a]) continue;\r\n          const d = adj[a] + ndist;\r\n          if (d < dist) {\r\n            parent = solutions[n];\r\n            nearest = a;\r\n            dist = d;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (dist === Infinity) {\r\n        break;\r\n      }\r\n\r\n      solutions[nearest] = parent.concat(nearest);\r\n      solutions[nearest].dist = dist;\r\n    }\r\n\r\n    return solutions;\r\n  }\r\n\r\n  graphToMatrix() {\r\n    let { nodes, edges } = this.state.data;\r\n    this.matrix = {};\r\n    nodes.forEach(node => {\r\n      this.matrix[node.id] = [];\r\n    });\r\n    edges.forEach(edge => {\r\n      this.matrix[edge.from].push(edge.to);\r\n    });\r\n  }\r\n\r\n  isCyclic() {\r\n    const graphNodes = Object.keys(this.matrix);\r\n    const visited = {};\r\n    const recStack = {};\r\n\r\n    for (let i = 0; i < graphNodes.length; i++) {\r\n      const node = graphNodes[i];\r\n      const cycleCheck = this.cyclicUtil(node, visited, recStack);\r\n      if (cycleCheck !== -1) return { from: parseInt(node), to: cycleCheck };\r\n    }\r\n    return false;\r\n  }\r\n\r\n  cyclicUtil(index, visited, recStack) {\r\n    if (!visited[index]) {\r\n      visited[index] = true;\r\n      recStack[index] = true;\r\n      const nodeNeighbors = this.matrix[index];\r\n      for (let i = 0; i < nodeNeighbors.length; i++) {\r\n        const currentNode = nodeNeighbors[i];\r\n        if (\r\n          !visited[currentNode] &&\r\n          this.cyclicUtil(currentNode, visited, recStack)\r\n        ) {\r\n          return -1;\r\n        } else if (recStack[currentNode]) {\r\n          return currentNode;\r\n        }\r\n      }\r\n    }\r\n    recStack[index] = false;\r\n    return -1;\r\n  }\r\n\r\n  handleGenerate = (e, formData) => {\r\n    e.preventDefault();\r\n    const { vertexNumb, maxWeight, minWeight, correlation } = formData;\r\n    this.generate(vertexNumb, maxWeight, minWeight, correlation);\r\n  };\r\n\r\n  generate = (vertexNumb, maxWeight, minWeight, correlation) => {\r\n    const { edges, nodes } = this.state.data;\r\n    const newNodes = [];\r\n    for (let i = 0; i < vertexNumb; i++) {\r\n      const weight = this._getRandomInt(minWeight, maxWeight);\r\n      newNodes.push({\r\n        id: i,\r\n        number: i,\r\n        weight,\r\n        label: `${i}\\n—\\n${weight}`,\r\n        x: this._getRandomInt(-500, 500),\r\n        y: this._getRandomInt(-500, 500)\r\n      });\r\n    }\r\n    const weights = newNodes.reduce((sum, node) => (sum += node.weight), 0);\r\n    const lengths = Math.round((weights * (1 - correlation)) / correlation);\r\n    const matrix = [];\r\n    const arr = [];\r\n    for (let i = 0; i < vertexNumb; i++) arr.push(0);\r\n    for (let i = 0; i < vertexNumb; i++) matrix.push(arr.slice());\r\n    let cur_l_w = 0;\r\n    while (cur_l_w < lengths) {\r\n      let number1 = this._getRandomInt(0, vertexNumb - 1);\r\n      let number2 = this._getRandomInt(0, vertexNumb - 1);\r\n      if (number1 === number2) number2 = number1 + 1;\r\n      if (matrix[number2][number1] > 0) {\r\n        const tmp = number1;\r\n        number1 = number2;\r\n        number2 = tmp;\r\n      }\r\n      matrix[number1][number2] += 1;\r\n      cur_l_w += 1;\r\n    }\r\n    const newEdges = [];\r\n    matrix.forEach((arr, i) => {\r\n      arr.forEach((value, j) => {\r\n        if (value > 0)\r\n          newEdges.push({ from: i, to: j, weight: value, label: `${value}` });\r\n      });\r\n    });\r\n    nodes.clear();\r\n    edges.clear();\r\n    nodes.add(newNodes);\r\n    edges.add(newEdges);\r\n    this.graphToMatrix();\r\n    let cycle = this.isCyclic();\r\n    while (cycle) {\r\n      // console.log(cycle);\r\n      // eslint-disable-next-line\r\n      edges.forEach(edge => {\r\n        console.log(\r\n          `${JSON.stringify(edge)}, cycle: ${JSON.stringify(\r\n            cycle\r\n          )} ${edge.from === cycle.from && edge.to === cycle.to}`\r\n        );\r\n        if (edge.from === cycle.from && edge.to === cycle.to) {\r\n          const weight = edge.weight;\r\n          edges.remove(edge.id);\r\n          const ids = edges.getIds();\r\n          const randomEdgeId = ids[this._getRandomInt(0, ids.length)];\r\n          console.log(edges.get(randomEdgeId));\r\n          const randowEdge = edges.get(randomEdgeId);\r\n          edges.update({\r\n            id: randomEdgeId,\r\n            weight: randowEdge.weight + weight,\r\n            label: `${randowEdge.weight + weight}`\r\n          });\r\n          console.log(edges.get(randomEdgeId));\r\n          this.graphToMatrix();\r\n          cycle = this.isCyclic();\r\n          return;\r\n        }\r\n      });\r\n    }\r\n    // if (this.isCyclic())\r\n    //   this.generate(vertexNumb, maxWeight, minWeight, correlation);\r\n    this.setState({\r\n      generated: true,\r\n      nodesWeightSum: weights,\r\n      edgesWeightSum: cur_l_w\r\n    });\r\n  };\r\n\r\n  _getRandomInt = (min, max) => {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      graphName,\r\n      data,\r\n      error,\r\n      edgesWeightSum,\r\n      nodesWeightSum,\r\n      generated\r\n    } = this.state;\r\n    const { name, id } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"my-4\">\r\n          <h4 className=\"my-4\">Редактор графу</h4>\r\n          <form>\r\n            <div className=\"form-group\" ref={this.errorRef}>\r\n              <input\r\n                name=\"graphName\"\r\n                autoComplete=\"off\"\r\n                required\r\n                value={graphName}\r\n                onChange={this.handleChange}\r\n                className=\"form-control\"\r\n                placeholder=\"Назва графу\"\r\n              />\r\n            </div>\r\n            {error && <Message type=\"error\" message={error} />}\r\n            <GraphView data={data} name={this.props.name} ref={this.graphRef} />\r\n            {generated && (\r\n              <div>{`Сумарна вага вершин графу: ${nodesWeightSum}, cумарна вага дуг графу: ${edgesWeightSum}`}</div>\r\n            )}\r\n            <input\r\n              type=\"submit\"\r\n              onClick={this.handleSubmit}\r\n              className=\"btn btn-primary float-right\"\r\n              value=\"Зберегти\"\r\n            />\r\n          </form>\r\n        </div>\r\n\r\n        {name === \"tasks\" && !id && (\r\n          <GenerationForm\r\n            onGenerate={(e, formData) => this.handleGenerate(e, formData)}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(GraphEditorPage);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrash,\r\n  faThList,\r\n  faPen,\r\n  faClone\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ListItem = ({ item, index, onDelete, onClone, name }) => {\r\n  return (\r\n    <tr>\r\n      <th scope=\"row\">{index + 1}</th>\r\n      <td>\r\n        <Link to={`/${name}/${item.id}`}>\r\n          {item.name ? item.name : \"Без імені\"}\r\n        </Link>\r\n      </td>\r\n      <td>\r\n        {new Date(item.created).toLocaleString(\"uk-UA\", {\r\n          year: \"numeric\",\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n          hour: \"numeric\",\r\n          minute: \"numeric\",\r\n          second: \"numeric\"\r\n        })}\r\n      </td>\r\n      <td>\r\n        {new Date(item.updated).toLocaleString(\"uk-UA\", {\r\n          year: \"numeric\",\r\n          month: \"long\",\r\n          day: \"numeric\",\r\n          hour: \"numeric\",\r\n          minute: \"numeric\",\r\n          second: \"numeric\"\r\n        })}\r\n      </td>\r\n      <td>\r\n        <div className=\"btn-group\" role=\"group\">\r\n          {name === \"tasks\" && (\r\n            <Link\r\n              to={`/tasks/${item.id}/queue`}\r\n              className=\"btn btn-primary btn-sm\"\r\n              title=\"Сформувати чергу\"\r\n            >\r\n              <FontAwesomeIcon icon={faThList} />\r\n            </Link>\r\n          )}\r\n          <Link\r\n            to={`/${name}/${item.id}`}\r\n            className=\"btn btn-primary btn-sm\"\r\n            title=\"Редагувати\"\r\n          >\r\n            <FontAwesomeIcon icon={faPen} />\r\n          </Link>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info btn-sm\"\r\n            onClick={() => onClone(item.id)}\r\n            title=\"Клонувати\"\r\n          >\r\n            <FontAwesomeIcon icon={faClone} />\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger btn-sm\"\r\n            onClick={() => onDelete(item.id)}\r\n            title=\"Видалити\"\r\n          >\r\n            <FontAwesomeIcon icon={faTrash} />\r\n          </button>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nconst GraphList = ({ list, onDelete, onClone, name }) => {\r\n  if (!list || list.length < 1)\r\n    return <h6 className=\"text-center my-2 text-secondary\">Список пустий</h6>;\r\n  const items = list\r\n    .sort((a, b) => new Date(b.created) - new Date(a.created))\r\n    .map((item, index) => (\r\n      <ListItem\r\n        key={item.id}\r\n        item={item}\r\n        index={index}\r\n        onDelete={onDelete}\r\n        onClone={onClone}\r\n        name={name}\r\n      />\r\n    ));\r\n  return (\r\n    <React.Fragment>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th style={{ width: \"10%\" }}>#</th>\r\n            <th style={{ width: \"30%\" }}>Ім'я</th>\r\n            <th style={{ width: \"25%\" }}>Створено</th>\r\n            <th style={{ width: \"25%\" }}>Оновлено</th>\r\n            <th style={{ width: \"10%\" }}>Операції</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{items}</tbody>\r\n      </table>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default GraphList;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrashAlt, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport GraphList from \"../components/GraphList\";\r\n\r\nconst ID = () =>\r\n  \"_\" +\r\n  Math.random()\r\n    .toString(36)\r\n    .substr(2, 9);\r\n\r\nclass HomePage extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    if (!this.props.name) return;\r\n    const graphs = localStorage.getItem(this.props.name);\r\n    if (!graphs) return this.setState({ graphs: [] });\r\n    this.setState({ graphs: JSON.parse(graphs) });\r\n  }\r\n\r\n  handleDelete = id => {\r\n    const deleteConfirmation = window.confirm(\"Дійсно бажаєте видалити граф?\");\r\n    if (!deleteConfirmation) return;\r\n    let graphs = this._getGraphs();\r\n    graphs = graphs.filter(item => item.id !== id);\r\n    localStorage.setItem(this.props.name, JSON.stringify(graphs));\r\n    this.setState({ graphs });\r\n  };\r\n\r\n  handleClone = id => {\r\n    let graphs = this._getGraphs();\r\n    const graph = { ...graphs.filter(graph => graph.id === id)[0] };\r\n    graph.name = `${graph.name} - копія`;\r\n    graph.id = ID();\r\n    const date = new Date();\r\n    graph.created = date;\r\n    graph.updated = date;\r\n    graphs = [...graphs, graph];\r\n    localStorage.setItem(this.props.name, JSON.stringify(graphs));\r\n    this.setState({ graphs });\r\n  };\r\n\r\n  handleDeleteAll = () => {\r\n    const deleteConf = window.confirm(\"Ви справді бажаєте видалити всі графи?\");\r\n    if (deleteConf) {\r\n      localStorage.setItem(this.props.name, []);\r\n      this.setState({ graphs: localStorage.getItem(this.props.name) });\r\n    }\r\n  };\r\n\r\n  handleNew = () => {\r\n    this.setState({ view: { showModal: true } });\r\n  };\r\n\r\n  _getGraphs = () => {\r\n    let graphs = localStorage.getItem(this.props.name);\r\n    if (!graphs) return;\r\n    graphs = JSON.parse(graphs);\r\n    return graphs;\r\n  };\r\n\r\n  render() {\r\n    const { graphs } = this.state;\r\n    const { name } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <h4 className=\"my-4\">\r\n          {this.props.title}\r\n          <div className=\"float-right btn-group\">\r\n            <Link to={`/${name}/new`} className=\"btn btn-primary\">\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </Link>\r\n            <button className=\"btn btn-danger\" onClick={this.handleDeleteAll}>\r\n              <FontAwesomeIcon icon={faTrashAlt} />\r\n            </button>\r\n          </div>\r\n        </h4>\r\n        <GraphList\r\n          name={name}\r\n          list={graphs}\r\n          onDelete={this.handleDelete}\r\n          onClone={this.handleClone}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <h4 className=\"h4\">Програмне забезпечення комп'ютерних систем-2</h4>\r\n      <hr />\r\n      <p className=\"lead\">\r\n        <b>Виконав:</b>\r\n        <br /> студент групи ІО-82мп <br /> Барабаш Т.А.\r\n      </p>\r\n      <Link to=\"/tasks\" className=\"btn btn-primary float-right\">\r\n        Почати роботу\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","class Queue {\r\n  constructor(method, data) {\r\n    this._method = method;\r\n    this._data = data;\r\n  }\r\n\r\n  run() {\r\n    let result;\r\n    switch (this._method) {\r\n      case 1:\r\n        result = this._run1();\r\n        break;\r\n      case 11:\r\n        result = this._run11();\r\n        break;\r\n      default:\r\n        throw new Error(`Unsupported algo`);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  _toMatrix(reverse) {\r\n    const { nodes, edges } = this._data;\r\n    const matrix = [];\r\n    edges.forEach(edge => {\r\n      if (!reverse)\r\n        matrix[edge.from] = {\r\n          ...matrix[edge.from],\r\n          [edge.to]: nodes.get(edge.to).weight\r\n        };\r\n      else\r\n        matrix[edge.to] = {\r\n          ...matrix[edge.to],\r\n          [edge.from]: nodes.get(edge.from).weight\r\n        };\r\n    });\r\n    return matrix;\r\n  }\r\n\r\n  _toEdgesArray(reverse) {\r\n    const { edges } = this._data;\r\n    const graph = [];\r\n    edges.forEach(edge => {\r\n      graph.push(!reverse ? [edge.from, edge.to] : [edge.to, edge.from]);\r\n    });\r\n    return graph;\r\n  }\r\n\r\n  _toUndirectedMatrix() {\r\n    const { nodes, edges } = this._data;\r\n    const matrix = [];\r\n    edges.forEach(edge => {\r\n      matrix[edge.to] = {\r\n        ...matrix[edge.to],\r\n        [edge.from]: nodes.get(edge.from).weight\r\n      };\r\n      matrix[edge.from] = {\r\n        ...matrix[edge.from],\r\n        [edge.to]: nodes.get(edge.to).weight\r\n      };\r\n    });\r\n    return matrix;\r\n  }\r\n\r\n  _getPaths(from, to, reverse) {\r\n    return paths({ graph: this._toEdgesArray(reverse), from, to });\r\n  }\r\n\r\n  _BFS(reverse = false) {\r\n    const { nodes } = this._data;\r\n    const allNodes = Object.keys(nodes._data);\r\n    const matrixNodes = Object.keys(this._toMatrix(reverse));\r\n    const endNodes = allNodes.filter(item => !matrixNodes.includes(item));\r\n    const weights = {};\r\n    const maxPaths = {};\r\n    matrixNodes.forEach(i => {\r\n      i = parseInt(i);\r\n      let maxWeight = 0;\r\n      let maxPath = [];\r\n      endNodes.forEach(j => {\r\n        j = parseInt(j);\r\n        const paths = this._getPaths(i, j, reverse);\r\n        paths.forEach(path => {\r\n          const weight = path.reduce(\r\n            (sum, node) => sum + nodes.get(node).weight,\r\n            reverse ? -nodes.get(i).weight : 0\r\n          );\r\n          if (maxWeight < weight) {\r\n            maxWeight = weight;\r\n            maxPath = path;\r\n          }\r\n        });\r\n        weights[j] = !reverse ? nodes.get(j).weight : 0;\r\n        maxPaths[j] = [j];\r\n      });\r\n      weights[i] = maxWeight;\r\n      maxPaths[i] = maxPath;\r\n    });\r\n    return { weights, maxPaths };\r\n  }\r\n\r\n  _run1() {\r\n    const { nodes } = this._data;\r\n    const { weights, maxPaths } = this._BFS();\r\n    const graphWeight = Math.max(...Object.values(weights));\r\n    const lengthes = Object.values(maxPaths).map(i => i.length);\r\n    const graphLength = Math.max(...lengthes);\r\n    let result = [];\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const value = weights[i] / graphWeight + lengthes[i] / graphLength;\r\n      result.push({ number: i, value, names: [`Pr`] });\r\n    }\r\n    const sortedResult = result.sort((a, b) => b.value - a.value);\r\n    return sortedResult;\r\n  }\r\n\r\n  _run11() {\r\n    const adjMatrix = this._toUndirectedMatrix();\r\n    const { nodes } = this._data;\r\n    const allNodes = Object.keys(nodes._data);\r\n    const { weights } = this._BFS(true);\r\n    const result = allNodes.map(node => {\r\n      return {\r\n        number: node,\r\n        value: adjMatrix[node] ? Object.keys(adjMatrix[node]).length : 0,\r\n        weights: weights[node],\r\n        names: [`Sv`, `Tкр.поч.`]\r\n      };\r\n    });\r\n    const sortedResult = result.sort((a, b) => {\r\n      if (a.value === b.value) {\r\n        return a.weights - b.weights;\r\n      }\r\n      return b.value - a.value;\r\n    });\r\n    return sortedResult;\r\n  }\r\n}\r\n\r\nfunction paths({ graph = [], from, to }, path = []) {\r\n  const linkedNodes = memoize(nodes.bind(null, graph));\r\n  return explore(from, to);\r\n\r\n  function explore(currNode, to, paths = []) {\r\n    path.push(currNode);\r\n    for (let linkedNode of linkedNodes(currNode)) {\r\n      if (linkedNode === to) {\r\n        let result = path.slice();\r\n        result.push(to);\r\n        paths.push(result);\r\n        continue;\r\n      }\r\n      if (\r\n        !hasEdgeBeenFollowedInPath({\r\n          edge: {\r\n            from: currNode,\r\n            to: linkedNode\r\n          },\r\n          path\r\n        })\r\n      ) {\r\n        explore(linkedNode, to, paths);\r\n      }\r\n    }\r\n    path.pop();\r\n    return paths;\r\n  }\r\n}\r\nfunction nodes(graph, node) {\r\n  return graph.reduce((p, c) => {\r\n    c[0] === node && p.push(c[1]);\r\n    return p;\r\n  }, []);\r\n}\r\nfunction hasEdgeBeenFollowedInPath({ edge, path }) {\r\n  var indices = allIndices(path, edge.from);\r\n  return indices.some(i => path[i + 1] === edge.to);\r\n}\r\nfunction allIndices(arr, val) {\r\n  var indices = [],\r\n    i;\r\n  for (i = 0; i < arr.length; i++) {\r\n    if (arr[i] === val) {\r\n      indices.push(i);\r\n    }\r\n  }\r\n  return indices;\r\n}\r\nfunction memoize(fn) {\r\n  const cache = new Map();\r\n  return function() {\r\n    var key = JSON.stringify(arguments);\r\n    var cached = cache.get(key);\r\n    if (cached) {\r\n      return cached;\r\n    }\r\n    cached = fn.apply(this, arguments);\r\n    cache.set(key, cached);\r\n    return cached;\r\n  };\r\n}\r\n\r\nexport default Queue;\r\n","import React from \"react\";\r\n\r\nconst QueueResultTable = function({ data }) {\r\n  return (\r\n    <table className=\"table my-4\">\r\n      <thead>\r\n        <tr>\r\n          <th>Номер у черзі</th>\r\n          <th>Номер вершини</th>\r\n          <th>Показник</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map(function(queue, index) {\r\n          console.log(queue);\r\n          return (\r\n            <tr key={index} data-item={queue}>\r\n              <td>{index + 1}</td>\r\n              <td>{queue.number}</td>\r\n              <td>\r\n                {queue.names.length === 1\r\n                  ? `${queue.names} = ${queue.value.toFixed(2)}`\r\n                  : `${queue.names[0]} = ${queue.value}, ${queue.names[1]} = ${\r\n                      queue.weights\r\n                    }`}\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default QueueResultTable;\r\n","import React, { Component, createRef } from \"react\";\r\nimport Queue from \"../models/Queue\";\r\nimport QueueResultTable from \"./QueueResultTable\";\r\n\r\nclass QueueView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.resultsRef = createRef();\r\n    this.state = {\r\n      data: props.data,\r\n      results: [],\r\n      algo: -1,\r\n      description: {\r\n        1: `У порядку спадання пронормованої суми критичних по часу і по кількості вершин шляхів до кінця графа задачі.`,\r\n        11: `У порядку спадання зв’язності вершин, а при рівних значеннях – в порядку зростання критичного по кількості вершин шляхів від початку графа задачі. `\r\n      }\r\n    };\r\n  }\r\n\r\n  handleOptionChange = e => {\r\n    const algo = parseInt(e.target.value);\r\n    this.setState({ algo });\r\n    const queue = new Queue(algo, this.props.data);\r\n    const results = queue.run();\r\n    window.scrollTo(0, this.resultsRef.current.offsetTop);\r\n    this.setState({ results });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.results.length > 0) {\r\n      window.scrollTo(0, this.resultsRef.current.offsetTop);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { results, algo, description } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"algo\">\r\n            <h5>Алгоритм: </h5>\r\n          </label>\r\n          <select\r\n            className=\"custom-select\"\r\n            name=\"algo\"\r\n            value={algo}\r\n            onChange={this.handleOptionChange}\r\n          >\r\n            <option value=\"-1\" disabled>\r\n              Обрати\r\n            </option>\r\n            <option value=\"1\">1</option>\r\n            <option value=\"11\">11</option>\r\n          </select>\r\n        </div>\r\n        <div ref={this.resultsRef}>\r\n          {algo > 0 && (\r\n            <div>\r\n              <h5>Опис алгоритму: </h5>\r\n              {description[algo]}\r\n              <h5 className=\"my-2\">Результат: </h5>\r\n              <QueueResultTable data={results} />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueueView;\r\n","import React, { Component } from \"react\";\r\nimport { DataSet } from \"vis\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GraphView from \"../components/GraphView\";\r\nimport QueueView from \"../components/QueueView\";\r\n\r\nclass QueuePage extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const id = props.id;\r\n    let graphs = localStorage.getItem(\"tasks\");\r\n    if (!graphs) return;\r\n    graphs = JSON.parse(graphs);\r\n    const graph = graphs.filter(item => item.id === id)[0];\r\n    const { edges, nodes } = graph.data;\r\n    const data = { edges: new DataSet(edges), nodes: new DataSet(nodes) };\r\n    this.state.data = data;\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    const { id } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <h4>\r\n          Формування черги задач\r\n          <div className=\"float-right btn-group\">\r\n            <Link\r\n              to={`/tasks/${id}?next=${window.location.pathname}`}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Редагувати граф\r\n            </Link>\r\n          </div>\r\n        </h4>\r\n        <GraphView name=\"tasks\" data={data} manipulationActive={false} />\r\n        <QueueView data={data} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QueuePage;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { GraphEditorPage, GraphListPage, QueuePage, HomePage } from \"../pages\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <div className=\"container my-4\">\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          key=\"home-page\"\r\n          path=\"/\"\r\n          render={() => {\r\n            document.title = `ПЗКС - 2`;\r\n            return <HomePage />;\r\n          }}\r\n        />\r\n        <Route\r\n          key=\"tasks-graphs\"\r\n          exact\r\n          path=\"/tasks\"\r\n          render={() => {\r\n            document.title = `Графи задач | ПЗКС - 2`;\r\n            return <GraphListPage name=\"tasks\" title=\"Графи задач\" />;\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/tasks/new\"\r\n          render={() => {\r\n            document.title = `Новий граф задач | ПЗКС - 2`;\r\n            return <GraphEditorPage name=\"tasks\" />;\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/tasks/:id\"\r\n          exact\r\n          type=\"task\"\r\n          render={props => {\r\n            document.title = `Редактор графу задач | ПЗКС - 2`;\r\n            return <GraphEditorPage name=\"tasks\" id={props.match.params.id} />;\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/tasks/:id*/queue\"\r\n          exact\r\n          type=\"task\"\r\n          render={props => {\r\n            document.title = `Формування черги задач | ПЗКС - 2`;\r\n            return <QueuePage id={props.match.params.id} />;\r\n          }}\r\n        />\r\n        <Route\r\n          key=\"cs-graphs\"\r\n          exact\r\n          path=\"/cs\"\r\n          render={() => {\r\n            document.title = `Графи комп'ютерних систем | ПЗКС - 2`;\r\n            return (\r\n              <GraphListPage name=\"cs\" title=\"Графи комп'ютерної системи\" />\r\n            );\r\n          }}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/cs/new\"\r\n          render={() => {\r\n            document.title = `Новий граф комп'ютерної системи | ПЗКС - 2`;\r\n            return <GraphEditorPage name=\"cs\" />;\r\n          }}\r\n        />\r\n        <Route\r\n          path=\"/cs/:id\"\r\n          type=\"task\"\r\n          render={props => {\r\n            document.title = `Редактор графу комп'ютерної системи | ПЗКС - 2`;\r\n            return <GraphEditorPage name=\"cs\" id={props.match.params.id} />;\r\n          }}\r\n        />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faIgloo } from \"@fortawesome/free-solid-svg-icons\";\nimport Navbar from \"./containers/Navbar\";\nimport Routes from \"./containers/Routes\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nlibrary.add(faIgloo);\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <React.Fragment>\n          <Navbar />\n          <Routes />\n        </React.Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}